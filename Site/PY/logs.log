2024-05-08 00:53:47,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 00:53:47,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 00:53:47,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 00:53:47,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 00:53:47,987:INFO:PyCaret RegressionExperiment
2024-05-08 00:53:47,987:INFO:Logging name: reg-default-name
2024-05-08 00:53:47,987:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-08 00:53:47,987:INFO:version 3.3.2
2024-05-08 00:53:47,987:INFO:Initializing setup()
2024-05-08 00:53:47,987:INFO:self.USI: 3d99
2024-05-08 00:53:47,987:INFO:self._variable_keys: {'transform_target_param', 'idx', 'html_param', 'n_jobs_param', 'gpu_n_jobs_param', 'data', 'y', 'y_test', 'target_param', '_ml_usecase', 'y_train', 'X_train', 'X', '_available_plots', 'memory', 'fold_generator', 'X_test', 'USI', 'seed', 'exp_name_log', 'exp_id', 'logging_param', 'fold_groups_param', 'pipeline', 'log_plots_param', 'fold_shuffle_param', 'gpu_param'}
2024-05-08 00:53:47,987:INFO:Checking environment
2024-05-08 00:53:47,987:INFO:python_version: 3.11.5
2024-05-08 00:53:47,987:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-08 00:53:47,987:INFO:machine: AMD64
2024-05-08 00:53:47,997:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-08 00:53:47,997:INFO:Memory: svmem(total=7947747328, available=456577024, percent=94.3, used=7491170304, free=456577024)
2024-05-08 00:53:47,997:INFO:Physical Core: 6
2024-05-08 00:53:47,997:INFO:Logical Core: 6
2024-05-08 00:53:47,997:INFO:Checking libraries
2024-05-08 00:53:47,997:INFO:System:
2024-05-08 00:53:47,997:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-08 00:53:47,997:INFO:executable: C:\Users\Ana\anaconda3\python.exe
2024-05-08 00:53:47,997:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-08 00:53:47,997:INFO:PyCaret required dependencies:
2024-05-08 00:53:49,280:INFO:                 pip: 23.2.1
2024-05-08 00:53:49,280:INFO:          setuptools: 68.0.0
2024-05-08 00:53:49,280:INFO:             pycaret: 3.3.2
2024-05-08 00:53:49,280:INFO:             IPython: 8.15.0
2024-05-08 00:53:49,280:INFO:          ipywidgets: 8.0.4
2024-05-08 00:53:49,280:INFO:                tqdm: 4.65.0
2024-05-08 00:53:49,280:INFO:               numpy: 1.24.3
2024-05-08 00:53:49,280:INFO:              pandas: 2.0.3
2024-05-08 00:53:49,280:INFO:              jinja2: 3.1.2
2024-05-08 00:53:49,280:INFO:               scipy: 1.11.1
2024-05-08 00:53:49,280:INFO:              joblib: 1.2.0
2024-05-08 00:53:49,280:INFO:             sklearn: 1.4.2
2024-05-08 00:53:49,280:INFO:                pyod: 1.1.3
2024-05-08 00:53:49,280:INFO:            imblearn: 0.12.2
2024-05-08 00:53:49,280:INFO:   category_encoders: 2.6.3
2024-05-08 00:53:49,280:INFO:            lightgbm: 4.3.0
2024-05-08 00:53:49,280:INFO:               numba: 0.57.1
2024-05-08 00:53:49,280:INFO:            requests: 2.31.0
2024-05-08 00:53:49,280:INFO:          matplotlib: 3.7.2
2024-05-08 00:53:49,280:INFO:          scikitplot: 0.3.7
2024-05-08 00:53:49,280:INFO:         yellowbrick: 1.5
2024-05-08 00:53:49,280:INFO:              plotly: 5.22.0
2024-05-08 00:53:49,280:INFO:    plotly-resampler: Not installed
2024-05-08 00:53:49,280:INFO:             kaleido: 0.2.1
2024-05-08 00:53:49,280:INFO:           schemdraw: 0.15
2024-05-08 00:53:49,280:INFO:         statsmodels: 0.14.0
2024-05-08 00:53:49,280:INFO:              sktime: 0.26.0
2024-05-08 00:53:49,280:INFO:               tbats: 1.1.3
2024-05-08 00:53:49,280:INFO:            pmdarima: 2.0.4
2024-05-08 00:53:49,280:INFO:              psutil: 5.9.0
2024-05-08 00:53:49,280:INFO:          markupsafe: 2.1.1
2024-05-08 00:53:49,280:INFO:             pickle5: Not installed
2024-05-08 00:53:49,280:INFO:         cloudpickle: 2.2.1
2024-05-08 00:53:49,280:INFO:         deprecation: 2.1.0
2024-05-08 00:53:49,280:INFO:              xxhash: 2.0.2
2024-05-08 00:53:49,280:INFO:           wurlitzer: Not installed
2024-05-08 00:53:49,280:INFO:PyCaret optional dependencies:
2024-05-08 00:53:49,300:INFO:                shap: Not installed
2024-05-08 00:53:49,300:INFO:           interpret: Not installed
2024-05-08 00:53:49,300:INFO:                umap: Not installed
2024-05-08 00:53:49,300:INFO:     ydata_profiling: Not installed
2024-05-08 00:53:49,300:INFO:  explainerdashboard: Not installed
2024-05-08 00:53:49,300:INFO:             autoviz: Not installed
2024-05-08 00:53:49,300:INFO:           fairlearn: Not installed
2024-05-08 00:53:49,300:INFO:          deepchecks: Not installed
2024-05-08 00:53:49,300:INFO:             xgboost: Not installed
2024-05-08 00:53:49,300:INFO:            catboost: Not installed
2024-05-08 00:53:49,300:INFO:              kmodes: Not installed
2024-05-08 00:53:49,300:INFO:             mlxtend: Not installed
2024-05-08 00:53:49,300:INFO:       statsforecast: Not installed
2024-05-08 00:53:49,300:INFO:        tune_sklearn: Not installed
2024-05-08 00:53:49,300:INFO:                 ray: Not installed
2024-05-08 00:53:49,300:INFO:            hyperopt: Not installed
2024-05-08 00:53:49,300:INFO:              optuna: Not installed
2024-05-08 00:53:49,300:INFO:               skopt: Not installed
2024-05-08 00:53:49,300:INFO:              mlflow: Not installed
2024-05-08 00:53:49,300:INFO:              gradio: Not installed
2024-05-08 00:53:49,300:INFO:             fastapi: Not installed
2024-05-08 00:53:49,300:INFO:             uvicorn: Not installed
2024-05-08 00:53:49,300:INFO:              m2cgen: Not installed
2024-05-08 00:53:49,300:INFO:           evidently: Not installed
2024-05-08 00:53:49,300:INFO:               fugue: Not installed
2024-05-08 00:53:49,300:INFO:           streamlit: Not installed
2024-05-08 00:53:49,300:INFO:             prophet: Not installed
2024-05-08 00:53:49,300:INFO:None
2024-05-08 00:53:49,300:INFO:Set up data.
2024-05-08 00:53:49,310:INFO:Set up folding strategy.
2024-05-08 00:53:49,310:INFO:Set up train/test split.
2024-05-08 00:53:49,320:INFO:Set up index.
2024-05-08 00:53:49,320:INFO:Assigning column types.
2024-05-08 00:53:49,320:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-08 00:53:49,320:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,330:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,450:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,450:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,450:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,460:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,520:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,575:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,577:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-08 00:53:49,583:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,588:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,697:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,707:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,771:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,820:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-08 00:53:49,830:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,890:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:49,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:49,950:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,010:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,068:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-08 00:53:50,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,258:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,313:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-08 00:53:50,399:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,451:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-08 00:53:50,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,576:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-08 00:53:50,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:50,833:INFO:Preparing preprocessing pipeline...
2024-05-08 00:53:50,833:INFO:Set up simple imputation.
2024-05-08 00:53:50,834:INFO:Set up column name cleaning.
2024-05-08 00:53:50,871:INFO:Finished creating preprocessing pipeline.
2024-05-08 00:53:50,878:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-08 00:53:50,878:INFO:Creating final display dataframe.
2024-05-08 00:53:50,956:INFO:Setup _display_container:                     Description             Value
0                    Session id              2070
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3d99
2024-05-08 00:53:51,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:51,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:51,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:51,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-08 00:53:51,220:INFO:setup() successfully completed in 3.24s...............
2024-05-08 00:53:51,230:INFO:Initializing create_model()
2024-05-08 00:53:51,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-08 00:53:51,230:INFO:Checking exceptions
2024-05-08 00:53:51,234:INFO:Importing libraries
2024-05-08 00:53:51,234:INFO:Copying training dataset
2024-05-08 00:53:51,237:INFO:Defining folds
2024-05-08 00:53:51,237:INFO:Declaring metric variables
2024-05-08 00:53:51,237:INFO:Importing untrained model
2024-05-08 00:53:51,237:INFO:Extra Trees Regressor Imported successfully
2024-05-08 00:53:51,239:INFO:Starting cross validation
2024-05-08 00:53:51,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-08 00:54:00,164:INFO:Calculating mean and std
2024-05-08 00:54:00,164:INFO:Creating metrics dataframe
2024-05-08 00:54:00,164:INFO:Finalizing model
2024-05-08 00:54:00,271:INFO:Uploading results into container
2024-05-08 00:54:00,271:INFO:Uploading model into container now
2024-05-08 00:54:00,281:INFO:_master_model_container: 1
2024-05-08 00:54:00,281:INFO:_display_container: 2
2024-05-08 00:54:00,281:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:00,281:INFO:create_model() successfully completed......................................
2024-05-08 00:54:00,387:INFO:Initializing tune_model()
2024-05-08 00:54:00,387:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2070), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-08 00:54:00,387:INFO:Checking exceptions
2024-05-08 00:54:00,387:INFO:Copying training dataset
2024-05-08 00:54:00,387:INFO:Checking base model
2024-05-08 00:54:00,387:INFO:Base model : Extra Trees Regressor
2024-05-08 00:54:00,387:INFO:Declaring metric variables
2024-05-08 00:54:00,387:INFO:Defining Hyperparameters
2024-05-08 00:54:00,488:INFO:Tuning with n_jobs=-1
2024-05-08 00:54:00,488:INFO:Initializing RandomizedSearchCV
2024-05-08 00:54:11,389:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-08 00:54:11,389:INFO:Hyperparameter search completed
2024-05-08 00:54:11,391:INFO:SubProcess create_model() called ==================================
2024-05-08 00:54:11,391:INFO:Initializing create_model()
2024-05-08 00:54:11,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2070), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020058E06B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.2, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-08 00:54:11,391:INFO:Checking exceptions
2024-05-08 00:54:11,391:INFO:Importing libraries
2024-05-08 00:54:11,391:INFO:Copying training dataset
2024-05-08 00:54:11,396:INFO:Defining folds
2024-05-08 00:54:11,396:INFO:Declaring metric variables
2024-05-08 00:54:11,396:INFO:Importing untrained model
2024-05-08 00:54:11,397:INFO:Declaring custom model
2024-05-08 00:54:11,397:INFO:Extra Trees Regressor Imported successfully
2024-05-08 00:54:11,397:INFO:Starting cross validation
2024-05-08 00:54:11,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-08 00:54:12,579:INFO:Calculating mean and std
2024-05-08 00:54:12,579:INFO:Creating metrics dataframe
2024-05-08 00:54:12,579:INFO:Finalizing model
2024-05-08 00:54:12,895:INFO:Uploading results into container
2024-05-08 00:54:12,895:INFO:Uploading model into container now
2024-05-08 00:54:12,895:INFO:_master_model_container: 2
2024-05-08 00:54:12,895:INFO:_display_container: 3
2024-05-08 00:54:12,895:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=8, min_impurity_decrease=0.2,
                    min_samples_leaf=3, min_samples_split=5, n_estimators=240,
                    n_jobs=-1, random_state=2070)
2024-05-08 00:54:12,895:INFO:create_model() successfully completed......................................
2024-05-08 00:54:12,993:INFO:SubProcess create_model() end ==================================
2024-05-08 00:54:12,993:INFO:choose_better activated
2024-05-08 00:54:12,993:INFO:SubProcess create_model() called ==================================
2024-05-08 00:54:12,993:INFO:Initializing create_model()
2024-05-08 00:54:12,993:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2070), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-08 00:54:12,993:INFO:Checking exceptions
2024-05-08 00:54:12,993:INFO:Importing libraries
2024-05-08 00:54:12,993:INFO:Copying training dataset
2024-05-08 00:54:13,003:INFO:Defining folds
2024-05-08 00:54:13,003:INFO:Declaring metric variables
2024-05-08 00:54:13,003:INFO:Importing untrained model
2024-05-08 00:54:13,003:INFO:Declaring custom model
2024-05-08 00:54:13,003:INFO:Extra Trees Regressor Imported successfully
2024-05-08 00:54:13,003:INFO:Starting cross validation
2024-05-08 00:54:13,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-08 00:54:13,492:INFO:Calculating mean and std
2024-05-08 00:54:13,492:INFO:Creating metrics dataframe
2024-05-08 00:54:13,492:INFO:Finalizing model
2024-05-08 00:54:13,581:INFO:Uploading results into container
2024-05-08 00:54:13,581:INFO:Uploading model into container now
2024-05-08 00:54:13,581:INFO:_master_model_container: 3
2024-05-08 00:54:13,581:INFO:_display_container: 4
2024-05-08 00:54:13,581:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:13,581:INFO:create_model() successfully completed......................................
2024-05-08 00:54:13,696:INFO:SubProcess create_model() end ==================================
2024-05-08 00:54:13,696:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2070) result for R2 is 0.7176
2024-05-08 00:54:13,696:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=8, min_impurity_decrease=0.2,
                    min_samples_leaf=3, min_samples_split=5, n_estimators=240,
                    n_jobs=-1, random_state=2070) result for R2 is 0.6812
2024-05-08 00:54:13,696:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2070) is best model
2024-05-08 00:54:13,696:INFO:choose_better completed
2024-05-08 00:54:13,696:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-08 00:54:13,712:INFO:_master_model_container: 3
2024-05-08 00:54:13,712:INFO:_display_container: 3
2024-05-08 00:54:13,712:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:13,712:INFO:tune_model() successfully completed......................................
2024-05-08 00:54:13,833:INFO:Initializing finalize_model()
2024-05-08 00:54:13,833:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2070), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-08 00:54:13,833:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:13,836:INFO:Initializing create_model()
2024-05-08 00:54:13,836:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2070), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-08 00:54:13,836:INFO:Checking exceptions
2024-05-08 00:54:13,837:INFO:Importing libraries
2024-05-08 00:54:13,837:INFO:Copying training dataset
2024-05-08 00:54:13,837:INFO:Defining folds
2024-05-08 00:54:13,837:INFO:Declaring metric variables
2024-05-08 00:54:13,838:INFO:Importing untrained model
2024-05-08 00:54:13,838:INFO:Declaring custom model
2024-05-08 00:54:13,838:INFO:Extra Trees Regressor Imported successfully
2024-05-08 00:54:13,839:INFO:Cross validation set to False
2024-05-08 00:54:13,839:INFO:Fitting Model
2024-05-08 00:54:13,935:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2070))])
2024-05-08 00:54:13,935:INFO:create_model() successfully completed......................................
2024-05-08 00:54:14,045:INFO:_master_model_container: 3
2024-05-08 00:54:14,045:INFO:_display_container: 3
2024-05-08 00:54:14,055:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2070))])
2024-05-08 00:54:14,055:INFO:finalize_model() successfully completed......................................
2024-05-08 00:54:14,166:INFO:Initializing create_model()
2024-05-08 00:54:14,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-08 00:54:14,166:INFO:Checking exceptions
2024-05-08 00:54:14,166:INFO:Importing libraries
2024-05-08 00:54:14,166:INFO:Copying training dataset
2024-05-08 00:54:14,166:INFO:Defining folds
2024-05-08 00:54:14,166:INFO:Declaring metric variables
2024-05-08 00:54:14,166:INFO:Importing untrained model
2024-05-08 00:54:14,176:INFO:Random Forest Regressor Imported successfully
2024-05-08 00:54:14,176:INFO:Starting cross validation
2024-05-08 00:54:14,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-08 00:54:14,835:INFO:Calculating mean and std
2024-05-08 00:54:14,835:INFO:Creating metrics dataframe
2024-05-08 00:54:14,845:INFO:Finalizing model
2024-05-08 00:54:14,978:INFO:Uploading results into container
2024-05-08 00:54:14,978:INFO:Uploading model into container now
2024-05-08 00:54:14,994:INFO:_master_model_container: 4
2024-05-08 00:54:14,994:INFO:_display_container: 4
2024-05-08 00:54:14,994:INFO:RandomForestRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:14,994:INFO:create_model() successfully completed......................................
2024-05-08 00:54:15,101:INFO:Initializing tune_model()
2024-05-08 00:54:15,101:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2070), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-08 00:54:15,101:INFO:Checking exceptions
2024-05-08 00:54:15,104:INFO:Copying training dataset
2024-05-08 00:54:15,107:INFO:Checking base model
2024-05-08 00:54:15,107:INFO:Base model : Random Forest Regressor
2024-05-08 00:54:15,107:INFO:Declaring metric variables
2024-05-08 00:54:15,107:INFO:Defining Hyperparameters
2024-05-08 00:54:15,210:INFO:Tuning with n_jobs=-1
2024-05-08 00:54:15,210:INFO:Initializing RandomizedSearchCV
2024-05-08 00:54:31,437:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-08 00:54:31,437:INFO:Hyperparameter search completed
2024-05-08 00:54:31,437:INFO:SubProcess create_model() called ==================================
2024-05-08 00:54:31,437:INFO:Initializing create_model()
2024-05-08 00:54:31,437:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2070), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020057D31550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.2, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-08 00:54:31,437:INFO:Checking exceptions
2024-05-08 00:54:31,437:INFO:Importing libraries
2024-05-08 00:54:31,437:INFO:Copying training dataset
2024-05-08 00:54:31,437:INFO:Defining folds
2024-05-08 00:54:31,437:INFO:Declaring metric variables
2024-05-08 00:54:31,437:INFO:Importing untrained model
2024-05-08 00:54:31,437:INFO:Declaring custom model
2024-05-08 00:54:31,437:INFO:Random Forest Regressor Imported successfully
2024-05-08 00:54:31,437:INFO:Starting cross validation
2024-05-08 00:54:31,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-08 00:54:32,618:INFO:Calculating mean and std
2024-05-08 00:54:32,618:INFO:Creating metrics dataframe
2024-05-08 00:54:32,628:INFO:Finalizing model
2024-05-08 00:54:32,954:INFO:Uploading results into container
2024-05-08 00:54:32,954:INFO:Uploading model into container now
2024-05-08 00:54:32,954:INFO:_master_model_container: 5
2024-05-08 00:54:32,954:INFO:_display_container: 5
2024-05-08 00:54:32,954:INFO:RandomForestRegressor(max_depth=8, min_impurity_decrease=0.2,
                      min_samples_leaf=3, min_samples_split=5, n_estimators=240,
                      n_jobs=-1, random_state=2070)
2024-05-08 00:54:32,954:INFO:create_model() successfully completed......................................
2024-05-08 00:54:33,085:INFO:SubProcess create_model() end ==================================
2024-05-08 00:54:33,085:INFO:choose_better activated
2024-05-08 00:54:33,085:INFO:SubProcess create_model() called ==================================
2024-05-08 00:54:33,085:INFO:Initializing create_model()
2024-05-08 00:54:33,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2070), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-08 00:54:33,085:INFO:Checking exceptions
2024-05-08 00:54:33,085:INFO:Importing libraries
2024-05-08 00:54:33,085:INFO:Copying training dataset
2024-05-08 00:54:33,095:INFO:Defining folds
2024-05-08 00:54:33,095:INFO:Declaring metric variables
2024-05-08 00:54:33,095:INFO:Importing untrained model
2024-05-08 00:54:33,095:INFO:Declaring custom model
2024-05-08 00:54:33,095:INFO:Random Forest Regressor Imported successfully
2024-05-08 00:54:33,095:INFO:Starting cross validation
2024-05-08 00:54:33,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-08 00:54:33,727:INFO:Calculating mean and std
2024-05-08 00:54:33,727:INFO:Creating metrics dataframe
2024-05-08 00:54:33,727:INFO:Finalizing model
2024-05-08 00:54:33,868:INFO:Uploading results into container
2024-05-08 00:54:33,868:INFO:Uploading model into container now
2024-05-08 00:54:33,868:INFO:_master_model_container: 6
2024-05-08 00:54:33,868:INFO:_display_container: 6
2024-05-08 00:54:33,868:INFO:RandomForestRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:33,868:INFO:create_model() successfully completed......................................
2024-05-08 00:54:33,968:INFO:SubProcess create_model() end ==================================
2024-05-08 00:54:33,968:INFO:RandomForestRegressor(n_jobs=-1, random_state=2070) result for R2 is 0.7271
2024-05-08 00:54:33,968:INFO:RandomForestRegressor(max_depth=8, min_impurity_decrease=0.2,
                      min_samples_leaf=3, min_samples_split=5, n_estimators=240,
                      n_jobs=-1, random_state=2070) result for R2 is 0.7088
2024-05-08 00:54:33,968:INFO:RandomForestRegressor(n_jobs=-1, random_state=2070) is best model
2024-05-08 00:54:33,968:INFO:choose_better completed
2024-05-08 00:54:33,968:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-08 00:54:33,983:INFO:_master_model_container: 6
2024-05-08 00:54:33,983:INFO:_display_container: 5
2024-05-08 00:54:33,983:INFO:RandomForestRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:33,983:INFO:tune_model() successfully completed......................................
2024-05-08 00:54:34,085:INFO:Initializing finalize_model()
2024-05-08 00:54:34,085:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2070), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-08 00:54:34,085:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=2070)
2024-05-08 00:54:34,088:INFO:Initializing create_model()
2024-05-08 00:54:34,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002004DAAAB10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2070), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-08 00:54:34,088:INFO:Checking exceptions
2024-05-08 00:54:34,088:INFO:Importing libraries
2024-05-08 00:54:34,088:INFO:Copying training dataset
2024-05-08 00:54:34,088:INFO:Defining folds
2024-05-08 00:54:34,088:INFO:Declaring metric variables
2024-05-08 00:54:34,088:INFO:Importing untrained model
2024-05-08 00:54:34,088:INFO:Declaring custom model
2024-05-08 00:54:34,088:INFO:Random Forest Regressor Imported successfully
2024-05-08 00:54:34,088:INFO:Cross validation set to False
2024-05-08 00:54:34,088:INFO:Fitting Model
2024-05-08 00:54:34,228:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2070))])
2024-05-08 00:54:34,228:INFO:create_model() successfully completed......................................
2024-05-08 00:54:34,341:INFO:_master_model_container: 6
2024-05-08 00:54:34,341:INFO:_display_container: 5
2024-05-08 00:54:34,347:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2070))])
2024-05-08 00:54:34,347:INFO:finalize_model() successfully completed......................................
