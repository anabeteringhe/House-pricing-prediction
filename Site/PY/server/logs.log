2024-05-09 02:03:15,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:03:15,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:03:15,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:03:15,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:03:16,057:INFO:PyCaret RegressionExperiment
2024-05-09 02:03:16,057:INFO:Logging name: reg-default-name
2024-05-09 02:03:16,057:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 02:03:16,057:INFO:version 3.3.2
2024-05-09 02:03:16,057:INFO:Initializing setup()
2024-05-09 02:03:16,057:INFO:self.USI: 89e7
2024-05-09 02:03:16,057:INFO:self._variable_keys: {'_available_plots', 'idx', 'X', 'gpu_n_jobs_param', 'y', 'X_test', '_ml_usecase', 'n_jobs_param', 'y_train', 'X_train', 'USI', 'y_test', 'exp_name_log', 'pipeline', 'fold_groups_param', 'transform_target_param', 'gpu_param', 'memory', 'html_param', 'target_param', 'fold_generator', 'exp_id', 'fold_shuffle_param', 'logging_param', 'data', 'log_plots_param', 'seed'}
2024-05-09 02:03:16,057:INFO:Checking environment
2024-05-09 02:03:16,057:INFO:python_version: 3.11.9
2024-05-09 02:03:16,057:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 02:03:16,057:INFO:machine: AMD64
2024-05-09 02:03:16,067:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 02:03:16,067:INFO:Memory: svmem(total=7947747328, available=996171776, percent=87.5, used=6951575552, free=996171776)
2024-05-09 02:03:16,067:INFO:Physical Core: 6
2024-05-09 02:03:16,067:INFO:Logical Core: 6
2024-05-09 02:03:16,067:INFO:Checking libraries
2024-05-09 02:03:16,067:INFO:System:
2024-05-09 02:03:16,067:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 02:03:16,067:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 02:03:16,067:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 02:03:16,067:INFO:PyCaret required dependencies:
2024-05-09 02:03:16,127:INFO:                 pip: 24.0
2024-05-09 02:03:16,127:INFO:          setuptools: 65.5.0
2024-05-09 02:03:16,127:INFO:             pycaret: 3.3.2
2024-05-09 02:03:16,127:INFO:             IPython: 8.24.0
2024-05-09 02:03:16,127:INFO:          ipywidgets: 8.1.2
2024-05-09 02:03:16,127:INFO:                tqdm: 4.66.4
2024-05-09 02:03:16,127:INFO:               numpy: 1.26.4
2024-05-09 02:03:16,127:INFO:              pandas: 2.1.4
2024-05-09 02:03:16,127:INFO:              jinja2: 3.1.4
2024-05-09 02:03:16,127:INFO:               scipy: 1.11.4
2024-05-09 02:03:16,127:INFO:              joblib: 1.3.2
2024-05-09 02:03:16,127:INFO:             sklearn: 1.4.2
2024-05-09 02:03:16,127:INFO:                pyod: 1.1.3
2024-05-09 02:03:16,127:INFO:            imblearn: 0.12.2
2024-05-09 02:03:16,127:INFO:   category_encoders: 2.6.3
2024-05-09 02:03:16,127:INFO:            lightgbm: 4.3.0
2024-05-09 02:03:16,127:INFO:               numba: 0.59.1
2024-05-09 02:03:16,127:INFO:            requests: 2.31.0
2024-05-09 02:03:16,127:INFO:          matplotlib: 3.7.5
2024-05-09 02:03:16,127:INFO:          scikitplot: 0.3.7
2024-05-09 02:03:16,127:INFO:         yellowbrick: 1.5
2024-05-09 02:03:16,127:INFO:              plotly: 5.22.0
2024-05-09 02:03:16,127:INFO:    plotly-resampler: Not installed
2024-05-09 02:03:16,127:INFO:             kaleido: 0.2.1
2024-05-09 02:03:16,127:INFO:           schemdraw: 0.15
2024-05-09 02:03:16,127:INFO:         statsmodels: 0.14.2
2024-05-09 02:03:16,127:INFO:              sktime: 0.26.0
2024-05-09 02:03:16,127:INFO:               tbats: 1.1.3
2024-05-09 02:03:16,127:INFO:            pmdarima: 2.0.4
2024-05-09 02:03:16,127:INFO:              psutil: 5.9.8
2024-05-09 02:03:16,127:INFO:          markupsafe: 2.1.5
2024-05-09 02:03:16,127:INFO:             pickle5: Not installed
2024-05-09 02:03:16,127:INFO:         cloudpickle: 3.0.0
2024-05-09 02:03:16,127:INFO:         deprecation: 2.1.0
2024-05-09 02:03:16,127:INFO:              xxhash: 3.4.1
2024-05-09 02:03:16,127:INFO:           wurlitzer: Not installed
2024-05-09 02:03:16,127:INFO:PyCaret optional dependencies:
2024-05-09 02:03:16,137:INFO:                shap: Not installed
2024-05-09 02:03:16,137:INFO:           interpret: Not installed
2024-05-09 02:03:16,137:INFO:                umap: Not installed
2024-05-09 02:03:16,137:INFO:     ydata_profiling: Not installed
2024-05-09 02:03:16,137:INFO:  explainerdashboard: Not installed
2024-05-09 02:03:16,137:INFO:             autoviz: Not installed
2024-05-09 02:03:16,137:INFO:           fairlearn: Not installed
2024-05-09 02:03:16,137:INFO:          deepchecks: Not installed
2024-05-09 02:03:16,137:INFO:             xgboost: Not installed
2024-05-09 02:03:16,137:INFO:            catboost: Not installed
2024-05-09 02:03:16,137:INFO:              kmodes: Not installed
2024-05-09 02:03:16,137:INFO:             mlxtend: Not installed
2024-05-09 02:03:16,137:INFO:       statsforecast: Not installed
2024-05-09 02:03:16,137:INFO:        tune_sklearn: Not installed
2024-05-09 02:03:16,137:INFO:                 ray: Not installed
2024-05-09 02:03:16,137:INFO:            hyperopt: Not installed
2024-05-09 02:03:16,137:INFO:              optuna: Not installed
2024-05-09 02:03:16,137:INFO:               skopt: Not installed
2024-05-09 02:03:16,137:INFO:              mlflow: Not installed
2024-05-09 02:03:16,137:INFO:              gradio: Not installed
2024-05-09 02:03:16,137:INFO:             fastapi: Not installed
2024-05-09 02:03:16,137:INFO:             uvicorn: Not installed
2024-05-09 02:03:16,137:INFO:              m2cgen: Not installed
2024-05-09 02:03:16,137:INFO:           evidently: Not installed
2024-05-09 02:03:16,137:INFO:               fugue: Not installed
2024-05-09 02:03:16,137:INFO:           streamlit: Not installed
2024-05-09 02:03:16,137:INFO:             prophet: Not installed
2024-05-09 02:03:16,137:INFO:None
2024-05-09 02:03:16,137:INFO:Set up data.
2024-05-09 02:03:16,157:INFO:Set up folding strategy.
2024-05-09 02:03:16,157:INFO:Set up train/test split.
2024-05-09 02:03:16,157:INFO:Set up index.
2024-05-09 02:03:16,167:INFO:Assigning column types.
2024-05-09 02:03:16,167:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 02:03:16,167:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,177:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,177:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,237:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,287:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,287:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,297:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,397:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 02:03:16,407:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,407:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,518:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,528:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,628:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 02:03:16,638:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,698:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,748:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,758:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,858:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 02:03:16,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,969:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:16,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:16,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:17,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:03:17,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,079:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 02:03:17,149:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:17,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,259:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:03:17,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,299:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 02:03:17,419:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,539:INFO:Preparing preprocessing pipeline...
2024-05-09 02:03:17,539:INFO:Set up simple imputation.
2024-05-09 02:03:17,539:INFO:Set up column name cleaning.
2024-05-09 02:03:17,579:INFO:Finished creating preprocessing pipeline.
2024-05-09 02:03:17,589:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 02:03:17,589:INFO:Creating final display dataframe.
2024-05-09 02:03:17,659:INFO:Setup _display_container:                     Description             Value
0                    Session id              6600
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              89e7
2024-05-09 02:03:17,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:03:17,899:INFO:setup() successfully completed in 1.85s...............
2024-05-09 02:03:17,909:INFO:Initializing create_model()
2024-05-09 02:03:17,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:03:17,909:INFO:Checking exceptions
2024-05-09 02:03:17,909:INFO:Importing libraries
2024-05-09 02:03:17,909:INFO:Copying training dataset
2024-05-09 02:03:17,909:INFO:Defining folds
2024-05-09 02:03:17,919:INFO:Declaring metric variables
2024-05-09 02:03:17,919:INFO:Importing untrained model
2024-05-09 02:03:17,919:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:03:17,919:INFO:Starting cross validation
2024-05-09 02:03:17,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:03:22,165:INFO:Calculating mean and std
2024-05-09 02:03:22,200:INFO:Creating metrics dataframe
2024-05-09 02:03:22,200:INFO:Finalizing model
2024-05-09 02:03:22,303:INFO:Uploading results into container
2024-05-09 02:03:22,303:INFO:Uploading model into container now
2024-05-09 02:03:22,311:INFO:_master_model_container: 1
2024-05-09 02:03:22,311:INFO:_display_container: 2
2024-05-09 02:03:22,311:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:22,311:INFO:create_model() successfully completed......................................
2024-05-09 02:03:22,411:INFO:Initializing tune_model()
2024-05-09 02:03:22,411:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6600), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:03:22,411:INFO:Checking exceptions
2024-05-09 02:03:22,411:INFO:Copying training dataset
2024-05-09 02:03:22,411:INFO:Checking base model
2024-05-09 02:03:22,411:INFO:Base model : Extra Trees Regressor
2024-05-09 02:03:22,411:INFO:Declaring metric variables
2024-05-09 02:03:22,411:INFO:Defining Hyperparameters
2024-05-09 02:03:22,511:INFO:Tuning with n_jobs=-1
2024-05-09 02:03:22,511:INFO:Initializing RandomizedSearchCV
2024-05-09 02:03:30,916:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2024-05-09 02:03:30,916:INFO:Hyperparameter search completed
2024-05-09 02:03:30,916:INFO:SubProcess create_model() called ==================================
2024-05-09 02:03:30,922:INFO:Initializing create_model()
2024-05-09 02:03:30,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6600), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D3FA4F0A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.5, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': False})
2024-05-09 02:03:30,922:INFO:Checking exceptions
2024-05-09 02:03:30,922:INFO:Importing libraries
2024-05-09 02:03:30,922:INFO:Copying training dataset
2024-05-09 02:03:30,922:INFO:Defining folds
2024-05-09 02:03:30,922:INFO:Declaring metric variables
2024-05-09 02:03:30,922:INFO:Importing untrained model
2024-05-09 02:03:30,922:INFO:Declaring custom model
2024-05-09 02:03:30,922:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:03:30,922:INFO:Starting cross validation
2024-05-09 02:03:30,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:03:31,658:INFO:Calculating mean and std
2024-05-09 02:03:31,658:INFO:Creating metrics dataframe
2024-05-09 02:03:31,661:INFO:Finalizing model
2024-05-09 02:03:31,881:INFO:Uploading results into container
2024-05-09 02:03:31,881:INFO:Uploading model into container now
2024-05-09 02:03:31,884:INFO:_master_model_container: 2
2024-05-09 02:03:31,884:INFO:_display_container: 3
2024-05-09 02:03:31,884:INFO:ExtraTreesRegressor(max_depth=9, min_impurity_decrease=0.5, min_samples_leaf=2,
                    min_samples_split=9, n_estimators=290, n_jobs=-1,
                    random_state=6600)
2024-05-09 02:03:31,884:INFO:create_model() successfully completed......................................
2024-05-09 02:03:31,954:INFO:SubProcess create_model() end ==================================
2024-05-09 02:03:31,954:INFO:choose_better activated
2024-05-09 02:03:31,954:INFO:SubProcess create_model() called ==================================
2024-05-09 02:03:31,964:INFO:Initializing create_model()
2024-05-09 02:03:31,964:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6600), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:03:31,964:INFO:Checking exceptions
2024-05-09 02:03:31,964:INFO:Importing libraries
2024-05-09 02:03:31,964:INFO:Copying training dataset
2024-05-09 02:03:31,964:INFO:Defining folds
2024-05-09 02:03:31,964:INFO:Declaring metric variables
2024-05-09 02:03:31,964:INFO:Importing untrained model
2024-05-09 02:03:31,964:INFO:Declaring custom model
2024-05-09 02:03:31,964:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:03:31,964:INFO:Starting cross validation
2024-05-09 02:03:31,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:03:32,523:INFO:Calculating mean and std
2024-05-09 02:03:32,523:INFO:Creating metrics dataframe
2024-05-09 02:03:32,523:INFO:Finalizing model
2024-05-09 02:03:32,610:INFO:Uploading results into container
2024-05-09 02:03:32,610:INFO:Uploading model into container now
2024-05-09 02:03:32,610:INFO:_master_model_container: 3
2024-05-09 02:03:32,610:INFO:_display_container: 4
2024-05-09 02:03:32,610:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:32,610:INFO:create_model() successfully completed......................................
2024-05-09 02:03:32,678:INFO:SubProcess create_model() end ==================================
2024-05-09 02:03:32,678:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6600) result for R2 is 0.7499
2024-05-09 02:03:32,678:INFO:ExtraTreesRegressor(max_depth=9, min_impurity_decrease=0.5, min_samples_leaf=2,
                    min_samples_split=9, n_estimators=290, n_jobs=-1,
                    random_state=6600) result for R2 is 0.7003
2024-05-09 02:03:32,678:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6600) is best model
2024-05-09 02:03:32,678:INFO:choose_better completed
2024-05-09 02:03:32,678:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:03:32,688:INFO:_master_model_container: 3
2024-05-09 02:03:32,688:INFO:_display_container: 3
2024-05-09 02:03:32,688:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:32,688:INFO:tune_model() successfully completed......................................
2024-05-09 02:03:32,758:INFO:Initializing finalize_model()
2024-05-09 02:03:32,758:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6600), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:03:32,758:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:32,758:INFO:Initializing create_model()
2024-05-09 02:03:32,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6600), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:03:32,758:INFO:Checking exceptions
2024-05-09 02:03:32,768:INFO:Importing libraries
2024-05-09 02:03:32,768:INFO:Copying training dataset
2024-05-09 02:03:32,768:INFO:Defining folds
2024-05-09 02:03:32,768:INFO:Declaring metric variables
2024-05-09 02:03:32,768:INFO:Importing untrained model
2024-05-09 02:03:32,768:INFO:Declaring custom model
2024-05-09 02:03:32,768:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:03:32,768:INFO:Cross validation set to False
2024-05-09 02:03:32,768:INFO:Fitting Model
2024-05-09 02:03:32,854:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6600))])
2024-05-09 02:03:32,854:INFO:create_model() successfully completed......................................
2024-05-09 02:03:32,921:INFO:_master_model_container: 3
2024-05-09 02:03:32,921:INFO:_display_container: 3
2024-05-09 02:03:32,931:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6600))])
2024-05-09 02:03:32,931:INFO:finalize_model() successfully completed......................................
2024-05-09 02:03:33,001:INFO:Initializing create_model()
2024-05-09 02:03:33,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:03:33,001:INFO:Checking exceptions
2024-05-09 02:03:33,001:INFO:Importing libraries
2024-05-09 02:03:33,001:INFO:Copying training dataset
2024-05-09 02:03:33,001:INFO:Defining folds
2024-05-09 02:03:33,001:INFO:Declaring metric variables
2024-05-09 02:03:33,001:INFO:Importing untrained model
2024-05-09 02:03:33,001:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:03:33,001:INFO:Starting cross validation
2024-05-09 02:03:33,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:03:33,633:INFO:Calculating mean and std
2024-05-09 02:03:33,633:INFO:Creating metrics dataframe
2024-05-09 02:03:33,637:INFO:Finalizing model
2024-05-09 02:03:33,771:INFO:Uploading results into container
2024-05-09 02:03:33,771:INFO:Uploading model into container now
2024-05-09 02:03:33,779:INFO:_master_model_container: 4
2024-05-09 02:03:33,779:INFO:_display_container: 4
2024-05-09 02:03:33,779:INFO:RandomForestRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:33,779:INFO:create_model() successfully completed......................................
2024-05-09 02:03:33,859:INFO:Initializing tune_model()
2024-05-09 02:03:33,859:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6600), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:03:33,859:INFO:Checking exceptions
2024-05-09 02:03:33,869:INFO:Copying training dataset
2024-05-09 02:03:33,869:INFO:Checking base model
2024-05-09 02:03:33,869:INFO:Base model : Random Forest Regressor
2024-05-09 02:03:33,869:INFO:Declaring metric variables
2024-05-09 02:03:33,869:INFO:Defining Hyperparameters
2024-05-09 02:03:33,939:INFO:Tuning with n_jobs=-1
2024-05-09 02:03:33,939:INFO:Initializing RandomizedSearchCV
2024-05-09 02:03:47,982:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 02:03:47,984:INFO:Hyperparameter search completed
2024-05-09 02:03:47,984:INFO:SubProcess create_model() called ==================================
2024-05-09 02:03:47,984:INFO:Initializing create_model()
2024-05-09 02:03:47,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6600), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D38C253850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 02:03:47,984:INFO:Checking exceptions
2024-05-09 02:03:47,984:INFO:Importing libraries
2024-05-09 02:03:47,984:INFO:Copying training dataset
2024-05-09 02:03:47,984:INFO:Defining folds
2024-05-09 02:03:47,984:INFO:Declaring metric variables
2024-05-09 02:03:47,984:INFO:Importing untrained model
2024-05-09 02:03:47,984:INFO:Declaring custom model
2024-05-09 02:03:47,991:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:03:47,991:INFO:Starting cross validation
2024-05-09 02:03:47,991:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:03:49,131:INFO:Calculating mean and std
2024-05-09 02:03:49,131:INFO:Creating metrics dataframe
2024-05-09 02:03:49,131:INFO:Finalizing model
2024-05-09 02:03:49,432:INFO:Uploading results into container
2024-05-09 02:03:49,432:INFO:Uploading model into container now
2024-05-09 02:03:49,432:INFO:_master_model_container: 5
2024-05-09 02:03:49,432:INFO:_display_container: 5
2024-05-09 02:03:49,432:INFO:RandomForestRegressor(max_depth=10, max_features='sqrt',
                      min_impurity_decrease=0.0005, min_samples_leaf=4,
                      n_estimators=290, n_jobs=-1, random_state=6600)
2024-05-09 02:03:49,432:INFO:create_model() successfully completed......................................
2024-05-09 02:03:49,508:INFO:SubProcess create_model() end ==================================
2024-05-09 02:03:49,508:INFO:choose_better activated
2024-05-09 02:03:49,508:INFO:SubProcess create_model() called ==================================
2024-05-09 02:03:49,508:INFO:Initializing create_model()
2024-05-09 02:03:49,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6600), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:03:49,508:INFO:Checking exceptions
2024-05-09 02:03:49,508:INFO:Importing libraries
2024-05-09 02:03:49,508:INFO:Copying training dataset
2024-05-09 02:03:49,512:INFO:Defining folds
2024-05-09 02:03:49,512:INFO:Declaring metric variables
2024-05-09 02:03:49,512:INFO:Importing untrained model
2024-05-09 02:03:49,512:INFO:Declaring custom model
2024-05-09 02:03:49,512:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:03:49,512:INFO:Starting cross validation
2024-05-09 02:03:49,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:03:50,145:INFO:Calculating mean and std
2024-05-09 02:03:50,145:INFO:Creating metrics dataframe
2024-05-09 02:03:50,145:INFO:Finalizing model
2024-05-09 02:03:50,264:INFO:Uploading results into container
2024-05-09 02:03:50,264:INFO:Uploading model into container now
2024-05-09 02:03:50,264:INFO:_master_model_container: 6
2024-05-09 02:03:50,264:INFO:_display_container: 6
2024-05-09 02:03:50,264:INFO:RandomForestRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:50,264:INFO:create_model() successfully completed......................................
2024-05-09 02:03:50,336:INFO:SubProcess create_model() end ==================================
2024-05-09 02:03:50,336:INFO:RandomForestRegressor(n_jobs=-1, random_state=6600) result for R2 is 0.7502
2024-05-09 02:03:50,336:INFO:RandomForestRegressor(max_depth=10, max_features='sqrt',
                      min_impurity_decrease=0.0005, min_samples_leaf=4,
                      n_estimators=290, n_jobs=-1, random_state=6600) result for R2 is 0.6967
2024-05-09 02:03:50,336:INFO:RandomForestRegressor(n_jobs=-1, random_state=6600) is best model
2024-05-09 02:03:50,336:INFO:choose_better completed
2024-05-09 02:03:50,338:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:03:50,344:INFO:_master_model_container: 6
2024-05-09 02:03:50,344:INFO:_display_container: 5
2024-05-09 02:03:50,344:INFO:RandomForestRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:50,344:INFO:tune_model() successfully completed......................................
2024-05-09 02:03:50,413:INFO:Initializing finalize_model()
2024-05-09 02:03:50,413:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6600), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:03:50,413:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=6600)
2024-05-09 02:03:50,417:INFO:Initializing create_model()
2024-05-09 02:03:50,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002D3F7C419D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6600), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:03:50,417:INFO:Checking exceptions
2024-05-09 02:03:50,417:INFO:Importing libraries
2024-05-09 02:03:50,417:INFO:Copying training dataset
2024-05-09 02:03:50,417:INFO:Defining folds
2024-05-09 02:03:50,417:INFO:Declaring metric variables
2024-05-09 02:03:50,417:INFO:Importing untrained model
2024-05-09 02:03:50,417:INFO:Declaring custom model
2024-05-09 02:03:50,417:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:03:50,417:INFO:Cross validation set to False
2024-05-09 02:03:50,417:INFO:Fitting Model
2024-05-09 02:03:50,551:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6600))])
2024-05-09 02:03:50,551:INFO:create_model() successfully completed......................................
2024-05-09 02:03:50,619:INFO:_master_model_container: 6
2024-05-09 02:03:50,619:INFO:_display_container: 5
2024-05-09 02:03:50,623:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6600))])
2024-05-09 02:03:50,627:INFO:finalize_model() successfully completed......................................
2024-05-09 02:07:39,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:07:39,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:07:39,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:07:39,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:07:39,433:INFO:PyCaret RegressionExperiment
2024-05-09 02:07:39,433:INFO:Logging name: reg-default-name
2024-05-09 02:07:39,433:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 02:07:39,433:INFO:version 3.3.2
2024-05-09 02:07:39,433:INFO:Initializing setup()
2024-05-09 02:07:39,433:INFO:self.USI: 089c
2024-05-09 02:07:39,433:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'y_train', 'exp_name_log', 'gpu_param', 'pipeline', 'USI', 'X', 'data', 'fold_shuffle_param', 'exp_id', 'y', 'memory', 'gpu_n_jobs_param', '_available_plots', 'seed', 'X_train', 'target_param', 'transform_target_param', 'logging_param', 'idx', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'y_test', 'html_param', 'X_test'}
2024-05-09 02:07:39,433:INFO:Checking environment
2024-05-09 02:07:39,433:INFO:python_version: 3.11.9
2024-05-09 02:07:39,433:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 02:07:39,433:INFO:machine: AMD64
2024-05-09 02:07:39,443:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 02:07:39,443:INFO:Memory: svmem(total=7947747328, available=905302016, percent=88.6, used=7042445312, free=905302016)
2024-05-09 02:07:39,443:INFO:Physical Core: 6
2024-05-09 02:07:39,443:INFO:Logical Core: 6
2024-05-09 02:07:39,443:INFO:Checking libraries
2024-05-09 02:07:39,443:INFO:System:
2024-05-09 02:07:39,443:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 02:07:39,443:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 02:07:39,443:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 02:07:39,443:INFO:PyCaret required dependencies:
2024-05-09 02:07:39,473:INFO:                 pip: 24.0
2024-05-09 02:07:39,473:INFO:          setuptools: 65.5.0
2024-05-09 02:07:39,473:INFO:             pycaret: 3.3.2
2024-05-09 02:07:39,473:INFO:             IPython: 8.24.0
2024-05-09 02:07:39,473:INFO:          ipywidgets: 8.1.2
2024-05-09 02:07:39,473:INFO:                tqdm: 4.66.4
2024-05-09 02:07:39,473:INFO:               numpy: 1.26.4
2024-05-09 02:07:39,473:INFO:              pandas: 2.1.4
2024-05-09 02:07:39,473:INFO:              jinja2: 3.1.4
2024-05-09 02:07:39,473:INFO:               scipy: 1.11.4
2024-05-09 02:07:39,473:INFO:              joblib: 1.3.2
2024-05-09 02:07:39,473:INFO:             sklearn: 1.4.2
2024-05-09 02:07:39,473:INFO:                pyod: 1.1.3
2024-05-09 02:07:39,473:INFO:            imblearn: 0.12.2
2024-05-09 02:07:39,473:INFO:   category_encoders: 2.6.3
2024-05-09 02:07:39,473:INFO:            lightgbm: 4.3.0
2024-05-09 02:07:39,473:INFO:               numba: 0.59.1
2024-05-09 02:07:39,473:INFO:            requests: 2.31.0
2024-05-09 02:07:39,473:INFO:          matplotlib: 3.7.5
2024-05-09 02:07:39,473:INFO:          scikitplot: 0.3.7
2024-05-09 02:07:39,473:INFO:         yellowbrick: 1.5
2024-05-09 02:07:39,473:INFO:              plotly: 5.22.0
2024-05-09 02:07:39,473:INFO:    plotly-resampler: Not installed
2024-05-09 02:07:39,473:INFO:             kaleido: 0.2.1
2024-05-09 02:07:39,473:INFO:           schemdraw: 0.15
2024-05-09 02:07:39,473:INFO:         statsmodels: 0.14.2
2024-05-09 02:07:39,473:INFO:              sktime: 0.26.0
2024-05-09 02:07:39,473:INFO:               tbats: 1.1.3
2024-05-09 02:07:39,473:INFO:            pmdarima: 2.0.4
2024-05-09 02:07:39,473:INFO:              psutil: 5.9.8
2024-05-09 02:07:39,473:INFO:          markupsafe: 2.1.5
2024-05-09 02:07:39,473:INFO:             pickle5: Not installed
2024-05-09 02:07:39,473:INFO:         cloudpickle: 3.0.0
2024-05-09 02:07:39,473:INFO:         deprecation: 2.1.0
2024-05-09 02:07:39,473:INFO:              xxhash: 3.4.1
2024-05-09 02:07:39,473:INFO:           wurlitzer: Not installed
2024-05-09 02:07:39,473:INFO:PyCaret optional dependencies:
2024-05-09 02:07:39,483:INFO:                shap: Not installed
2024-05-09 02:07:39,483:INFO:           interpret: Not installed
2024-05-09 02:07:39,483:INFO:                umap: Not installed
2024-05-09 02:07:39,483:INFO:     ydata_profiling: Not installed
2024-05-09 02:07:39,483:INFO:  explainerdashboard: Not installed
2024-05-09 02:07:39,483:INFO:             autoviz: Not installed
2024-05-09 02:07:39,483:INFO:           fairlearn: Not installed
2024-05-09 02:07:39,483:INFO:          deepchecks: Not installed
2024-05-09 02:07:39,483:INFO:             xgboost: Not installed
2024-05-09 02:07:39,483:INFO:            catboost: Not installed
2024-05-09 02:07:39,483:INFO:              kmodes: Not installed
2024-05-09 02:07:39,483:INFO:             mlxtend: Not installed
2024-05-09 02:07:39,483:INFO:       statsforecast: Not installed
2024-05-09 02:07:39,483:INFO:        tune_sklearn: Not installed
2024-05-09 02:07:39,483:INFO:                 ray: Not installed
2024-05-09 02:07:39,483:INFO:            hyperopt: Not installed
2024-05-09 02:07:39,483:INFO:              optuna: Not installed
2024-05-09 02:07:39,483:INFO:               skopt: Not installed
2024-05-09 02:07:39,483:INFO:              mlflow: Not installed
2024-05-09 02:07:39,483:INFO:              gradio: Not installed
2024-05-09 02:07:39,483:INFO:             fastapi: Not installed
2024-05-09 02:07:39,483:INFO:             uvicorn: Not installed
2024-05-09 02:07:39,483:INFO:              m2cgen: Not installed
2024-05-09 02:07:39,483:INFO:           evidently: Not installed
2024-05-09 02:07:39,483:INFO:               fugue: Not installed
2024-05-09 02:07:39,483:INFO:           streamlit: Not installed
2024-05-09 02:07:39,483:INFO:             prophet: Not installed
2024-05-09 02:07:39,483:INFO:None
2024-05-09 02:07:39,483:INFO:Set up data.
2024-05-09 02:07:39,493:INFO:Set up folding strategy.
2024-05-09 02:07:39,493:INFO:Set up train/test split.
2024-05-09 02:07:39,493:INFO:Set up index.
2024-05-09 02:07:39,493:INFO:Assigning column types.
2024-05-09 02:07:39,493:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 02:07:39,493:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,503:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,503:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,563:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,613:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,623:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,623:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,744:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 02:07:39,744:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,865:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,875:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,935:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:39,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:39,985:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 02:07:39,995:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,055:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,125:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,196:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,236:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,246:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 02:07:40,306:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,357:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,427:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,477:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 02:07:40,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,667:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:07:40,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,707:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 02:07:40,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:40,958:INFO:Preparing preprocessing pipeline...
2024-05-09 02:07:40,958:INFO:Set up simple imputation.
2024-05-09 02:07:40,958:INFO:Set up column name cleaning.
2024-05-09 02:07:40,978:INFO:Finished creating preprocessing pipeline.
2024-05-09 02:07:40,978:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 02:07:40,978:INFO:Creating final display dataframe.
2024-05-09 02:07:41,038:INFO:Setup _display_container:                     Description             Value
0                    Session id              4854
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              089c
2024-05-09 02:07:41,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:41,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:41,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:41,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:07:41,268:INFO:setup() successfully completed in 1.83s...............
2024-05-09 02:07:41,278:INFO:Initializing create_model()
2024-05-09 02:07:41,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:07:41,278:INFO:Checking exceptions
2024-05-09 02:07:41,278:INFO:Importing libraries
2024-05-09 02:07:41,278:INFO:Copying training dataset
2024-05-09 02:07:41,278:INFO:Defining folds
2024-05-09 02:07:41,278:INFO:Declaring metric variables
2024-05-09 02:07:41,288:INFO:Importing untrained model
2024-05-09 02:07:41,288:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:07:41,288:INFO:Starting cross validation
2024-05-09 02:07:41,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:07:45,216:INFO:Calculating mean and std
2024-05-09 02:07:45,216:INFO:Creating metrics dataframe
2024-05-09 02:07:45,216:INFO:Finalizing model
2024-05-09 02:07:45,340:INFO:Uploading results into container
2024-05-09 02:07:45,340:INFO:Uploading model into container now
2024-05-09 02:07:45,348:INFO:_master_model_container: 1
2024-05-09 02:07:45,348:INFO:_display_container: 2
2024-05-09 02:07:45,348:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:07:45,348:INFO:create_model() successfully completed......................................
2024-05-09 02:07:45,469:INFO:Initializing tune_model()
2024-05-09 02:07:45,469:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4854), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:07:45,469:INFO:Checking exceptions
2024-05-09 02:07:45,469:INFO:Copying training dataset
2024-05-09 02:07:45,469:INFO:Checking base model
2024-05-09 02:07:45,469:INFO:Base model : Extra Trees Regressor
2024-05-09 02:07:45,469:INFO:Declaring metric variables
2024-05-09 02:07:45,469:INFO:Defining Hyperparameters
2024-05-09 02:07:45,549:INFO:Tuning with n_jobs=-1
2024-05-09 02:07:45,549:INFO:Initializing RandomizedSearchCV
2024-05-09 02:08:03,610:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2024-05-09 02:08:03,610:INFO:Hyperparameter search completed
2024-05-09 02:08:03,610:INFO:SubProcess create_model() called ==================================
2024-05-09 02:08:03,610:INFO:Initializing create_model()
2024-05-09 02:08:03,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4854), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D3CD85A550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 5, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'absolute_error', 'bootstrap': True})
2024-05-09 02:08:03,610:INFO:Checking exceptions
2024-05-09 02:08:03,610:INFO:Importing libraries
2024-05-09 02:08:03,610:INFO:Copying training dataset
2024-05-09 02:08:03,610:INFO:Defining folds
2024-05-09 02:08:03,610:INFO:Declaring metric variables
2024-05-09 02:08:03,610:INFO:Importing untrained model
2024-05-09 02:08:03,610:INFO:Declaring custom model
2024-05-09 02:08:03,620:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:08:03,620:INFO:Starting cross validation
2024-05-09 02:08:03,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:08:04,589:INFO:Calculating mean and std
2024-05-09 02:08:04,589:INFO:Creating metrics dataframe
2024-05-09 02:08:04,591:INFO:Finalizing model
2024-05-09 02:08:04,787:INFO:Uploading results into container
2024-05-09 02:08:04,787:INFO:Uploading model into container now
2024-05-09 02:08:04,787:INFO:_master_model_container: 2
2024-05-09 02:08:04,787:INFO:_display_container: 3
2024-05-09 02:08:04,787:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=9,
                    min_impurity_decrease=0.0001, min_samples_leaf=4,
                    min_samples_split=5, n_jobs=-1, random_state=4854)
2024-05-09 02:08:04,787:INFO:create_model() successfully completed......................................
2024-05-09 02:08:04,863:INFO:SubProcess create_model() end ==================================
2024-05-09 02:08:04,863:INFO:choose_better activated
2024-05-09 02:08:04,863:INFO:SubProcess create_model() called ==================================
2024-05-09 02:08:04,863:INFO:Initializing create_model()
2024-05-09 02:08:04,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4854), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:08:04,863:INFO:Checking exceptions
2024-05-09 02:08:04,863:INFO:Importing libraries
2024-05-09 02:08:04,863:INFO:Copying training dataset
2024-05-09 02:08:04,863:INFO:Defining folds
2024-05-09 02:08:04,863:INFO:Declaring metric variables
2024-05-09 02:08:04,863:INFO:Importing untrained model
2024-05-09 02:08:04,863:INFO:Declaring custom model
2024-05-09 02:08:04,863:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:08:04,863:INFO:Starting cross validation
2024-05-09 02:08:04,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:08:05,372:INFO:Calculating mean and std
2024-05-09 02:08:05,372:INFO:Creating metrics dataframe
2024-05-09 02:08:05,372:INFO:Finalizing model
2024-05-09 02:08:05,451:INFO:Uploading results into container
2024-05-09 02:08:05,451:INFO:Uploading model into container now
2024-05-09 02:08:05,454:INFO:_master_model_container: 3
2024-05-09 02:08:05,454:INFO:_display_container: 4
2024-05-09 02:08:05,454:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:05,454:INFO:create_model() successfully completed......................................
2024-05-09 02:08:05,514:INFO:SubProcess create_model() end ==================================
2024-05-09 02:08:05,514:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4854) result for R2 is 0.723
2024-05-09 02:08:05,514:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=9,
                    min_impurity_decrease=0.0001, min_samples_leaf=4,
                    min_samples_split=5, n_jobs=-1, random_state=4854) result for R2 is 0.6796
2024-05-09 02:08:05,514:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4854) is best model
2024-05-09 02:08:05,514:INFO:choose_better completed
2024-05-09 02:08:05,514:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:08:05,524:INFO:_master_model_container: 3
2024-05-09 02:08:05,524:INFO:_display_container: 3
2024-05-09 02:08:05,524:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:05,524:INFO:tune_model() successfully completed......................................
2024-05-09 02:08:05,605:INFO:Initializing finalize_model()
2024-05-09 02:08:05,605:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4854), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:08:05,605:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:05,605:INFO:Initializing create_model()
2024-05-09 02:08:05,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4854), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:08:05,605:INFO:Checking exceptions
2024-05-09 02:08:05,605:INFO:Importing libraries
2024-05-09 02:08:05,605:INFO:Copying training dataset
2024-05-09 02:08:05,605:INFO:Defining folds
2024-05-09 02:08:05,605:INFO:Declaring metric variables
2024-05-09 02:08:05,605:INFO:Importing untrained model
2024-05-09 02:08:05,605:INFO:Declaring custom model
2024-05-09 02:08:05,605:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:08:05,605:INFO:Cross validation set to False
2024-05-09 02:08:05,605:INFO:Fitting Model
2024-05-09 02:08:05,706:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4854))])
2024-05-09 02:08:05,706:INFO:create_model() successfully completed......................................
2024-05-09 02:08:05,776:INFO:_master_model_container: 3
2024-05-09 02:08:05,776:INFO:_display_container: 3
2024-05-09 02:08:05,776:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4854))])
2024-05-09 02:08:05,776:INFO:finalize_model() successfully completed......................................
2024-05-09 02:08:05,856:INFO:Initializing create_model()
2024-05-09 02:08:05,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:08:05,856:INFO:Checking exceptions
2024-05-09 02:08:05,856:INFO:Importing libraries
2024-05-09 02:08:05,856:INFO:Copying training dataset
2024-05-09 02:08:05,861:INFO:Defining folds
2024-05-09 02:08:05,861:INFO:Declaring metric variables
2024-05-09 02:08:05,861:INFO:Importing untrained model
2024-05-09 02:08:05,861:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:08:05,861:INFO:Starting cross validation
2024-05-09 02:08:05,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:08:06,481:INFO:Calculating mean and std
2024-05-09 02:08:06,481:INFO:Creating metrics dataframe
2024-05-09 02:08:06,483:INFO:Finalizing model
2024-05-09 02:08:06,625:INFO:Uploading results into container
2024-05-09 02:08:06,625:INFO:Uploading model into container now
2024-05-09 02:08:06,625:INFO:_master_model_container: 4
2024-05-09 02:08:06,625:INFO:_display_container: 4
2024-05-09 02:08:06,625:INFO:RandomForestRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:06,625:INFO:create_model() successfully completed......................................
2024-05-09 02:08:06,725:INFO:Initializing tune_model()
2024-05-09 02:08:06,725:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4854), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:08:06,725:INFO:Checking exceptions
2024-05-09 02:08:06,725:INFO:Copying training dataset
2024-05-09 02:08:06,735:INFO:Checking base model
2024-05-09 02:08:06,735:INFO:Base model : Random Forest Regressor
2024-05-09 02:08:06,735:INFO:Declaring metric variables
2024-05-09 02:08:06,735:INFO:Defining Hyperparameters
2024-05-09 02:08:06,815:INFO:Tuning with n_jobs=-1
2024-05-09 02:08:06,815:INFO:Initializing RandomizedSearchCV
2024-05-09 02:08:36,168:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2024-05-09 02:08:36,168:INFO:Hyperparameter search completed
2024-05-09 02:08:36,168:INFO:SubProcess create_model() called ==================================
2024-05-09 02:08:36,168:INFO:Initializing create_model()
2024-05-09 02:08:36,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4854), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D3CF5E86D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 190, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'absolute_error', 'bootstrap': False})
2024-05-09 02:08:36,168:INFO:Checking exceptions
2024-05-09 02:08:36,168:INFO:Importing libraries
2024-05-09 02:08:36,168:INFO:Copying training dataset
2024-05-09 02:08:36,168:INFO:Defining folds
2024-05-09 02:08:36,168:INFO:Declaring metric variables
2024-05-09 02:08:36,168:INFO:Importing untrained model
2024-05-09 02:08:36,168:INFO:Declaring custom model
2024-05-09 02:08:36,168:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:08:36,168:INFO:Starting cross validation
2024-05-09 02:08:36,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:08:39,002:INFO:Calculating mean and std
2024-05-09 02:08:39,003:INFO:Creating metrics dataframe
2024-05-09 02:08:39,003:INFO:Finalizing model
2024-05-09 02:08:39,365:INFO:Uploading results into container
2024-05-09 02:08:39,365:INFO:Uploading model into container now
2024-05-09 02:08:39,367:INFO:_master_model_container: 5
2024-05-09 02:08:39,367:INFO:_display_container: 5
2024-05-09 02:08:39,367:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=10,
                      max_features='sqrt', min_impurity_decrease=0.1,
                      min_samples_leaf=3, min_samples_split=7, n_estimators=190,
                      n_jobs=-1, random_state=4854)
2024-05-09 02:08:39,367:INFO:create_model() successfully completed......................................
2024-05-09 02:08:39,447:INFO:SubProcess create_model() end ==================================
2024-05-09 02:08:39,447:INFO:choose_better activated
2024-05-09 02:08:39,447:INFO:SubProcess create_model() called ==================================
2024-05-09 02:08:39,447:INFO:Initializing create_model()
2024-05-09 02:08:39,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4854), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:08:39,447:INFO:Checking exceptions
2024-05-09 02:08:39,447:INFO:Importing libraries
2024-05-09 02:08:39,447:INFO:Copying training dataset
2024-05-09 02:08:39,447:INFO:Defining folds
2024-05-09 02:08:39,457:INFO:Declaring metric variables
2024-05-09 02:08:39,457:INFO:Importing untrained model
2024-05-09 02:08:39,457:INFO:Declaring custom model
2024-05-09 02:08:39,457:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:08:39,457:INFO:Starting cross validation
2024-05-09 02:08:39,457:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:08:40,041:INFO:Calculating mean and std
2024-05-09 02:08:40,043:INFO:Creating metrics dataframe
2024-05-09 02:08:40,043:INFO:Finalizing model
2024-05-09 02:08:40,162:INFO:Uploading results into container
2024-05-09 02:08:40,164:INFO:Uploading model into container now
2024-05-09 02:08:40,164:INFO:_master_model_container: 6
2024-05-09 02:08:40,164:INFO:_display_container: 6
2024-05-09 02:08:40,164:INFO:RandomForestRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:40,164:INFO:create_model() successfully completed......................................
2024-05-09 02:08:40,244:INFO:SubProcess create_model() end ==================================
2024-05-09 02:08:40,244:INFO:RandomForestRegressor(n_jobs=-1, random_state=4854) result for R2 is 0.7308
2024-05-09 02:08:40,244:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=10,
                      max_features='sqrt', min_impurity_decrease=0.1,
                      min_samples_leaf=3, min_samples_split=7, n_estimators=190,
                      n_jobs=-1, random_state=4854) result for R2 is 0.7146
2024-05-09 02:08:40,244:INFO:RandomForestRegressor(n_jobs=-1, random_state=4854) is best model
2024-05-09 02:08:40,244:INFO:choose_better completed
2024-05-09 02:08:40,244:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:08:40,254:INFO:_master_model_container: 6
2024-05-09 02:08:40,254:INFO:_display_container: 5
2024-05-09 02:08:40,254:INFO:RandomForestRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:40,254:INFO:tune_model() successfully completed......................................
2024-05-09 02:08:40,344:INFO:Initializing finalize_model()
2024-05-09 02:08:40,344:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4854), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:08:40,344:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=4854)
2024-05-09 02:08:40,344:INFO:Initializing create_model()
2024-05-09 02:08:40,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D3BA8B8AD0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4854), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:08:40,344:INFO:Checking exceptions
2024-05-09 02:08:40,344:INFO:Importing libraries
2024-05-09 02:08:40,344:INFO:Copying training dataset
2024-05-09 02:08:40,344:INFO:Defining folds
2024-05-09 02:08:40,344:INFO:Declaring metric variables
2024-05-09 02:08:40,344:INFO:Importing untrained model
2024-05-09 02:08:40,344:INFO:Declaring custom model
2024-05-09 02:08:40,344:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:08:40,344:INFO:Cross validation set to False
2024-05-09 02:08:40,344:INFO:Fitting Model
2024-05-09 02:08:40,507:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4854))])
2024-05-09 02:08:40,507:INFO:create_model() successfully completed......................................
2024-05-09 02:08:40,590:INFO:_master_model_container: 6
2024-05-09 02:08:40,590:INFO:_display_container: 5
2024-05-09 02:08:40,597:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4854))])
2024-05-09 02:08:40,597:INFO:finalize_model() successfully completed......................................
2024-05-09 02:15:40,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:15:40,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:15:40,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:15:40,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:15:40,404:INFO:PyCaret RegressionExperiment
2024-05-09 02:15:40,404:INFO:Logging name: reg-default-name
2024-05-09 02:15:40,404:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 02:15:40,404:INFO:version 3.3.2
2024-05-09 02:15:40,404:INFO:Initializing setup()
2024-05-09 02:15:40,404:INFO:self.USI: b8dc
2024-05-09 02:15:40,404:INFO:self._variable_keys: {'exp_id', 'y', 'fold_generator', 'X_test', 'data', 'transform_target_param', 'html_param', 'y_train', 'log_plots_param', 'y_test', 'X_train', 'seed', 'USI', 'fold_shuffle_param', 'gpu_param', 'X', 'gpu_n_jobs_param', 'target_param', 'logging_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'pipeline', 'exp_name_log', 'n_jobs_param', 'memory', 'idx'}
2024-05-09 02:15:40,404:INFO:Checking environment
2024-05-09 02:15:40,404:INFO:python_version: 3.11.9
2024-05-09 02:15:40,404:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 02:15:40,404:INFO:machine: AMD64
2024-05-09 02:15:40,414:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 02:15:40,414:INFO:Memory: svmem(total=7947747328, available=1026748416, percent=87.1, used=6920998912, free=1026748416)
2024-05-09 02:15:40,414:INFO:Physical Core: 6
2024-05-09 02:15:40,414:INFO:Logical Core: 6
2024-05-09 02:15:40,414:INFO:Checking libraries
2024-05-09 02:15:40,414:INFO:System:
2024-05-09 02:15:40,414:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 02:15:40,414:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 02:15:40,414:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 02:15:40,414:INFO:PyCaret required dependencies:
2024-05-09 02:15:40,444:INFO:                 pip: 24.0
2024-05-09 02:15:40,444:INFO:          setuptools: 65.5.0
2024-05-09 02:15:40,444:INFO:             pycaret: 3.3.2
2024-05-09 02:15:40,444:INFO:             IPython: 8.24.0
2024-05-09 02:15:40,444:INFO:          ipywidgets: 8.1.2
2024-05-09 02:15:40,444:INFO:                tqdm: 4.66.4
2024-05-09 02:15:40,444:INFO:               numpy: 1.26.4
2024-05-09 02:15:40,444:INFO:              pandas: 2.1.4
2024-05-09 02:15:40,444:INFO:              jinja2: 3.1.4
2024-05-09 02:15:40,444:INFO:               scipy: 1.11.4
2024-05-09 02:15:40,444:INFO:              joblib: 1.3.2
2024-05-09 02:15:40,444:INFO:             sklearn: 1.4.2
2024-05-09 02:15:40,444:INFO:                pyod: 1.1.3
2024-05-09 02:15:40,444:INFO:            imblearn: 0.12.2
2024-05-09 02:15:40,444:INFO:   category_encoders: 2.6.3
2024-05-09 02:15:40,444:INFO:            lightgbm: 4.3.0
2024-05-09 02:15:40,444:INFO:               numba: 0.59.1
2024-05-09 02:15:40,444:INFO:            requests: 2.31.0
2024-05-09 02:15:40,444:INFO:          matplotlib: 3.7.5
2024-05-09 02:15:40,444:INFO:          scikitplot: 0.3.7
2024-05-09 02:15:40,444:INFO:         yellowbrick: 1.5
2024-05-09 02:15:40,444:INFO:              plotly: 5.22.0
2024-05-09 02:15:40,444:INFO:    plotly-resampler: Not installed
2024-05-09 02:15:40,444:INFO:             kaleido: 0.2.1
2024-05-09 02:15:40,444:INFO:           schemdraw: 0.15
2024-05-09 02:15:40,444:INFO:         statsmodels: 0.14.2
2024-05-09 02:15:40,444:INFO:              sktime: 0.26.0
2024-05-09 02:15:40,444:INFO:               tbats: 1.1.3
2024-05-09 02:15:40,444:INFO:            pmdarima: 2.0.4
2024-05-09 02:15:40,444:INFO:              psutil: 5.9.8
2024-05-09 02:15:40,444:INFO:          markupsafe: 2.1.5
2024-05-09 02:15:40,444:INFO:             pickle5: Not installed
2024-05-09 02:15:40,444:INFO:         cloudpickle: 3.0.0
2024-05-09 02:15:40,444:INFO:         deprecation: 2.1.0
2024-05-09 02:15:40,444:INFO:              xxhash: 3.4.1
2024-05-09 02:15:40,444:INFO:           wurlitzer: Not installed
2024-05-09 02:15:40,444:INFO:PyCaret optional dependencies:
2024-05-09 02:15:40,454:INFO:                shap: Not installed
2024-05-09 02:15:40,454:INFO:           interpret: Not installed
2024-05-09 02:15:40,454:INFO:                umap: Not installed
2024-05-09 02:15:40,454:INFO:     ydata_profiling: Not installed
2024-05-09 02:15:40,454:INFO:  explainerdashboard: Not installed
2024-05-09 02:15:40,454:INFO:             autoviz: Not installed
2024-05-09 02:15:40,454:INFO:           fairlearn: Not installed
2024-05-09 02:15:40,454:INFO:          deepchecks: Not installed
2024-05-09 02:15:40,454:INFO:             xgboost: Not installed
2024-05-09 02:15:40,454:INFO:            catboost: Not installed
2024-05-09 02:15:40,454:INFO:              kmodes: Not installed
2024-05-09 02:15:40,454:INFO:             mlxtend: Not installed
2024-05-09 02:15:40,454:INFO:       statsforecast: Not installed
2024-05-09 02:15:40,454:INFO:        tune_sklearn: Not installed
2024-05-09 02:15:40,454:INFO:                 ray: Not installed
2024-05-09 02:15:40,454:INFO:            hyperopt: Not installed
2024-05-09 02:15:40,454:INFO:              optuna: Not installed
2024-05-09 02:15:40,454:INFO:               skopt: Not installed
2024-05-09 02:15:40,454:INFO:              mlflow: Not installed
2024-05-09 02:15:40,454:INFO:              gradio: Not installed
2024-05-09 02:15:40,454:INFO:             fastapi: Not installed
2024-05-09 02:15:40,454:INFO:             uvicorn: Not installed
2024-05-09 02:15:40,454:INFO:              m2cgen: Not installed
2024-05-09 02:15:40,454:INFO:           evidently: Not installed
2024-05-09 02:15:40,454:INFO:               fugue: Not installed
2024-05-09 02:15:40,454:INFO:           streamlit: Not installed
2024-05-09 02:15:40,454:INFO:             prophet: Not installed
2024-05-09 02:15:40,454:INFO:None
2024-05-09 02:15:40,454:INFO:Set up data.
2024-05-09 02:15:40,454:INFO:Set up folding strategy.
2024-05-09 02:15:40,454:INFO:Set up train/test split.
2024-05-09 02:15:40,464:INFO:Set up index.
2024-05-09 02:15:40,464:INFO:Assigning column types.
2024-05-09 02:15:40,464:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 02:15:40,464:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,464:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,474:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,534:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,584:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,584:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,594:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,694:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,694:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 02:15:40,704:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,814:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,814:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,914:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:40,924:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 02:15:40,924:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:15:40,984:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,025:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,045:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,095:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,145:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 02:15:41,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,365:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,365:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 02:15:41,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,545:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:15:41,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,595:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 02:15:41,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:41,816:INFO:Preparing preprocessing pipeline...
2024-05-09 02:15:41,816:INFO:Set up simple imputation.
2024-05-09 02:15:41,816:INFO:Set up column name cleaning.
2024-05-09 02:15:41,836:INFO:Finished creating preprocessing pipeline.
2024-05-09 02:15:41,846:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 02:15:41,846:INFO:Creating final display dataframe.
2024-05-09 02:15:41,896:INFO:Setup _display_container:                     Description             Value
0                    Session id              3910
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b8dc
2024-05-09 02:15:42,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:42,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:42,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:42,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:15:42,126:INFO:setup() successfully completed in 1.72s...............
2024-05-09 02:15:42,136:INFO:Initializing create_model()
2024-05-09 02:15:42,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:15:42,136:INFO:Checking exceptions
2024-05-09 02:15:42,136:INFO:Importing libraries
2024-05-09 02:15:42,136:INFO:Copying training dataset
2024-05-09 02:15:42,146:INFO:Defining folds
2024-05-09 02:15:42,146:INFO:Declaring metric variables
2024-05-09 02:15:42,146:INFO:Importing untrained model
2024-05-09 02:15:42,146:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:15:42,146:INFO:Starting cross validation
2024-05-09 02:15:42,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:15:46,397:INFO:Calculating mean and std
2024-05-09 02:15:46,397:INFO:Creating metrics dataframe
2024-05-09 02:15:46,400:INFO:Finalizing model
2024-05-09 02:15:46,477:INFO:Uploading results into container
2024-05-09 02:15:46,477:INFO:Uploading model into container now
2024-05-09 02:15:46,481:INFO:_master_model_container: 1
2024-05-09 02:15:46,481:INFO:_display_container: 2
2024-05-09 02:15:46,481:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:15:46,481:INFO:create_model() successfully completed......................................
2024-05-09 02:15:46,550:INFO:Initializing tune_model()
2024-05-09 02:15:46,550:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3910), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:15:46,550:INFO:Checking exceptions
2024-05-09 02:15:46,560:INFO:Copying training dataset
2024-05-09 02:15:46,560:INFO:Checking base model
2024-05-09 02:15:46,560:INFO:Base model : Extra Trees Regressor
2024-05-09 02:15:46,560:INFO:Declaring metric variables
2024-05-09 02:15:46,560:INFO:Defining Hyperparameters
2024-05-09 02:15:46,631:INFO:Tuning with n_jobs=-1
2024-05-09 02:15:46,631:INFO:Initializing RandomizedSearchCV
2024-05-09 02:15:57,848:INFO:best_params: {'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2024-05-09 02:15:57,848:INFO:Hyperparameter search completed
2024-05-09 02:15:57,848:INFO:SubProcess create_model() called ==================================
2024-05-09 02:15:57,848:INFO:Initializing create_model()
2024-05-09 02:15:57,848:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3910), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BB61FAEE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 140, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.5, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2024-05-09 02:15:57,848:INFO:Checking exceptions
2024-05-09 02:15:57,848:INFO:Importing libraries
2024-05-09 02:15:57,848:INFO:Copying training dataset
2024-05-09 02:15:57,853:INFO:Defining folds
2024-05-09 02:15:57,853:INFO:Declaring metric variables
2024-05-09 02:15:57,853:INFO:Importing untrained model
2024-05-09 02:15:57,853:INFO:Declaring custom model
2024-05-09 02:15:57,853:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:15:57,853:INFO:Starting cross validation
2024-05-09 02:15:57,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:15:58,341:INFO:Calculating mean and std
2024-05-09 02:15:58,341:INFO:Creating metrics dataframe
2024-05-09 02:15:58,341:INFO:Finalizing model
2024-05-09 02:15:58,446:INFO:Uploading results into container
2024-05-09 02:15:58,446:INFO:Uploading model into container now
2024-05-09 02:15:58,446:INFO:_master_model_container: 2
2024-05-09 02:15:58,446:INFO:_display_container: 3
2024-05-09 02:15:58,446:INFO:ExtraTreesRegressor(max_depth=8, min_impurity_decrease=0.5, min_samples_leaf=4,
                    min_samples_split=10, n_estimators=140, n_jobs=-1,
                    random_state=3910)
2024-05-09 02:15:58,446:INFO:create_model() successfully completed......................................
2024-05-09 02:15:58,542:INFO:SubProcess create_model() end ==================================
2024-05-09 02:15:58,542:INFO:choose_better activated
2024-05-09 02:15:58,542:INFO:SubProcess create_model() called ==================================
2024-05-09 02:15:58,542:INFO:Initializing create_model()
2024-05-09 02:15:58,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3910), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:15:58,542:INFO:Checking exceptions
2024-05-09 02:15:58,542:INFO:Importing libraries
2024-05-09 02:15:58,542:INFO:Copying training dataset
2024-05-09 02:15:58,542:INFO:Defining folds
2024-05-09 02:15:58,542:INFO:Declaring metric variables
2024-05-09 02:15:58,542:INFO:Importing untrained model
2024-05-09 02:15:58,542:INFO:Declaring custom model
2024-05-09 02:15:58,542:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:15:58,542:INFO:Starting cross validation
2024-05-09 02:15:58,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:15:59,048:INFO:Calculating mean and std
2024-05-09 02:15:59,048:INFO:Creating metrics dataframe
2024-05-09 02:15:59,048:INFO:Finalizing model
2024-05-09 02:15:59,139:INFO:Uploading results into container
2024-05-09 02:15:59,139:INFO:Uploading model into container now
2024-05-09 02:15:59,139:INFO:_master_model_container: 3
2024-05-09 02:15:59,139:INFO:_display_container: 4
2024-05-09 02:15:59,139:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:15:59,139:INFO:create_model() successfully completed......................................
2024-05-09 02:15:59,236:INFO:SubProcess create_model() end ==================================
2024-05-09 02:15:59,236:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3910) result for R2 is 0.7176
2024-05-09 02:15:59,236:INFO:ExtraTreesRegressor(max_depth=8, min_impurity_decrease=0.5, min_samples_leaf=4,
                    min_samples_split=10, n_estimators=140, n_jobs=-1,
                    random_state=3910) result for R2 is 0.6694
2024-05-09 02:15:59,236:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3910) is best model
2024-05-09 02:15:59,236:INFO:choose_better completed
2024-05-09 02:15:59,236:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:15:59,246:INFO:_master_model_container: 3
2024-05-09 02:15:59,246:INFO:_display_container: 3
2024-05-09 02:15:59,246:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:15:59,246:INFO:tune_model() successfully completed......................................
2024-05-09 02:15:59,336:INFO:Initializing finalize_model()
2024-05-09 02:15:59,336:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3910), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:15:59,336:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:15:59,346:INFO:Initializing create_model()
2024-05-09 02:15:59,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3910), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:15:59,346:INFO:Checking exceptions
2024-05-09 02:15:59,346:INFO:Importing libraries
2024-05-09 02:15:59,346:INFO:Copying training dataset
2024-05-09 02:15:59,346:INFO:Defining folds
2024-05-09 02:15:59,346:INFO:Declaring metric variables
2024-05-09 02:15:59,346:INFO:Importing untrained model
2024-05-09 02:15:59,346:INFO:Declaring custom model
2024-05-09 02:15:59,346:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:15:59,346:INFO:Cross validation set to False
2024-05-09 02:15:59,346:INFO:Fitting Model
2024-05-09 02:15:59,437:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3910))])
2024-05-09 02:15:59,437:INFO:create_model() successfully completed......................................
2024-05-09 02:15:59,527:INFO:_master_model_container: 3
2024-05-09 02:15:59,527:INFO:_display_container: 3
2024-05-09 02:15:59,527:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3910))])
2024-05-09 02:15:59,527:INFO:finalize_model() successfully completed......................................
2024-05-09 02:15:59,607:INFO:Initializing create_model()
2024-05-09 02:15:59,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:15:59,607:INFO:Checking exceptions
2024-05-09 02:15:59,607:INFO:Importing libraries
2024-05-09 02:15:59,607:INFO:Copying training dataset
2024-05-09 02:15:59,607:INFO:Defining folds
2024-05-09 02:15:59,607:INFO:Declaring metric variables
2024-05-09 02:15:59,607:INFO:Importing untrained model
2024-05-09 02:15:59,607:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:15:59,607:INFO:Starting cross validation
2024-05-09 02:15:59,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:00,212:INFO:Calculating mean and std
2024-05-09 02:16:00,212:INFO:Creating metrics dataframe
2024-05-09 02:16:00,212:INFO:Finalizing model
2024-05-09 02:16:00,346:INFO:Uploading results into container
2024-05-09 02:16:00,346:INFO:Uploading model into container now
2024-05-09 02:16:00,346:INFO:_master_model_container: 4
2024-05-09 02:16:00,346:INFO:_display_container: 4
2024-05-09 02:16:00,346:INFO:RandomForestRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:16:00,346:INFO:create_model() successfully completed......................................
2024-05-09 02:16:00,446:INFO:Initializing tune_model()
2024-05-09 02:16:00,446:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3910), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:16:00,446:INFO:Checking exceptions
2024-05-09 02:16:00,456:INFO:Copying training dataset
2024-05-09 02:16:00,456:INFO:Checking base model
2024-05-09 02:16:00,456:INFO:Base model : Random Forest Regressor
2024-05-09 02:16:00,456:INFO:Declaring metric variables
2024-05-09 02:16:00,456:INFO:Defining Hyperparameters
2024-05-09 02:16:00,546:INFO:Tuning with n_jobs=-1
2024-05-09 02:16:00,546:INFO:Initializing RandomizedSearchCV
2024-05-09 02:16:17,798:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 02:16:17,798:INFO:Hyperparameter search completed
2024-05-09 02:16:17,798:INFO:SubProcess create_model() called ==================================
2024-05-09 02:16:17,798:INFO:Initializing create_model()
2024-05-09 02:16:17,798:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3910), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BB653E7250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 02:16:17,798:INFO:Checking exceptions
2024-05-09 02:16:17,798:INFO:Importing libraries
2024-05-09 02:16:17,798:INFO:Copying training dataset
2024-05-09 02:16:17,798:INFO:Defining folds
2024-05-09 02:16:17,798:INFO:Declaring metric variables
2024-05-09 02:16:17,798:INFO:Importing untrained model
2024-05-09 02:16:17,798:INFO:Declaring custom model
2024-05-09 02:16:17,798:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:16:17,798:INFO:Starting cross validation
2024-05-09 02:16:17,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:18,750:INFO:Calculating mean and std
2024-05-09 02:16:18,750:INFO:Creating metrics dataframe
2024-05-09 02:16:18,751:INFO:Finalizing model
2024-05-09 02:16:19,002:INFO:Uploading results into container
2024-05-09 02:16:19,002:INFO:Uploading model into container now
2024-05-09 02:16:19,002:INFO:_master_model_container: 5
2024-05-09 02:16:19,002:INFO:_display_container: 5
2024-05-09 02:16:19,002:INFO:RandomForestRegressor(max_depth=8, min_impurity_decrease=0.005,
                      min_samples_leaf=3, min_samples_split=7, n_estimators=200,
                      n_jobs=-1, random_state=3910)
2024-05-09 02:16:19,002:INFO:create_model() successfully completed......................................
2024-05-09 02:16:19,070:INFO:SubProcess create_model() end ==================================
2024-05-09 02:16:19,070:INFO:choose_better activated
2024-05-09 02:16:19,070:INFO:SubProcess create_model() called ==================================
2024-05-09 02:16:19,070:INFO:Initializing create_model()
2024-05-09 02:16:19,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3910), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:16:19,070:INFO:Checking exceptions
2024-05-09 02:16:19,070:INFO:Importing libraries
2024-05-09 02:16:19,070:INFO:Copying training dataset
2024-05-09 02:16:19,070:INFO:Defining folds
2024-05-09 02:16:19,070:INFO:Declaring metric variables
2024-05-09 02:16:19,070:INFO:Importing untrained model
2024-05-09 02:16:19,070:INFO:Declaring custom model
2024-05-09 02:16:19,070:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:16:19,070:INFO:Starting cross validation
2024-05-09 02:16:19,081:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:19,782:INFO:Calculating mean and std
2024-05-09 02:16:19,783:INFO:Creating metrics dataframe
2024-05-09 02:16:19,785:INFO:Finalizing model
2024-05-09 02:16:19,913:INFO:Uploading results into container
2024-05-09 02:16:19,914:INFO:Uploading model into container now
2024-05-09 02:16:19,915:INFO:_master_model_container: 6
2024-05-09 02:16:19,915:INFO:_display_container: 6
2024-05-09 02:16:19,915:INFO:RandomForestRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:16:19,915:INFO:create_model() successfully completed......................................
2024-05-09 02:16:20,004:INFO:SubProcess create_model() end ==================================
2024-05-09 02:16:20,004:INFO:RandomForestRegressor(n_jobs=-1, random_state=3910) result for R2 is 0.731
2024-05-09 02:16:20,004:INFO:RandomForestRegressor(max_depth=8, min_impurity_decrease=0.005,
                      min_samples_leaf=3, min_samples_split=7, n_estimators=200,
                      n_jobs=-1, random_state=3910) result for R2 is 0.7001
2024-05-09 02:16:20,004:INFO:RandomForestRegressor(n_jobs=-1, random_state=3910) is best model
2024-05-09 02:16:20,004:INFO:choose_better completed
2024-05-09 02:16:20,004:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:16:20,014:INFO:_master_model_container: 6
2024-05-09 02:16:20,014:INFO:_display_container: 5
2024-05-09 02:16:20,014:INFO:RandomForestRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:16:20,014:INFO:tune_model() successfully completed......................................
2024-05-09 02:16:20,112:INFO:Initializing finalize_model()
2024-05-09 02:16:20,112:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3910), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:16:20,112:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=3910)
2024-05-09 02:16:20,114:INFO:Initializing create_model()
2024-05-09 02:16:20,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BB51191150>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3910), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:16:20,114:INFO:Checking exceptions
2024-05-09 02:16:20,116:INFO:Importing libraries
2024-05-09 02:16:20,116:INFO:Copying training dataset
2024-05-09 02:16:20,116:INFO:Defining folds
2024-05-09 02:16:20,116:INFO:Declaring metric variables
2024-05-09 02:16:20,116:INFO:Importing untrained model
2024-05-09 02:16:20,117:INFO:Declaring custom model
2024-05-09 02:16:20,117:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:16:20,117:INFO:Cross validation set to False
2024-05-09 02:16:20,117:INFO:Fitting Model
2024-05-09 02:16:20,249:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3910))])
2024-05-09 02:16:20,249:INFO:create_model() successfully completed......................................
2024-05-09 02:16:20,315:INFO:_master_model_container: 6
2024-05-09 02:16:20,315:INFO:_display_container: 5
2024-05-09 02:16:20,315:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3910))])
2024-05-09 02:16:20,315:INFO:finalize_model() successfully completed......................................
2024-05-09 02:16:36,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:16:36,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:16:36,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:16:36,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:16:36,986:INFO:PyCaret RegressionExperiment
2024-05-09 02:16:36,986:INFO:Logging name: reg-default-name
2024-05-09 02:16:36,986:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 02:16:36,986:INFO:version 3.3.2
2024-05-09 02:16:36,986:INFO:Initializing setup()
2024-05-09 02:16:36,986:INFO:self.USI: b171
2024-05-09 02:16:36,986:INFO:self._variable_keys: {'logging_param', 'USI', 'memory', '_available_plots', 'target_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'idx', 'transform_target_param', 'y_test', 'fold_shuffle_param', 'X_test', 'fold_generator', 'y_train', 'X', 'n_jobs_param', 'pipeline', 'html_param', 'seed', 'gpu_param', 'X_train', 'exp_name_log', 'data', 'y'}
2024-05-09 02:16:36,986:INFO:Checking environment
2024-05-09 02:16:36,986:INFO:python_version: 3.11.9
2024-05-09 02:16:36,986:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 02:16:36,986:INFO:machine: AMD64
2024-05-09 02:16:36,996:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 02:16:36,996:INFO:Memory: svmem(total=7947747328, available=1979817984, percent=75.1, used=5967929344, free=1979817984)
2024-05-09 02:16:36,996:INFO:Physical Core: 6
2024-05-09 02:16:36,996:INFO:Logical Core: 6
2024-05-09 02:16:36,996:INFO:Checking libraries
2024-05-09 02:16:36,996:INFO:System:
2024-05-09 02:16:36,996:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 02:16:36,996:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 02:16:36,996:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 02:16:36,996:INFO:PyCaret required dependencies:
2024-05-09 02:16:37,016:INFO:                 pip: 24.0
2024-05-09 02:16:37,016:INFO:          setuptools: 65.5.0
2024-05-09 02:16:37,016:INFO:             pycaret: 3.3.2
2024-05-09 02:16:37,016:INFO:             IPython: 8.24.0
2024-05-09 02:16:37,016:INFO:          ipywidgets: 8.1.2
2024-05-09 02:16:37,016:INFO:                tqdm: 4.66.4
2024-05-09 02:16:37,016:INFO:               numpy: 1.26.4
2024-05-09 02:16:37,016:INFO:              pandas: 2.1.4
2024-05-09 02:16:37,016:INFO:              jinja2: 3.1.4
2024-05-09 02:16:37,016:INFO:               scipy: 1.11.4
2024-05-09 02:16:37,016:INFO:              joblib: 1.3.2
2024-05-09 02:16:37,016:INFO:             sklearn: 1.4.2
2024-05-09 02:16:37,016:INFO:                pyod: 1.1.3
2024-05-09 02:16:37,016:INFO:            imblearn: 0.12.2
2024-05-09 02:16:37,016:INFO:   category_encoders: 2.6.3
2024-05-09 02:16:37,016:INFO:            lightgbm: 4.3.0
2024-05-09 02:16:37,016:INFO:               numba: 0.59.1
2024-05-09 02:16:37,016:INFO:            requests: 2.31.0
2024-05-09 02:16:37,016:INFO:          matplotlib: 3.7.5
2024-05-09 02:16:37,016:INFO:          scikitplot: 0.3.7
2024-05-09 02:16:37,016:INFO:         yellowbrick: 1.5
2024-05-09 02:16:37,016:INFO:              plotly: 5.22.0
2024-05-09 02:16:37,016:INFO:    plotly-resampler: Not installed
2024-05-09 02:16:37,016:INFO:             kaleido: 0.2.1
2024-05-09 02:16:37,016:INFO:           schemdraw: 0.15
2024-05-09 02:16:37,016:INFO:         statsmodels: 0.14.2
2024-05-09 02:16:37,016:INFO:              sktime: 0.26.0
2024-05-09 02:16:37,016:INFO:               tbats: 1.1.3
2024-05-09 02:16:37,016:INFO:            pmdarima: 2.0.4
2024-05-09 02:16:37,016:INFO:              psutil: 5.9.8
2024-05-09 02:16:37,016:INFO:          markupsafe: 2.1.5
2024-05-09 02:16:37,016:INFO:             pickle5: Not installed
2024-05-09 02:16:37,016:INFO:         cloudpickle: 3.0.0
2024-05-09 02:16:37,016:INFO:         deprecation: 2.1.0
2024-05-09 02:16:37,016:INFO:              xxhash: 3.4.1
2024-05-09 02:16:37,016:INFO:           wurlitzer: Not installed
2024-05-09 02:16:37,026:INFO:PyCaret optional dependencies:
2024-05-09 02:16:37,026:INFO:                shap: Not installed
2024-05-09 02:16:37,026:INFO:           interpret: Not installed
2024-05-09 02:16:37,026:INFO:                umap: Not installed
2024-05-09 02:16:37,026:INFO:     ydata_profiling: Not installed
2024-05-09 02:16:37,026:INFO:  explainerdashboard: Not installed
2024-05-09 02:16:37,026:INFO:             autoviz: Not installed
2024-05-09 02:16:37,026:INFO:           fairlearn: Not installed
2024-05-09 02:16:37,026:INFO:          deepchecks: Not installed
2024-05-09 02:16:37,026:INFO:             xgboost: Not installed
2024-05-09 02:16:37,026:INFO:            catboost: Not installed
2024-05-09 02:16:37,026:INFO:              kmodes: Not installed
2024-05-09 02:16:37,026:INFO:             mlxtend: Not installed
2024-05-09 02:16:37,026:INFO:       statsforecast: Not installed
2024-05-09 02:16:37,026:INFO:        tune_sklearn: Not installed
2024-05-09 02:16:37,026:INFO:                 ray: Not installed
2024-05-09 02:16:37,026:INFO:            hyperopt: Not installed
2024-05-09 02:16:37,026:INFO:              optuna: Not installed
2024-05-09 02:16:37,026:INFO:               skopt: Not installed
2024-05-09 02:16:37,026:INFO:              mlflow: Not installed
2024-05-09 02:16:37,026:INFO:              gradio: Not installed
2024-05-09 02:16:37,026:INFO:             fastapi: Not installed
2024-05-09 02:16:37,026:INFO:             uvicorn: Not installed
2024-05-09 02:16:37,026:INFO:              m2cgen: Not installed
2024-05-09 02:16:37,026:INFO:           evidently: Not installed
2024-05-09 02:16:37,026:INFO:               fugue: Not installed
2024-05-09 02:16:37,026:INFO:           streamlit: Not installed
2024-05-09 02:16:37,026:INFO:             prophet: Not installed
2024-05-09 02:16:37,026:INFO:None
2024-05-09 02:16:37,026:INFO:Set up data.
2024-05-09 02:16:37,036:INFO:Set up folding strategy.
2024-05-09 02:16:37,036:INFO:Set up train/test split.
2024-05-09 02:16:37,036:INFO:Set up index.
2024-05-09 02:16:37,036:INFO:Assigning column types.
2024-05-09 02:16:37,036:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 02:16:37,036:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,046:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,046:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,180:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,185:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,190:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,300:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 02:16:37,300:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,310:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,420:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,485:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,530:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 02:16:37,540:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,651:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,711:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,761:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 02:16:37,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:16:37,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:37,986:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 02:16:38,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:38,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:16:38,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,212:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 02:16:38,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,433:INFO:Preparing preprocessing pipeline...
2024-05-09 02:16:38,433:INFO:Set up simple imputation.
2024-05-09 02:16:38,433:INFO:Set up column name cleaning.
2024-05-09 02:16:38,463:INFO:Finished creating preprocessing pipeline.
2024-05-09 02:16:38,463:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 02:16:38,463:INFO:Creating final display dataframe.
2024-05-09 02:16:38,533:INFO:Setup _display_container:                     Description             Value
0                    Session id              7139
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b171
2024-05-09 02:16:38,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:16:38,754:INFO:setup() successfully completed in 1.77s...............
2024-05-09 02:16:38,764:INFO:Initializing create_model()
2024-05-09 02:16:38,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:16:38,764:INFO:Checking exceptions
2024-05-09 02:16:38,764:INFO:Importing libraries
2024-05-09 02:16:38,764:INFO:Copying training dataset
2024-05-09 02:16:38,774:INFO:Defining folds
2024-05-09 02:16:38,774:INFO:Declaring metric variables
2024-05-09 02:16:38,774:INFO:Importing untrained model
2024-05-09 02:16:38,774:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:16:38,774:INFO:Starting cross validation
2024-05-09 02:16:38,788:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:42,947:INFO:Calculating mean and std
2024-05-09 02:16:42,947:INFO:Creating metrics dataframe
2024-05-09 02:16:42,949:INFO:Finalizing model
2024-05-09 02:16:43,027:INFO:Uploading results into container
2024-05-09 02:16:43,027:INFO:Uploading model into container now
2024-05-09 02:16:43,031:INFO:_master_model_container: 1
2024-05-09 02:16:43,031:INFO:_display_container: 2
2024-05-09 02:16:43,031:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7139)
2024-05-09 02:16:43,031:INFO:create_model() successfully completed......................................
2024-05-09 02:16:43,101:INFO:Initializing tune_model()
2024-05-09 02:16:43,101:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7139), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:16:43,101:INFO:Checking exceptions
2024-05-09 02:16:43,101:INFO:Copying training dataset
2024-05-09 02:16:43,111:INFO:Checking base model
2024-05-09 02:16:43,111:INFO:Base model : Extra Trees Regressor
2024-05-09 02:16:43,111:INFO:Declaring metric variables
2024-05-09 02:16:43,111:INFO:Defining Hyperparameters
2024-05-09 02:16:43,181:INFO:Tuning with n_jobs=-1
2024-05-09 02:16:43,181:INFO:Initializing RandomizedSearchCV
2024-05-09 02:16:54,029:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2024-05-09 02:16:54,030:INFO:Hyperparameter search completed
2024-05-09 02:16:54,030:INFO:SubProcess create_model() called ==================================
2024-05-09 02:16:54,031:INFO:Initializing create_model()
2024-05-09 02:16:54,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7139), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001906E607290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': False})
2024-05-09 02:16:54,031:INFO:Checking exceptions
2024-05-09 02:16:54,031:INFO:Importing libraries
2024-05-09 02:16:54,031:INFO:Copying training dataset
2024-05-09 02:16:54,034:INFO:Defining folds
2024-05-09 02:16:54,034:INFO:Declaring metric variables
2024-05-09 02:16:54,034:INFO:Importing untrained model
2024-05-09 02:16:54,034:INFO:Declaring custom model
2024-05-09 02:16:54,035:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:16:54,035:INFO:Starting cross validation
2024-05-09 02:16:54,036:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:54,697:INFO:Calculating mean and std
2024-05-09 02:16:54,697:INFO:Creating metrics dataframe
2024-05-09 02:16:54,697:INFO:Finalizing model
2024-05-09 02:16:54,862:INFO:Uploading results into container
2024-05-09 02:16:54,862:INFO:Uploading model into container now
2024-05-09 02:16:54,862:INFO:_master_model_container: 2
2024-05-09 02:16:54,862:INFO:_display_container: 3
2024-05-09 02:16:54,862:INFO:ExtraTreesRegressor(max_depth=10, max_features='log2',
                    min_impurity_decrease=0.0002, min_samples_leaf=4,
                    n_estimators=240, n_jobs=-1, random_state=7139)
2024-05-09 02:16:54,862:INFO:create_model() successfully completed......................................
2024-05-09 02:16:54,969:INFO:SubProcess create_model() end ==================================
2024-05-09 02:16:54,969:INFO:choose_better activated
2024-05-09 02:16:54,969:INFO:SubProcess create_model() called ==================================
2024-05-09 02:16:54,969:INFO:Initializing create_model()
2024-05-09 02:16:54,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7139), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:16:54,969:INFO:Checking exceptions
2024-05-09 02:16:54,969:INFO:Importing libraries
2024-05-09 02:16:54,969:INFO:Copying training dataset
2024-05-09 02:16:54,969:INFO:Defining folds
2024-05-09 02:16:54,969:INFO:Declaring metric variables
2024-05-09 02:16:54,979:INFO:Importing untrained model
2024-05-09 02:16:54,979:INFO:Declaring custom model
2024-05-09 02:16:54,979:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:16:54,979:INFO:Starting cross validation
2024-05-09 02:16:54,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:55,560:INFO:Calculating mean and std
2024-05-09 02:16:55,560:INFO:Creating metrics dataframe
2024-05-09 02:16:55,560:INFO:Finalizing model
2024-05-09 02:16:55,648:INFO:Uploading results into container
2024-05-09 02:16:55,648:INFO:Uploading model into container now
2024-05-09 02:16:55,649:INFO:_master_model_container: 3
2024-05-09 02:16:55,649:INFO:_display_container: 4
2024-05-09 02:16:55,649:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7139)
2024-05-09 02:16:55,649:INFO:create_model() successfully completed......................................
2024-05-09 02:16:55,720:INFO:SubProcess create_model() end ==================================
2024-05-09 02:16:55,720:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7139) result for R2 is 0.7419
2024-05-09 02:16:55,720:INFO:ExtraTreesRegressor(max_depth=10, max_features='log2',
                    min_impurity_decrease=0.0002, min_samples_leaf=4,
                    n_estimators=240, n_jobs=-1, random_state=7139) result for R2 is 0.6728
2024-05-09 02:16:55,720:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7139) is best model
2024-05-09 02:16:55,720:INFO:choose_better completed
2024-05-09 02:16:55,720:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:16:55,720:INFO:_master_model_container: 3
2024-05-09 02:16:55,720:INFO:_display_container: 3
2024-05-09 02:16:55,720:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7139)
2024-05-09 02:16:55,720:INFO:tune_model() successfully completed......................................
2024-05-09 02:16:55,801:INFO:Initializing finalize_model()
2024-05-09 02:16:55,801:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7139), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:16:55,801:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=7139)
2024-05-09 02:16:55,801:INFO:Initializing create_model()
2024-05-09 02:16:55,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7139), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:16:55,801:INFO:Checking exceptions
2024-05-09 02:16:55,801:INFO:Importing libraries
2024-05-09 02:16:55,801:INFO:Copying training dataset
2024-05-09 02:16:55,801:INFO:Defining folds
2024-05-09 02:16:55,801:INFO:Declaring metric variables
2024-05-09 02:16:55,801:INFO:Importing untrained model
2024-05-09 02:16:55,801:INFO:Declaring custom model
2024-05-09 02:16:55,801:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:16:55,801:INFO:Cross validation set to False
2024-05-09 02:16:55,801:INFO:Fitting Model
2024-05-09 02:16:55,910:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7139))])
2024-05-09 02:16:55,910:INFO:create_model() successfully completed......................................
2024-05-09 02:16:55,986:INFO:_master_model_container: 3
2024-05-09 02:16:55,986:INFO:_display_container: 3
2024-05-09 02:16:55,986:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7139))])
2024-05-09 02:16:55,986:INFO:finalize_model() successfully completed......................................
2024-05-09 02:16:56,055:INFO:Initializing create_model()
2024-05-09 02:16:56,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:16:56,055:INFO:Checking exceptions
2024-05-09 02:16:56,055:INFO:Importing libraries
2024-05-09 02:16:56,055:INFO:Copying training dataset
2024-05-09 02:16:56,065:INFO:Defining folds
2024-05-09 02:16:56,065:INFO:Declaring metric variables
2024-05-09 02:16:56,065:INFO:Importing untrained model
2024-05-09 02:16:56,065:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:16:56,065:INFO:Starting cross validation
2024-05-09 02:16:56,065:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:16:56,824:INFO:Calculating mean and std
2024-05-09 02:16:56,824:INFO:Creating metrics dataframe
2024-05-09 02:16:56,824:INFO:Finalizing model
2024-05-09 02:16:56,964:INFO:Uploading results into container
2024-05-09 02:16:56,964:INFO:Uploading model into container now
2024-05-09 02:16:56,971:INFO:_master_model_container: 4
2024-05-09 02:16:56,971:INFO:_display_container: 4
2024-05-09 02:16:56,971:INFO:RandomForestRegressor(n_jobs=-1, random_state=7139)
2024-05-09 02:16:56,971:INFO:create_model() successfully completed......................................
2024-05-09 02:16:57,054:INFO:Initializing tune_model()
2024-05-09 02:16:57,054:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001905B25C050>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7139), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:16:57,054:INFO:Checking exceptions
2024-05-09 02:16:57,054:INFO:Copying training dataset
2024-05-09 02:16:57,060:INFO:Checking base model
2024-05-09 02:16:57,060:INFO:Base model : Random Forest Regressor
2024-05-09 02:16:57,061:INFO:Declaring metric variables
2024-05-09 02:16:57,061:INFO:Defining Hyperparameters
2024-05-09 02:16:57,144:INFO:Tuning with n_jobs=-1
2024-05-09 02:16:57,144:INFO:Initializing RandomizedSearchCV
2024-05-09 02:17:14,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:17:14,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:17:14,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:17:14,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:17:15,033:INFO:PyCaret RegressionExperiment
2024-05-09 02:17:15,033:INFO:Logging name: reg-default-name
2024-05-09 02:17:15,033:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 02:17:15,033:INFO:version 3.3.2
2024-05-09 02:17:15,033:INFO:Initializing setup()
2024-05-09 02:17:15,033:INFO:self.USI: e2fa
2024-05-09 02:17:15,033:INFO:self._variable_keys: {'fold_generator', 'target_param', 'memory', 'y_train', '_ml_usecase', 'data', 'log_plots_param', 'n_jobs_param', 'y_test', 'fold_groups_param', 'transform_target_param', 'idx', 'X', 'gpu_n_jobs_param', 'logging_param', 'y', 'gpu_param', 'seed', 'USI', 'exp_id', 'html_param', 'exp_name_log', 'pipeline', 'X_test', 'X_train', 'fold_shuffle_param', '_available_plots'}
2024-05-09 02:17:15,033:INFO:Checking environment
2024-05-09 02:17:15,033:INFO:python_version: 3.11.9
2024-05-09 02:17:15,033:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 02:17:15,033:INFO:machine: AMD64
2024-05-09 02:17:15,043:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 02:17:15,043:INFO:Memory: svmem(total=7947747328, available=1849942016, percent=76.7, used=6097805312, free=1849942016)
2024-05-09 02:17:15,043:INFO:Physical Core: 6
2024-05-09 02:17:15,043:INFO:Logical Core: 6
2024-05-09 02:17:15,043:INFO:Checking libraries
2024-05-09 02:17:15,043:INFO:System:
2024-05-09 02:17:15,043:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 02:17:15,043:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 02:17:15,043:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 02:17:15,043:INFO:PyCaret required dependencies:
2024-05-09 02:17:15,063:INFO:                 pip: 24.0
2024-05-09 02:17:15,063:INFO:          setuptools: 65.5.0
2024-05-09 02:17:15,063:INFO:             pycaret: 3.3.2
2024-05-09 02:17:15,063:INFO:             IPython: 8.24.0
2024-05-09 02:17:15,063:INFO:          ipywidgets: 8.1.2
2024-05-09 02:17:15,063:INFO:                tqdm: 4.66.4
2024-05-09 02:17:15,063:INFO:               numpy: 1.26.4
2024-05-09 02:17:15,063:INFO:              pandas: 2.1.4
2024-05-09 02:17:15,063:INFO:              jinja2: 3.1.4
2024-05-09 02:17:15,063:INFO:               scipy: 1.11.4
2024-05-09 02:17:15,063:INFO:              joblib: 1.3.2
2024-05-09 02:17:15,063:INFO:             sklearn: 1.4.2
2024-05-09 02:17:15,063:INFO:                pyod: 1.1.3
2024-05-09 02:17:15,063:INFO:            imblearn: 0.12.2
2024-05-09 02:17:15,063:INFO:   category_encoders: 2.6.3
2024-05-09 02:17:15,063:INFO:            lightgbm: 4.3.0
2024-05-09 02:17:15,063:INFO:               numba: 0.59.1
2024-05-09 02:17:15,063:INFO:            requests: 2.31.0
2024-05-09 02:17:15,063:INFO:          matplotlib: 3.7.5
2024-05-09 02:17:15,063:INFO:          scikitplot: 0.3.7
2024-05-09 02:17:15,063:INFO:         yellowbrick: 1.5
2024-05-09 02:17:15,063:INFO:              plotly: 5.22.0
2024-05-09 02:17:15,063:INFO:    plotly-resampler: Not installed
2024-05-09 02:17:15,063:INFO:             kaleido: 0.2.1
2024-05-09 02:17:15,063:INFO:           schemdraw: 0.15
2024-05-09 02:17:15,063:INFO:         statsmodels: 0.14.2
2024-05-09 02:17:15,063:INFO:              sktime: 0.26.0
2024-05-09 02:17:15,063:INFO:               tbats: 1.1.3
2024-05-09 02:17:15,063:INFO:            pmdarima: 2.0.4
2024-05-09 02:17:15,063:INFO:              psutil: 5.9.8
2024-05-09 02:17:15,063:INFO:          markupsafe: 2.1.5
2024-05-09 02:17:15,063:INFO:             pickle5: Not installed
2024-05-09 02:17:15,063:INFO:         cloudpickle: 3.0.0
2024-05-09 02:17:15,063:INFO:         deprecation: 2.1.0
2024-05-09 02:17:15,063:INFO:              xxhash: 3.4.1
2024-05-09 02:17:15,063:INFO:           wurlitzer: Not installed
2024-05-09 02:17:15,063:INFO:PyCaret optional dependencies:
2024-05-09 02:17:15,073:INFO:                shap: Not installed
2024-05-09 02:17:15,073:INFO:           interpret: Not installed
2024-05-09 02:17:15,073:INFO:                umap: Not installed
2024-05-09 02:17:15,073:INFO:     ydata_profiling: Not installed
2024-05-09 02:17:15,073:INFO:  explainerdashboard: Not installed
2024-05-09 02:17:15,073:INFO:             autoviz: Not installed
2024-05-09 02:17:15,073:INFO:           fairlearn: Not installed
2024-05-09 02:17:15,073:INFO:          deepchecks: Not installed
2024-05-09 02:17:15,073:INFO:             xgboost: Not installed
2024-05-09 02:17:15,073:INFO:            catboost: Not installed
2024-05-09 02:17:15,073:INFO:              kmodes: Not installed
2024-05-09 02:17:15,073:INFO:             mlxtend: Not installed
2024-05-09 02:17:15,073:INFO:       statsforecast: Not installed
2024-05-09 02:17:15,073:INFO:        tune_sklearn: Not installed
2024-05-09 02:17:15,073:INFO:                 ray: Not installed
2024-05-09 02:17:15,073:INFO:            hyperopt: Not installed
2024-05-09 02:17:15,073:INFO:              optuna: Not installed
2024-05-09 02:17:15,073:INFO:               skopt: Not installed
2024-05-09 02:17:15,073:INFO:              mlflow: Not installed
2024-05-09 02:17:15,073:INFO:              gradio: Not installed
2024-05-09 02:17:15,073:INFO:             fastapi: Not installed
2024-05-09 02:17:15,073:INFO:             uvicorn: Not installed
2024-05-09 02:17:15,073:INFO:              m2cgen: Not installed
2024-05-09 02:17:15,073:INFO:           evidently: Not installed
2024-05-09 02:17:15,073:INFO:               fugue: Not installed
2024-05-09 02:17:15,073:INFO:           streamlit: Not installed
2024-05-09 02:17:15,073:INFO:             prophet: Not installed
2024-05-09 02:17:15,073:INFO:None
2024-05-09 02:17:15,073:INFO:Set up data.
2024-05-09 02:17:15,073:INFO:Set up folding strategy.
2024-05-09 02:17:15,073:INFO:Set up train/test split.
2024-05-09 02:17:15,083:INFO:Set up index.
2024-05-09 02:17:15,083:INFO:Assigning column types.
2024-05-09 02:17:15,083:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 02:17:15,083:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,083:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,193:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,193:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,203:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,203:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,264:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,314:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 02:17:15,314:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,324:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,374:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,424:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,434:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,484:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,534:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 02:17:15,544:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,604:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,644:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,654:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,714:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,755:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 02:17:15,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,935:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:17:15,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:15,985:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 02:17:16,046:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:16,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,166:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:17:16,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,206:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 02:17:16,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,437:INFO:Preparing preprocessing pipeline...
2024-05-09 02:17:16,437:INFO:Set up simple imputation.
2024-05-09 02:17:16,437:INFO:Set up column name cleaning.
2024-05-09 02:17:16,457:INFO:Finished creating preprocessing pipeline.
2024-05-09 02:17:16,457:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 02:17:16,457:INFO:Creating final display dataframe.
2024-05-09 02:17:16,517:INFO:Setup _display_container:                     Description             Value
0                    Session id              2950
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              e2fa
2024-05-09 02:17:16,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:17:16,748:INFO:setup() successfully completed in 1.71s...............
2024-05-09 02:17:16,748:INFO:Initializing create_model()
2024-05-09 02:17:16,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:17:16,748:INFO:Checking exceptions
2024-05-09 02:17:16,748:INFO:Importing libraries
2024-05-09 02:17:16,748:INFO:Copying training dataset
2024-05-09 02:17:16,758:INFO:Defining folds
2024-05-09 02:17:16,758:INFO:Declaring metric variables
2024-05-09 02:17:16,758:INFO:Importing untrained model
2024-05-09 02:17:16,758:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:17:16,758:INFO:Starting cross validation
2024-05-09 02:17:16,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:17:20,470:INFO:Calculating mean and std
2024-05-09 02:17:20,470:INFO:Creating metrics dataframe
2024-05-09 02:17:20,470:INFO:Finalizing model
2024-05-09 02:17:20,557:INFO:Uploading results into container
2024-05-09 02:17:20,557:INFO:Uploading model into container now
2024-05-09 02:17:20,561:INFO:_master_model_container: 1
2024-05-09 02:17:20,561:INFO:_display_container: 2
2024-05-09 02:17:20,561:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:20,561:INFO:create_model() successfully completed......................................
2024-05-09 02:17:20,632:INFO:Initializing tune_model()
2024-05-09 02:17:20,632:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2950), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:17:20,632:INFO:Checking exceptions
2024-05-09 02:17:20,641:INFO:Copying training dataset
2024-05-09 02:17:20,641:INFO:Checking base model
2024-05-09 02:17:20,641:INFO:Base model : Extra Trees Regressor
2024-05-09 02:17:20,641:INFO:Declaring metric variables
2024-05-09 02:17:20,641:INFO:Defining Hyperparameters
2024-05-09 02:17:20,711:INFO:Tuning with n_jobs=-1
2024-05-09 02:17:20,711:INFO:Initializing RandomizedSearchCV
2024-05-09 02:17:27,819:INFO:best_params: {'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2024-05-09 02:17:27,819:INFO:Hyperparameter search completed
2024-05-09 02:17:27,819:INFO:SubProcess create_model() called ==================================
2024-05-09 02:17:27,819:INFO:Initializing create_model()
2024-05-09 02:17:27,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2950), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296F23BC710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 250, 'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': False})
2024-05-09 02:17:27,819:INFO:Checking exceptions
2024-05-09 02:17:27,819:INFO:Importing libraries
2024-05-09 02:17:27,819:INFO:Copying training dataset
2024-05-09 02:17:27,819:INFO:Defining folds
2024-05-09 02:17:27,819:INFO:Declaring metric variables
2024-05-09 02:17:27,819:INFO:Importing untrained model
2024-05-09 02:17:27,819:INFO:Declaring custom model
2024-05-09 02:17:27,819:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:17:27,819:INFO:Starting cross validation
2024-05-09 02:17:27,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:17:28,645:INFO:Calculating mean and std
2024-05-09 02:17:28,645:INFO:Creating metrics dataframe
2024-05-09 02:17:28,647:INFO:Finalizing model
2024-05-09 02:17:28,822:INFO:Uploading results into container
2024-05-09 02:17:28,822:INFO:Uploading model into container now
2024-05-09 02:17:28,822:INFO:_master_model_container: 2
2024-05-09 02:17:28,822:INFO:_display_container: 3
2024-05-09 02:17:28,822:INFO:ExtraTreesRegressor(max_depth=9, min_impurity_decrease=0, min_samples_leaf=3,
                    min_samples_split=9, n_estimators=250, n_jobs=-1,
                    random_state=2950)
2024-05-09 02:17:28,822:INFO:create_model() successfully completed......................................
2024-05-09 02:17:28,911:INFO:SubProcess create_model() end ==================================
2024-05-09 02:17:28,911:INFO:choose_better activated
2024-05-09 02:17:28,911:INFO:SubProcess create_model() called ==================================
2024-05-09 02:17:28,912:INFO:Initializing create_model()
2024-05-09 02:17:28,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2950), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:17:28,912:INFO:Checking exceptions
2024-05-09 02:17:28,912:INFO:Importing libraries
2024-05-09 02:17:28,912:INFO:Copying training dataset
2024-05-09 02:17:28,915:INFO:Defining folds
2024-05-09 02:17:28,915:INFO:Declaring metric variables
2024-05-09 02:17:28,915:INFO:Importing untrained model
2024-05-09 02:17:28,915:INFO:Declaring custom model
2024-05-09 02:17:28,915:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:17:28,915:INFO:Starting cross validation
2024-05-09 02:17:28,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:17:29,466:INFO:Calculating mean and std
2024-05-09 02:17:29,466:INFO:Creating metrics dataframe
2024-05-09 02:17:29,466:INFO:Finalizing model
2024-05-09 02:17:29,550:INFO:Uploading results into container
2024-05-09 02:17:29,550:INFO:Uploading model into container now
2024-05-09 02:17:29,550:INFO:_master_model_container: 3
2024-05-09 02:17:29,550:INFO:_display_container: 4
2024-05-09 02:17:29,550:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:29,550:INFO:create_model() successfully completed......................................
2024-05-09 02:17:29,620:INFO:SubProcess create_model() end ==================================
2024-05-09 02:17:29,620:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2950) result for R2 is 0.7404
2024-05-09 02:17:29,620:INFO:ExtraTreesRegressor(max_depth=9, min_impurity_decrease=0, min_samples_leaf=3,
                    min_samples_split=9, n_estimators=250, n_jobs=-1,
                    random_state=2950) result for R2 is 0.7249
2024-05-09 02:17:29,620:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2950) is best model
2024-05-09 02:17:29,620:INFO:choose_better completed
2024-05-09 02:17:29,620:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:17:29,630:INFO:_master_model_container: 3
2024-05-09 02:17:29,630:INFO:_display_container: 3
2024-05-09 02:17:29,630:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:29,630:INFO:tune_model() successfully completed......................................
2024-05-09 02:17:29,701:INFO:Initializing finalize_model()
2024-05-09 02:17:29,701:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2950), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:17:29,701:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:29,701:INFO:Initializing create_model()
2024-05-09 02:17:29,701:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2950), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:17:29,701:INFO:Checking exceptions
2024-05-09 02:17:29,701:INFO:Importing libraries
2024-05-09 02:17:29,711:INFO:Copying training dataset
2024-05-09 02:17:29,711:INFO:Defining folds
2024-05-09 02:17:29,711:INFO:Declaring metric variables
2024-05-09 02:17:29,711:INFO:Importing untrained model
2024-05-09 02:17:29,711:INFO:Declaring custom model
2024-05-09 02:17:29,711:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:17:29,711:INFO:Cross validation set to False
2024-05-09 02:17:29,711:INFO:Fitting Model
2024-05-09 02:17:29,802:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2950))])
2024-05-09 02:17:29,802:INFO:create_model() successfully completed......................................
2024-05-09 02:17:29,862:INFO:_master_model_container: 3
2024-05-09 02:17:29,862:INFO:_display_container: 3
2024-05-09 02:17:29,872:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2950))])
2024-05-09 02:17:29,872:INFO:finalize_model() successfully completed......................................
2024-05-09 02:17:29,942:INFO:Initializing create_model()
2024-05-09 02:17:29,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:17:29,942:INFO:Checking exceptions
2024-05-09 02:17:29,942:INFO:Importing libraries
2024-05-09 02:17:29,942:INFO:Copying training dataset
2024-05-09 02:17:29,942:INFO:Defining folds
2024-05-09 02:17:29,942:INFO:Declaring metric variables
2024-05-09 02:17:29,942:INFO:Importing untrained model
2024-05-09 02:17:29,942:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:17:29,942:INFO:Starting cross validation
2024-05-09 02:17:29,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:17:30,569:INFO:Calculating mean and std
2024-05-09 02:17:30,569:INFO:Creating metrics dataframe
2024-05-09 02:17:30,569:INFO:Finalizing model
2024-05-09 02:17:30,691:INFO:Uploading results into container
2024-05-09 02:17:30,691:INFO:Uploading model into container now
2024-05-09 02:17:30,698:INFO:_master_model_container: 4
2024-05-09 02:17:30,698:INFO:_display_container: 4
2024-05-09 02:17:30,698:INFO:RandomForestRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:30,698:INFO:create_model() successfully completed......................................
2024-05-09 02:17:30,769:INFO:Initializing tune_model()
2024-05-09 02:17:30,769:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2950), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:17:30,769:INFO:Checking exceptions
2024-05-09 02:17:30,769:INFO:Copying training dataset
2024-05-09 02:17:30,769:INFO:Checking base model
2024-05-09 02:17:30,769:INFO:Base model : Random Forest Regressor
2024-05-09 02:17:30,769:INFO:Declaring metric variables
2024-05-09 02:17:30,769:INFO:Defining Hyperparameters
2024-05-09 02:17:30,839:INFO:Tuning with n_jobs=-1
2024-05-09 02:17:30,839:INFO:Initializing RandomizedSearchCV
2024-05-09 02:17:40,673:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 02:17:40,673:INFO:Hyperparameter search completed
2024-05-09 02:17:40,673:INFO:SubProcess create_model() called ==================================
2024-05-09 02:17:40,673:INFO:Initializing create_model()
2024-05-09 02:17:40,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2950), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000296F48E1D50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 02:17:40,673:INFO:Checking exceptions
2024-05-09 02:17:40,673:INFO:Importing libraries
2024-05-09 02:17:40,673:INFO:Copying training dataset
2024-05-09 02:17:40,676:INFO:Defining folds
2024-05-09 02:17:40,676:INFO:Declaring metric variables
2024-05-09 02:17:40,676:INFO:Importing untrained model
2024-05-09 02:17:40,676:INFO:Declaring custom model
2024-05-09 02:17:40,676:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:17:40,676:INFO:Starting cross validation
2024-05-09 02:17:40,676:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:17:42,018:INFO:Calculating mean and std
2024-05-09 02:17:42,018:INFO:Creating metrics dataframe
2024-05-09 02:17:42,018:INFO:Finalizing model
2024-05-09 02:17:42,319:INFO:Uploading results into container
2024-05-09 02:17:42,319:INFO:Uploading model into container now
2024-05-09 02:17:42,319:INFO:_master_model_container: 5
2024-05-09 02:17:42,319:INFO:_display_container: 5
2024-05-09 02:17:42,319:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.0001,
                      min_samples_leaf=2, min_samples_split=7, n_estimators=290,
                      n_jobs=-1, random_state=2950)
2024-05-09 02:17:42,319:INFO:create_model() successfully completed......................................
2024-05-09 02:17:42,387:INFO:SubProcess create_model() end ==================================
2024-05-09 02:17:42,387:INFO:choose_better activated
2024-05-09 02:17:42,387:INFO:SubProcess create_model() called ==================================
2024-05-09 02:17:42,387:INFO:Initializing create_model()
2024-05-09 02:17:42,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2950), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:17:42,387:INFO:Checking exceptions
2024-05-09 02:17:42,387:INFO:Importing libraries
2024-05-09 02:17:42,387:INFO:Copying training dataset
2024-05-09 02:17:42,397:INFO:Defining folds
2024-05-09 02:17:42,397:INFO:Declaring metric variables
2024-05-09 02:17:42,397:INFO:Importing untrained model
2024-05-09 02:17:42,397:INFO:Declaring custom model
2024-05-09 02:17:42,397:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:17:42,397:INFO:Starting cross validation
2024-05-09 02:17:42,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:17:43,006:INFO:Calculating mean and std
2024-05-09 02:17:43,006:INFO:Creating metrics dataframe
2024-05-09 02:17:43,006:INFO:Finalizing model
2024-05-09 02:17:43,128:INFO:Uploading results into container
2024-05-09 02:17:43,128:INFO:Uploading model into container now
2024-05-09 02:17:43,128:INFO:_master_model_container: 6
2024-05-09 02:17:43,128:INFO:_display_container: 6
2024-05-09 02:17:43,128:INFO:RandomForestRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:43,128:INFO:create_model() successfully completed......................................
2024-05-09 02:17:43,194:INFO:SubProcess create_model() end ==================================
2024-05-09 02:17:43,194:INFO:RandomForestRegressor(n_jobs=-1, random_state=2950) result for R2 is 0.7433
2024-05-09 02:17:43,194:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.0001,
                      min_samples_leaf=2, min_samples_split=7, n_estimators=290,
                      n_jobs=-1, random_state=2950) result for R2 is 0.7367
2024-05-09 02:17:43,194:INFO:RandomForestRegressor(n_jobs=-1, random_state=2950) is best model
2024-05-09 02:17:43,194:INFO:choose_better completed
2024-05-09 02:17:43,194:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:17:43,204:INFO:_master_model_container: 6
2024-05-09 02:17:43,204:INFO:_display_container: 5
2024-05-09 02:17:43,204:INFO:RandomForestRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:43,204:INFO:tune_model() successfully completed......................................
2024-05-09 02:17:43,285:INFO:Initializing finalize_model()
2024-05-09 02:17:43,285:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2950), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:17:43,285:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=2950)
2024-05-09 02:17:43,285:INFO:Initializing create_model()
2024-05-09 02:17:43,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000296E0965410>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2950), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:17:43,285:INFO:Checking exceptions
2024-05-09 02:17:43,285:INFO:Importing libraries
2024-05-09 02:17:43,285:INFO:Copying training dataset
2024-05-09 02:17:43,285:INFO:Defining folds
2024-05-09 02:17:43,285:INFO:Declaring metric variables
2024-05-09 02:17:43,285:INFO:Importing untrained model
2024-05-09 02:17:43,285:INFO:Declaring custom model
2024-05-09 02:17:43,285:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:17:43,285:INFO:Cross validation set to False
2024-05-09 02:17:43,285:INFO:Fitting Model
2024-05-09 02:17:43,417:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2950))])
2024-05-09 02:17:43,417:INFO:create_model() successfully completed......................................
2024-05-09 02:17:43,487:INFO:_master_model_container: 6
2024-05-09 02:17:43,487:INFO:_display_container: 5
2024-05-09 02:17:43,487:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2950))])
2024-05-09 02:17:43,487:INFO:finalize_model() successfully completed......................................
2024-05-09 02:18:51,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:18:51,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:18:51,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:18:51,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 02:18:51,536:INFO:PyCaret RegressionExperiment
2024-05-09 02:18:51,536:INFO:Logging name: reg-default-name
2024-05-09 02:18:51,536:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 02:18:51,536:INFO:version 3.3.2
2024-05-09 02:18:51,536:INFO:Initializing setup()
2024-05-09 02:18:51,536:INFO:self.USI: 7203
2024-05-09 02:18:51,536:INFO:self._variable_keys: {'fold_generator', 'log_plots_param', 'data', 'y_test', 'transform_target_param', 'fold_groups_param', 'gpu_n_jobs_param', '_available_plots', 'fold_shuffle_param', 'memory', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'exp_name_log', 'y_train', 'target_param', 'gpu_param', 'exp_id', 'X', 'X_test', '_ml_usecase', 'seed', 'logging_param', 'y', 'html_param', 'X_train'}
2024-05-09 02:18:51,536:INFO:Checking environment
2024-05-09 02:18:51,536:INFO:python_version: 3.11.9
2024-05-09 02:18:51,536:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 02:18:51,536:INFO:machine: AMD64
2024-05-09 02:18:51,546:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 02:18:51,546:INFO:Memory: svmem(total=7947747328, available=1819324416, percent=77.1, used=6128422912, free=1819324416)
2024-05-09 02:18:51,546:INFO:Physical Core: 6
2024-05-09 02:18:51,546:INFO:Logical Core: 6
2024-05-09 02:18:51,546:INFO:Checking libraries
2024-05-09 02:18:51,546:INFO:System:
2024-05-09 02:18:51,546:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 02:18:51,546:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 02:18:51,546:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 02:18:51,546:INFO:PyCaret required dependencies:
2024-05-09 02:18:51,566:INFO:                 pip: 24.0
2024-05-09 02:18:51,566:INFO:          setuptools: 65.5.0
2024-05-09 02:18:51,566:INFO:             pycaret: 3.3.2
2024-05-09 02:18:51,566:INFO:             IPython: 8.24.0
2024-05-09 02:18:51,566:INFO:          ipywidgets: 8.1.2
2024-05-09 02:18:51,566:INFO:                tqdm: 4.66.4
2024-05-09 02:18:51,566:INFO:               numpy: 1.26.4
2024-05-09 02:18:51,566:INFO:              pandas: 2.1.4
2024-05-09 02:18:51,566:INFO:              jinja2: 3.1.4
2024-05-09 02:18:51,566:INFO:               scipy: 1.11.4
2024-05-09 02:18:51,566:INFO:              joblib: 1.3.2
2024-05-09 02:18:51,566:INFO:             sklearn: 1.4.2
2024-05-09 02:18:51,566:INFO:                pyod: 1.1.3
2024-05-09 02:18:51,566:INFO:            imblearn: 0.12.2
2024-05-09 02:18:51,566:INFO:   category_encoders: 2.6.3
2024-05-09 02:18:51,566:INFO:            lightgbm: 4.3.0
2024-05-09 02:18:51,566:INFO:               numba: 0.59.1
2024-05-09 02:18:51,566:INFO:            requests: 2.31.0
2024-05-09 02:18:51,566:INFO:          matplotlib: 3.7.5
2024-05-09 02:18:51,566:INFO:          scikitplot: 0.3.7
2024-05-09 02:18:51,566:INFO:         yellowbrick: 1.5
2024-05-09 02:18:51,566:INFO:              plotly: 5.22.0
2024-05-09 02:18:51,566:INFO:    plotly-resampler: Not installed
2024-05-09 02:18:51,566:INFO:             kaleido: 0.2.1
2024-05-09 02:18:51,566:INFO:           schemdraw: 0.15
2024-05-09 02:18:51,566:INFO:         statsmodels: 0.14.2
2024-05-09 02:18:51,566:INFO:              sktime: 0.26.0
2024-05-09 02:18:51,566:INFO:               tbats: 1.1.3
2024-05-09 02:18:51,566:INFO:            pmdarima: 2.0.4
2024-05-09 02:18:51,566:INFO:              psutil: 5.9.8
2024-05-09 02:18:51,566:INFO:          markupsafe: 2.1.5
2024-05-09 02:18:51,566:INFO:             pickle5: Not installed
2024-05-09 02:18:51,566:INFO:         cloudpickle: 3.0.0
2024-05-09 02:18:51,566:INFO:         deprecation: 2.1.0
2024-05-09 02:18:51,566:INFO:              xxhash: 3.4.1
2024-05-09 02:18:51,566:INFO:           wurlitzer: Not installed
2024-05-09 02:18:51,566:INFO:PyCaret optional dependencies:
2024-05-09 02:18:51,576:INFO:                shap: Not installed
2024-05-09 02:18:51,576:INFO:           interpret: Not installed
2024-05-09 02:18:51,576:INFO:                umap: Not installed
2024-05-09 02:18:51,576:INFO:     ydata_profiling: Not installed
2024-05-09 02:18:51,576:INFO:  explainerdashboard: Not installed
2024-05-09 02:18:51,576:INFO:             autoviz: Not installed
2024-05-09 02:18:51,576:INFO:           fairlearn: Not installed
2024-05-09 02:18:51,576:INFO:          deepchecks: Not installed
2024-05-09 02:18:51,576:INFO:             xgboost: Not installed
2024-05-09 02:18:51,576:INFO:            catboost: Not installed
2024-05-09 02:18:51,576:INFO:              kmodes: Not installed
2024-05-09 02:18:51,576:INFO:             mlxtend: Not installed
2024-05-09 02:18:51,576:INFO:       statsforecast: Not installed
2024-05-09 02:18:51,576:INFO:        tune_sklearn: Not installed
2024-05-09 02:18:51,576:INFO:                 ray: Not installed
2024-05-09 02:18:51,576:INFO:            hyperopt: Not installed
2024-05-09 02:18:51,576:INFO:              optuna: Not installed
2024-05-09 02:18:51,576:INFO:               skopt: Not installed
2024-05-09 02:18:51,576:INFO:              mlflow: Not installed
2024-05-09 02:18:51,576:INFO:              gradio: Not installed
2024-05-09 02:18:51,576:INFO:             fastapi: Not installed
2024-05-09 02:18:51,576:INFO:             uvicorn: Not installed
2024-05-09 02:18:51,576:INFO:              m2cgen: Not installed
2024-05-09 02:18:51,576:INFO:           evidently: Not installed
2024-05-09 02:18:51,576:INFO:               fugue: Not installed
2024-05-09 02:18:51,576:INFO:           streamlit: Not installed
2024-05-09 02:18:51,576:INFO:             prophet: Not installed
2024-05-09 02:18:51,576:INFO:None
2024-05-09 02:18:51,576:INFO:Set up data.
2024-05-09 02:18:51,586:INFO:Set up folding strategy.
2024-05-09 02:18:51,586:INFO:Set up train/test split.
2024-05-09 02:18:51,586:INFO:Set up index.
2024-05-09 02:18:51,586:INFO:Assigning column types.
2024-05-09 02:18:51,586:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 02:18:51,586:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,596:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,596:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:51,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:51,707:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,717:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,717:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,777:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,817:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:51,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:51,827:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 02:18:51,827:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,837:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:51,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:51,937:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 02:18:51,947:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,057:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 02:18:52,067:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,127:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,177:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,237:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,287:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 02:18:52,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,467:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,517:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 02:18:52,587:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 02:18:52,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,747:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 02:18:52,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:52,967:INFO:Preparing preprocessing pipeline...
2024-05-09 02:18:52,967:INFO:Set up simple imputation.
2024-05-09 02:18:52,967:INFO:Set up column name cleaning.
2024-05-09 02:18:52,987:INFO:Finished creating preprocessing pipeline.
2024-05-09 02:18:52,997:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 02:18:52,997:INFO:Creating final display dataframe.
2024-05-09 02:18:53,057:INFO:Setup _display_container:                     Description             Value
0                    Session id              7080
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              7203
2024-05-09 02:18:53,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:53,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:53,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:53,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 02:18:53,287:INFO:setup() successfully completed in 1.76s...............
2024-05-09 02:18:53,297:INFO:Initializing create_model()
2024-05-09 02:18:53,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:18:53,297:INFO:Checking exceptions
2024-05-09 02:18:53,297:INFO:Importing libraries
2024-05-09 02:18:53,297:INFO:Copying training dataset
2024-05-09 02:18:53,297:INFO:Defining folds
2024-05-09 02:18:53,297:INFO:Declaring metric variables
2024-05-09 02:18:53,297:INFO:Importing untrained model
2024-05-09 02:18:53,297:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:18:53,297:INFO:Starting cross validation
2024-05-09 02:18:53,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:18:57,076:INFO:Calculating mean and std
2024-05-09 02:18:57,076:INFO:Creating metrics dataframe
2024-05-09 02:18:57,076:INFO:Finalizing model
2024-05-09 02:18:57,155:INFO:Uploading results into container
2024-05-09 02:18:57,155:INFO:Uploading model into container now
2024-05-09 02:18:57,163:INFO:_master_model_container: 1
2024-05-09 02:18:57,163:INFO:_display_container: 2
2024-05-09 02:18:57,163:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:18:57,163:INFO:create_model() successfully completed......................................
2024-05-09 02:18:57,233:INFO:Initializing tune_model()
2024-05-09 02:18:57,233:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7080), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:18:57,233:INFO:Checking exceptions
2024-05-09 02:18:57,233:INFO:Copying training dataset
2024-05-09 02:18:57,233:INFO:Checking base model
2024-05-09 02:18:57,233:INFO:Base model : Extra Trees Regressor
2024-05-09 02:18:57,233:INFO:Declaring metric variables
2024-05-09 02:18:57,233:INFO:Defining Hyperparameters
2024-05-09 02:18:57,314:INFO:Tuning with n_jobs=-1
2024-05-09 02:18:57,314:INFO:Initializing RandomizedSearchCV
2024-05-09 02:19:05,789:INFO:best_params: {'actual_estimator__n_estimators': 170, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 02:19:05,789:INFO:Hyperparameter search completed
2024-05-09 02:19:05,789:INFO:SubProcess create_model() called ==================================
2024-05-09 02:19:05,789:INFO:Initializing create_model()
2024-05-09 02:19:05,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7080), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA01067790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 170, 'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 02:19:05,789:INFO:Checking exceptions
2024-05-09 02:19:05,789:INFO:Importing libraries
2024-05-09 02:19:05,789:INFO:Copying training dataset
2024-05-09 02:19:05,794:INFO:Defining folds
2024-05-09 02:19:05,794:INFO:Declaring metric variables
2024-05-09 02:19:05,794:INFO:Importing untrained model
2024-05-09 02:19:05,794:INFO:Declaring custom model
2024-05-09 02:19:05,794:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:19:05,794:INFO:Starting cross validation
2024-05-09 02:19:05,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:19:06,506:INFO:Calculating mean and std
2024-05-09 02:19:06,506:INFO:Creating metrics dataframe
2024-05-09 02:19:06,509:INFO:Finalizing model
2024-05-09 02:19:06,780:INFO:Uploading results into container
2024-05-09 02:19:06,780:INFO:Uploading model into container now
2024-05-09 02:19:06,780:INFO:_master_model_container: 2
2024-05-09 02:19:06,780:INFO:_display_container: 3
2024-05-09 02:19:06,784:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, max_features='log2',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=10, n_estimators=170, n_jobs=-1,
                    random_state=7080)
2024-05-09 02:19:06,784:INFO:create_model() successfully completed......................................
2024-05-09 02:19:06,874:INFO:SubProcess create_model() end ==================================
2024-05-09 02:19:06,874:INFO:choose_better activated
2024-05-09 02:19:06,874:INFO:SubProcess create_model() called ==================================
2024-05-09 02:19:06,874:INFO:Initializing create_model()
2024-05-09 02:19:06,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7080), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:19:06,874:INFO:Checking exceptions
2024-05-09 02:19:06,874:INFO:Importing libraries
2024-05-09 02:19:06,874:INFO:Copying training dataset
2024-05-09 02:19:06,884:INFO:Defining folds
2024-05-09 02:19:06,884:INFO:Declaring metric variables
2024-05-09 02:19:06,884:INFO:Importing untrained model
2024-05-09 02:19:06,884:INFO:Declaring custom model
2024-05-09 02:19:06,884:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:19:06,884:INFO:Starting cross validation
2024-05-09 02:19:06,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:19:07,405:INFO:Calculating mean and std
2024-05-09 02:19:07,405:INFO:Creating metrics dataframe
2024-05-09 02:19:07,405:INFO:Finalizing model
2024-05-09 02:19:07,493:INFO:Uploading results into container
2024-05-09 02:19:07,493:INFO:Uploading model into container now
2024-05-09 02:19:07,493:INFO:_master_model_container: 3
2024-05-09 02:19:07,493:INFO:_display_container: 4
2024-05-09 02:19:07,493:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:07,493:INFO:create_model() successfully completed......................................
2024-05-09 02:19:07,570:INFO:SubProcess create_model() end ==================================
2024-05-09 02:19:07,570:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7080) result for R2 is 0.7547
2024-05-09 02:19:07,570:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, max_features='log2',
                    min_impurity_decrease=0.0001, min_samples_leaf=2,
                    min_samples_split=10, n_estimators=170, n_jobs=-1,
                    random_state=7080) result for R2 is 0.6984
2024-05-09 02:19:07,570:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7080) is best model
2024-05-09 02:19:07,570:INFO:choose_better completed
2024-05-09 02:19:07,570:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:19:07,580:INFO:_master_model_container: 3
2024-05-09 02:19:07,580:INFO:_display_container: 3
2024-05-09 02:19:07,580:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:07,580:INFO:tune_model() successfully completed......................................
2024-05-09 02:19:07,670:INFO:Initializing finalize_model()
2024-05-09 02:19:07,670:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7080), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:19:07,670:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:07,670:INFO:Initializing create_model()
2024-05-09 02:19:07,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7080), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:19:07,670:INFO:Checking exceptions
2024-05-09 02:19:07,670:INFO:Importing libraries
2024-05-09 02:19:07,670:INFO:Copying training dataset
2024-05-09 02:19:07,670:INFO:Defining folds
2024-05-09 02:19:07,670:INFO:Declaring metric variables
2024-05-09 02:19:07,670:INFO:Importing untrained model
2024-05-09 02:19:07,670:INFO:Declaring custom model
2024-05-09 02:19:07,670:INFO:Extra Trees Regressor Imported successfully
2024-05-09 02:19:07,670:INFO:Cross validation set to False
2024-05-09 02:19:07,670:INFO:Fitting Model
2024-05-09 02:19:07,763:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7080))])
2024-05-09 02:19:07,763:INFO:create_model() successfully completed......................................
2024-05-09 02:19:07,842:INFO:_master_model_container: 3
2024-05-09 02:19:07,842:INFO:_display_container: 3
2024-05-09 02:19:07,842:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7080))])
2024-05-09 02:19:07,842:INFO:finalize_model() successfully completed......................................
2024-05-09 02:19:07,932:INFO:Initializing create_model()
2024-05-09 02:19:07,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:19:07,932:INFO:Checking exceptions
2024-05-09 02:19:07,932:INFO:Importing libraries
2024-05-09 02:19:07,932:INFO:Copying training dataset
2024-05-09 02:19:07,932:INFO:Defining folds
2024-05-09 02:19:07,932:INFO:Declaring metric variables
2024-05-09 02:19:07,932:INFO:Importing untrained model
2024-05-09 02:19:07,932:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:19:07,932:INFO:Starting cross validation
2024-05-09 02:19:07,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:19:08,562:INFO:Calculating mean and std
2024-05-09 02:19:08,562:INFO:Creating metrics dataframe
2024-05-09 02:19:08,562:INFO:Finalizing model
2024-05-09 02:19:08,688:INFO:Uploading results into container
2024-05-09 02:19:08,688:INFO:Uploading model into container now
2024-05-09 02:19:08,694:INFO:_master_model_container: 4
2024-05-09 02:19:08,694:INFO:_display_container: 4
2024-05-09 02:19:08,694:INFO:RandomForestRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:08,694:INFO:create_model() successfully completed......................................
2024-05-09 02:19:08,764:INFO:Initializing tune_model()
2024-05-09 02:19:08,764:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7080), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 02:19:08,764:INFO:Checking exceptions
2024-05-09 02:19:08,764:INFO:Copying training dataset
2024-05-09 02:19:08,764:INFO:Checking base model
2024-05-09 02:19:08,764:INFO:Base model : Random Forest Regressor
2024-05-09 02:19:08,764:INFO:Declaring metric variables
2024-05-09 02:19:08,774:INFO:Defining Hyperparameters
2024-05-09 02:19:08,834:INFO:Tuning with n_jobs=-1
2024-05-09 02:19:08,834:INFO:Initializing RandomizedSearchCV
2024-05-09 02:19:20,524:INFO:best_params: {'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 02:19:20,524:INFO:Hyperparameter search completed
2024-05-09 02:19:20,524:INFO:SubProcess create_model() called ==================================
2024-05-09 02:19:20,524:INFO:Initializing create_model()
2024-05-09 02:19:20,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7080), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA01962F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 50, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.5, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 02:19:20,524:INFO:Checking exceptions
2024-05-09 02:19:20,524:INFO:Importing libraries
2024-05-09 02:19:20,524:INFO:Copying training dataset
2024-05-09 02:19:20,524:INFO:Defining folds
2024-05-09 02:19:20,524:INFO:Declaring metric variables
2024-05-09 02:19:20,524:INFO:Importing untrained model
2024-05-09 02:19:20,524:INFO:Declaring custom model
2024-05-09 02:19:20,524:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:19:20,524:INFO:Starting cross validation
2024-05-09 02:19:20,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:19:20,773:INFO:Calculating mean and std
2024-05-09 02:19:20,773:INFO:Creating metrics dataframe
2024-05-09 02:19:20,773:INFO:Finalizing model
2024-05-09 02:19:20,841:INFO:Uploading results into container
2024-05-09 02:19:20,841:INFO:Uploading model into container now
2024-05-09 02:19:20,841:INFO:_master_model_container: 5
2024-05-09 02:19:20,841:INFO:_display_container: 5
2024-05-09 02:19:20,841:INFO:RandomForestRegressor(max_depth=9, max_features='sqrt',
                      min_impurity_decrease=0.5, min_samples_leaf=4,
                      min_samples_split=7, n_estimators=50, n_jobs=-1,
                      random_state=7080)
2024-05-09 02:19:20,841:INFO:create_model() successfully completed......................................
2024-05-09 02:19:20,907:INFO:SubProcess create_model() end ==================================
2024-05-09 02:19:20,907:INFO:choose_better activated
2024-05-09 02:19:20,907:INFO:SubProcess create_model() called ==================================
2024-05-09 02:19:20,907:INFO:Initializing create_model()
2024-05-09 02:19:20,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7080), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:19:20,907:INFO:Checking exceptions
2024-05-09 02:19:20,907:INFO:Importing libraries
2024-05-09 02:19:20,907:INFO:Copying training dataset
2024-05-09 02:19:20,917:INFO:Defining folds
2024-05-09 02:19:20,917:INFO:Declaring metric variables
2024-05-09 02:19:20,917:INFO:Importing untrained model
2024-05-09 02:19:20,917:INFO:Declaring custom model
2024-05-09 02:19:20,917:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:19:20,917:INFO:Starting cross validation
2024-05-09 02:19:20,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 02:19:21,516:INFO:Calculating mean and std
2024-05-09 02:19:21,516:INFO:Creating metrics dataframe
2024-05-09 02:19:21,516:INFO:Finalizing model
2024-05-09 02:19:21,638:INFO:Uploading results into container
2024-05-09 02:19:21,638:INFO:Uploading model into container now
2024-05-09 02:19:21,638:INFO:_master_model_container: 6
2024-05-09 02:19:21,638:INFO:_display_container: 6
2024-05-09 02:19:21,638:INFO:RandomForestRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:21,638:INFO:create_model() successfully completed......................................
2024-05-09 02:19:21,706:INFO:SubProcess create_model() end ==================================
2024-05-09 02:19:21,706:INFO:RandomForestRegressor(n_jobs=-1, random_state=7080) result for R2 is 0.7501
2024-05-09 02:19:21,706:INFO:RandomForestRegressor(max_depth=9, max_features='sqrt',
                      min_impurity_decrease=0.5, min_samples_leaf=4,
                      min_samples_split=7, n_estimators=50, n_jobs=-1,
                      random_state=7080) result for R2 is 0.7207
2024-05-09 02:19:21,706:INFO:RandomForestRegressor(n_jobs=-1, random_state=7080) is best model
2024-05-09 02:19:21,706:INFO:choose_better completed
2024-05-09 02:19:21,706:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 02:19:21,706:INFO:_master_model_container: 6
2024-05-09 02:19:21,706:INFO:_display_container: 5
2024-05-09 02:19:21,706:INFO:RandomForestRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:21,706:INFO:tune_model() successfully completed......................................
2024-05-09 02:19:21,786:INFO:Initializing finalize_model()
2024-05-09 02:19:21,786:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7080), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 02:19:21,786:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=7080)
2024-05-09 02:19:21,786:INFO:Initializing create_model()
2024-05-09 02:19:21,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7080), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 02:19:21,786:INFO:Checking exceptions
2024-05-09 02:19:21,786:INFO:Importing libraries
2024-05-09 02:19:21,786:INFO:Copying training dataset
2024-05-09 02:19:21,786:INFO:Defining folds
2024-05-09 02:19:21,786:INFO:Declaring metric variables
2024-05-09 02:19:21,786:INFO:Importing untrained model
2024-05-09 02:19:21,786:INFO:Declaring custom model
2024-05-09 02:19:21,786:INFO:Random Forest Regressor Imported successfully
2024-05-09 02:19:21,786:INFO:Cross validation set to False
2024-05-09 02:19:21,786:INFO:Fitting Model
2024-05-09 02:19:21,920:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7080))])
2024-05-09 02:19:21,920:INFO:create_model() successfully completed......................................
2024-05-09 02:19:21,987:INFO:_master_model_container: 6
2024-05-09 02:19:21,987:INFO:_display_container: 5
2024-05-09 02:19:21,997:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7080))])
2024-05-09 02:19:21,997:INFO:finalize_model() successfully completed......................................
2024-05-09 02:19:34,007:INFO:Initializing predict_model()
2024-05-09 02:19:34,007:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA01B10040>)
2024-05-09 02:19:34,007:INFO:Checking exceptions
2024-05-09 02:19:34,007:INFO:Preloading libraries
2024-05-09 02:19:34,007:INFO:Set up data.
2024-05-09 02:19:34,017:INFO:Set up index.
2024-05-09 02:19:34,228:INFO:Initializing predict_model()
2024-05-09 02:19:34,228:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA010549A0>)
2024-05-09 02:19:34,228:INFO:Checking exceptions
2024-05-09 02:19:34,228:INFO:Preloading libraries
2024-05-09 02:19:34,228:INFO:Set up data.
2024-05-09 02:19:34,238:INFO:Set up index.
2024-05-09 02:21:11,326:INFO:Initializing predict_model()
2024-05-09 02:21:11,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA6F3236A0>)
2024-05-09 02:21:11,326:INFO:Checking exceptions
2024-05-09 02:21:11,326:INFO:Preloading libraries
2024-05-09 02:21:11,326:INFO:Set up data.
2024-05-09 02:21:11,330:INFO:Set up index.
2024-05-09 02:21:11,434:INFO:Initializing predict_model()
2024-05-09 02:21:11,434:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA7FBD5A80>)
2024-05-09 02:21:11,434:INFO:Checking exceptions
2024-05-09 02:21:11,434:INFO:Preloading libraries
2024-05-09 02:21:11,434:INFO:Set up data.
2024-05-09 02:21:11,438:INFO:Set up index.
2024-05-09 02:23:58,452:INFO:Initializing predict_model()
2024-05-09 02:23:58,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA6F3236A0>)
2024-05-09 02:23:58,452:INFO:Checking exceptions
2024-05-09 02:23:58,452:INFO:Preloading libraries
2024-05-09 02:23:58,462:INFO:Set up data.
2024-05-09 02:23:58,462:INFO:Set up index.
2024-05-09 02:23:58,552:INFO:Initializing predict_model()
2024-05-09 02:23:58,552:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA7FBD5A80>)
2024-05-09 02:23:58,552:INFO:Checking exceptions
2024-05-09 02:23:58,552:INFO:Preloading libraries
2024-05-09 02:23:58,552:INFO:Set up data.
2024-05-09 02:23:58,562:INFO:Set up index.
2024-05-09 02:25:55,215:INFO:Initializing predict_model()
2024-05-09 02:25:55,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA7FBD5A80>)
2024-05-09 02:25:55,215:INFO:Checking exceptions
2024-05-09 02:25:55,215:INFO:Preloading libraries
2024-05-09 02:25:55,215:INFO:Set up data.
2024-05-09 02:25:55,215:INFO:Set up index.
2024-05-09 02:25:55,315:INFO:Initializing predict_model()
2024-05-09 02:25:55,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA6F326010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=7080))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EA7FBD5A80>)
2024-05-09 02:25:55,315:INFO:Checking exceptions
2024-05-09 02:25:55,315:INFO:Preloading libraries
2024-05-09 02:25:55,315:INFO:Set up data.
2024-05-09 02:25:55,315:INFO:Set up index.
2024-05-09 13:12:17,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:12:17,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:12:17,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:12:17,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:12:18,201:INFO:PyCaret RegressionExperiment
2024-05-09 13:12:18,201:INFO:Logging name: reg-default-name
2024-05-09 13:12:18,201:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 13:12:18,201:INFO:version 3.3.2
2024-05-09 13:12:18,201:INFO:Initializing setup()
2024-05-09 13:12:18,201:INFO:self.USI: 74fe
2024-05-09 13:12:18,201:INFO:self._variable_keys: {'logging_param', 'y', 'y_train', 'fold_groups_param', 'data', 'log_plots_param', 'USI', 'gpu_n_jobs_param', 'n_jobs_param', 'html_param', 'memory', 'exp_id', 'target_param', 'transform_target_param', 'exp_name_log', 'seed', 'X_train', 'X', 'pipeline', 'X_test', 'gpu_param', '_available_plots', 'fold_shuffle_param', '_ml_usecase', 'y_test', 'idx', 'fold_generator'}
2024-05-09 13:12:18,201:INFO:Checking environment
2024-05-09 13:12:18,201:INFO:python_version: 3.11.9
2024-05-09 13:12:18,201:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 13:12:18,201:INFO:machine: AMD64
2024-05-09 13:12:18,212:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 13:12:18,222:INFO:Memory: svmem(total=7947747328, available=2342252544, percent=70.5, used=5605494784, free=2342252544)
2024-05-09 13:12:18,222:INFO:Physical Core: 6
2024-05-09 13:12:18,222:INFO:Logical Core: 6
2024-05-09 13:12:18,222:INFO:Checking libraries
2024-05-09 13:12:18,222:INFO:System:
2024-05-09 13:12:18,222:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 13:12:18,222:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 13:12:18,222:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 13:12:18,222:INFO:PyCaret required dependencies:
2024-05-09 13:12:18,312:INFO:                 pip: 24.0
2024-05-09 13:12:18,312:INFO:          setuptools: 65.5.0
2024-05-09 13:12:18,312:INFO:             pycaret: 3.3.2
2024-05-09 13:12:18,312:INFO:             IPython: 8.24.0
2024-05-09 13:12:18,312:INFO:          ipywidgets: 8.1.2
2024-05-09 13:12:18,312:INFO:                tqdm: 4.66.4
2024-05-09 13:12:18,312:INFO:               numpy: 1.26.4
2024-05-09 13:12:18,312:INFO:              pandas: 2.1.4
2024-05-09 13:12:18,312:INFO:              jinja2: 3.1.4
2024-05-09 13:12:18,312:INFO:               scipy: 1.11.4
2024-05-09 13:12:18,312:INFO:              joblib: 1.3.2
2024-05-09 13:12:18,312:INFO:             sklearn: 1.4.2
2024-05-09 13:12:18,312:INFO:                pyod: 1.1.3
2024-05-09 13:12:18,312:INFO:            imblearn: 0.12.2
2024-05-09 13:12:18,312:INFO:   category_encoders: 2.6.3
2024-05-09 13:12:18,312:INFO:            lightgbm: 4.3.0
2024-05-09 13:12:18,312:INFO:               numba: 0.59.1
2024-05-09 13:12:18,322:INFO:            requests: 2.31.0
2024-05-09 13:12:18,322:INFO:          matplotlib: 3.7.5
2024-05-09 13:12:18,322:INFO:          scikitplot: 0.3.7
2024-05-09 13:12:18,322:INFO:         yellowbrick: 1.5
2024-05-09 13:12:18,322:INFO:              plotly: 5.22.0
2024-05-09 13:12:18,322:INFO:    plotly-resampler: Not installed
2024-05-09 13:12:18,322:INFO:             kaleido: 0.2.1
2024-05-09 13:12:18,322:INFO:           schemdraw: 0.15
2024-05-09 13:12:18,322:INFO:         statsmodels: 0.14.2
2024-05-09 13:12:18,322:INFO:              sktime: 0.26.0
2024-05-09 13:12:18,322:INFO:               tbats: 1.1.3
2024-05-09 13:12:18,322:INFO:            pmdarima: 2.0.4
2024-05-09 13:12:18,322:INFO:              psutil: 5.9.8
2024-05-09 13:12:18,322:INFO:          markupsafe: 2.1.5
2024-05-09 13:12:18,322:INFO:             pickle5: Not installed
2024-05-09 13:12:18,322:INFO:         cloudpickle: 3.0.0
2024-05-09 13:12:18,322:INFO:         deprecation: 2.1.0
2024-05-09 13:12:18,322:INFO:              xxhash: 3.4.1
2024-05-09 13:12:18,322:INFO:           wurlitzer: Not installed
2024-05-09 13:12:18,322:INFO:PyCaret optional dependencies:
2024-05-09 13:12:18,332:INFO:                shap: Not installed
2024-05-09 13:12:18,332:INFO:           interpret: Not installed
2024-05-09 13:12:18,332:INFO:                umap: Not installed
2024-05-09 13:12:18,332:INFO:     ydata_profiling: Not installed
2024-05-09 13:12:18,332:INFO:  explainerdashboard: Not installed
2024-05-09 13:12:18,332:INFO:             autoviz: Not installed
2024-05-09 13:12:18,332:INFO:           fairlearn: Not installed
2024-05-09 13:12:18,332:INFO:          deepchecks: Not installed
2024-05-09 13:12:18,332:INFO:             xgboost: Not installed
2024-05-09 13:12:18,332:INFO:            catboost: Not installed
2024-05-09 13:12:18,332:INFO:              kmodes: Not installed
2024-05-09 13:12:18,332:INFO:             mlxtend: Not installed
2024-05-09 13:12:18,332:INFO:       statsforecast: Not installed
2024-05-09 13:12:18,332:INFO:        tune_sklearn: Not installed
2024-05-09 13:12:18,332:INFO:                 ray: Not installed
2024-05-09 13:12:18,332:INFO:            hyperopt: Not installed
2024-05-09 13:12:18,332:INFO:              optuna: Not installed
2024-05-09 13:12:18,332:INFO:               skopt: Not installed
2024-05-09 13:12:18,332:INFO:              mlflow: Not installed
2024-05-09 13:12:18,332:INFO:              gradio: Not installed
2024-05-09 13:12:18,332:INFO:             fastapi: Not installed
2024-05-09 13:12:18,332:INFO:             uvicorn: Not installed
2024-05-09 13:12:18,332:INFO:              m2cgen: Not installed
2024-05-09 13:12:18,332:INFO:           evidently: Not installed
2024-05-09 13:12:18,332:INFO:               fugue: Not installed
2024-05-09 13:12:18,332:INFO:           streamlit: Not installed
2024-05-09 13:12:18,332:INFO:             prophet: Not installed
2024-05-09 13:12:18,332:INFO:None
2024-05-09 13:12:18,332:INFO:Set up data.
2024-05-09 13:12:18,342:INFO:Set up folding strategy.
2024-05-09 13:12:18,342:INFO:Set up train/test split.
2024-05-09 13:12:18,352:INFO:Set up index.
2024-05-09 13:12:18,352:INFO:Assigning column types.
2024-05-09 13:12:18,362:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 13:12:18,362:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,372:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,372:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:18,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:18,562:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,572:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,686:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:18,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:18,753:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 13:12:18,763:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,873:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,943:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:18,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:18,953:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:12:18,963:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,053:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,136:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 13:12:19,144:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,322:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,336:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,426:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,514:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 13:12:19,627:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:12:19,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:19,887:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 13:12:19,987:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:20,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:12:20,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,269:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 13:12:20,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:20,689:INFO:Preparing preprocessing pipeline...
2024-05-09 13:12:20,689:INFO:Set up simple imputation.
2024-05-09 13:12:20,689:INFO:Set up column name cleaning.
2024-05-09 13:12:20,749:INFO:Finished creating preprocessing pipeline.
2024-05-09 13:12:20,759:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 13:12:20,759:INFO:Creating final display dataframe.
2024-05-09 13:12:20,860:INFO:Setup _display_container:                     Description             Value
0                    Session id              5806
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              74fe
2024-05-09 13:12:21,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:21,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:21,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:21,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:12:21,241:INFO:setup() successfully completed in 3.04s...............
2024-05-09 13:12:21,300:INFO:Initializing create_model()
2024-05-09 13:12:21,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:12:21,300:INFO:Checking exceptions
2024-05-09 13:12:21,310:INFO:Importing libraries
2024-05-09 13:12:21,310:INFO:Copying training dataset
2024-05-09 13:12:21,320:INFO:Defining folds
2024-05-09 13:12:21,320:INFO:Declaring metric variables
2024-05-09 13:12:21,320:INFO:Importing untrained model
2024-05-09 13:12:21,320:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:12:21,320:INFO:Starting cross validation
2024-05-09 13:12:21,350:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:12:25,767:INFO:Calculating mean and std
2024-05-09 13:12:25,767:INFO:Creating metrics dataframe
2024-05-09 13:12:25,767:INFO:Finalizing model
2024-05-09 13:12:25,865:INFO:Uploading results into container
2024-05-09 13:12:25,865:INFO:Uploading model into container now
2024-05-09 13:12:25,875:INFO:_master_model_container: 1
2024-05-09 13:12:25,875:INFO:_display_container: 2
2024-05-09 13:12:25,875:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:25,875:INFO:create_model() successfully completed......................................
2024-05-09 13:12:25,945:INFO:Initializing tune_model()
2024-05-09 13:12:25,945:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5806), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 13:12:25,945:INFO:Checking exceptions
2024-05-09 13:12:25,945:INFO:Copying training dataset
2024-05-09 13:12:25,945:INFO:Checking base model
2024-05-09 13:12:25,945:INFO:Base model : Extra Trees Regressor
2024-05-09 13:12:25,945:INFO:Declaring metric variables
2024-05-09 13:12:25,945:INFO:Defining Hyperparameters
2024-05-09 13:12:26,020:INFO:Tuning with n_jobs=-1
2024-05-09 13:12:26,020:INFO:Initializing RandomizedSearchCV
2024-05-09 13:12:34,750:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 13:12:34,750:INFO:Hyperparameter search completed
2024-05-09 13:12:34,750:INFO:SubProcess create_model() called ==================================
2024-05-09 13:12:34,750:INFO:Initializing create_model()
2024-05-09 13:12:34,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5806), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7B09DB290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 13:12:34,750:INFO:Checking exceptions
2024-05-09 13:12:34,750:INFO:Importing libraries
2024-05-09 13:12:34,750:INFO:Copying training dataset
2024-05-09 13:12:34,758:INFO:Defining folds
2024-05-09 13:12:34,758:INFO:Declaring metric variables
2024-05-09 13:12:34,758:INFO:Importing untrained model
2024-05-09 13:12:34,758:INFO:Declaring custom model
2024-05-09 13:12:34,758:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:12:34,758:INFO:Starting cross validation
2024-05-09 13:12:34,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:12:35,309:INFO:Calculating mean and std
2024-05-09 13:12:35,309:INFO:Creating metrics dataframe
2024-05-09 13:12:35,309:INFO:Finalizing model
2024-05-09 13:12:35,481:INFO:Uploading results into container
2024-05-09 13:12:35,481:INFO:Uploading model into container now
2024-05-09 13:12:35,481:INFO:_master_model_container: 2
2024-05-09 13:12:35,481:INFO:_display_container: 3
2024-05-09 13:12:35,481:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, min_impurity_decrease=0.0005,
                    min_samples_leaf=3, min_samples_split=5, n_estimators=160,
                    n_jobs=-1, random_state=5806)
2024-05-09 13:12:35,481:INFO:create_model() successfully completed......................................
2024-05-09 13:12:35,549:INFO:SubProcess create_model() end ==================================
2024-05-09 13:12:35,549:INFO:choose_better activated
2024-05-09 13:12:35,549:INFO:SubProcess create_model() called ==================================
2024-05-09 13:12:35,549:INFO:Initializing create_model()
2024-05-09 13:12:35,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5806), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:12:35,549:INFO:Checking exceptions
2024-05-09 13:12:35,549:INFO:Importing libraries
2024-05-09 13:12:35,549:INFO:Copying training dataset
2024-05-09 13:12:35,559:INFO:Defining folds
2024-05-09 13:12:35,559:INFO:Declaring metric variables
2024-05-09 13:12:35,559:INFO:Importing untrained model
2024-05-09 13:12:35,559:INFO:Declaring custom model
2024-05-09 13:12:35,559:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:12:35,559:INFO:Starting cross validation
2024-05-09 13:12:35,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:12:36,028:INFO:Calculating mean and std
2024-05-09 13:12:36,029:INFO:Creating metrics dataframe
2024-05-09 13:12:36,029:INFO:Finalizing model
2024-05-09 13:12:36,104:INFO:Uploading results into container
2024-05-09 13:12:36,104:INFO:Uploading model into container now
2024-05-09 13:12:36,104:INFO:_master_model_container: 3
2024-05-09 13:12:36,104:INFO:_display_container: 4
2024-05-09 13:12:36,104:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:36,104:INFO:create_model() successfully completed......................................
2024-05-09 13:12:36,173:INFO:SubProcess create_model() end ==================================
2024-05-09 13:12:36,173:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5806) result for R2 is 0.7212
2024-05-09 13:12:36,173:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, min_impurity_decrease=0.0005,
                    min_samples_leaf=3, min_samples_split=5, n_estimators=160,
                    n_jobs=-1, random_state=5806) result for R2 is 0.6829
2024-05-09 13:12:36,173:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5806) is best model
2024-05-09 13:12:36,173:INFO:choose_better completed
2024-05-09 13:12:36,173:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 13:12:36,173:INFO:_master_model_container: 3
2024-05-09 13:12:36,173:INFO:_display_container: 3
2024-05-09 13:12:36,173:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:36,183:INFO:tune_model() successfully completed......................................
2024-05-09 13:12:36,253:INFO:Initializing finalize_model()
2024-05-09 13:12:36,253:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5806), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 13:12:36,253:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:36,253:INFO:Initializing create_model()
2024-05-09 13:12:36,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5806), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:12:36,253:INFO:Checking exceptions
2024-05-09 13:12:36,253:INFO:Importing libraries
2024-05-09 13:12:36,253:INFO:Copying training dataset
2024-05-09 13:12:36,253:INFO:Defining folds
2024-05-09 13:12:36,253:INFO:Declaring metric variables
2024-05-09 13:12:36,253:INFO:Importing untrained model
2024-05-09 13:12:36,253:INFO:Declaring custom model
2024-05-09 13:12:36,253:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:12:36,253:INFO:Cross validation set to False
2024-05-09 13:12:36,253:INFO:Fitting Model
2024-05-09 13:12:36,344:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5806))])
2024-05-09 13:12:36,344:INFO:create_model() successfully completed......................................
2024-05-09 13:12:36,414:INFO:_master_model_container: 3
2024-05-09 13:12:36,414:INFO:_display_container: 3
2024-05-09 13:12:36,414:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5806))])
2024-05-09 13:12:36,414:INFO:finalize_model() successfully completed......................................
2024-05-09 13:12:36,484:INFO:Initializing create_model()
2024-05-09 13:12:36,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:12:36,484:INFO:Checking exceptions
2024-05-09 13:12:36,484:INFO:Importing libraries
2024-05-09 13:12:36,484:INFO:Copying training dataset
2024-05-09 13:12:36,484:INFO:Defining folds
2024-05-09 13:12:36,484:INFO:Declaring metric variables
2024-05-09 13:12:36,484:INFO:Importing untrained model
2024-05-09 13:12:36,484:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:12:36,484:INFO:Starting cross validation
2024-05-09 13:12:36,484:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:12:37,063:INFO:Calculating mean and std
2024-05-09 13:12:37,063:INFO:Creating metrics dataframe
2024-05-09 13:12:37,063:INFO:Finalizing model
2024-05-09 13:12:37,183:INFO:Uploading results into container
2024-05-09 13:12:37,183:INFO:Uploading model into container now
2024-05-09 13:12:37,192:INFO:_master_model_container: 4
2024-05-09 13:12:37,192:INFO:_display_container: 4
2024-05-09 13:12:37,192:INFO:RandomForestRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:37,192:INFO:create_model() successfully completed......................................
2024-05-09 13:12:37,262:INFO:Initializing tune_model()
2024-05-09 13:12:37,262:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5806), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 13:12:37,262:INFO:Checking exceptions
2024-05-09 13:12:37,272:INFO:Copying training dataset
2024-05-09 13:12:37,272:INFO:Checking base model
2024-05-09 13:12:37,272:INFO:Base model : Random Forest Regressor
2024-05-09 13:12:37,272:INFO:Declaring metric variables
2024-05-09 13:12:37,272:INFO:Defining Hyperparameters
2024-05-09 13:12:37,343:INFO:Tuning with n_jobs=-1
2024-05-09 13:12:37,343:INFO:Initializing RandomizedSearchCV
2024-05-09 13:12:51,224:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 13:12:51,224:INFO:Hyperparameter search completed
2024-05-09 13:12:51,224:INFO:SubProcess create_model() called ==================================
2024-05-09 13:12:51,224:INFO:Initializing create_model()
2024-05-09 13:12:51,224:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5806), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A7B13D7B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 13:12:51,224:INFO:Checking exceptions
2024-05-09 13:12:51,224:INFO:Importing libraries
2024-05-09 13:12:51,224:INFO:Copying training dataset
2024-05-09 13:12:51,224:INFO:Defining folds
2024-05-09 13:12:51,224:INFO:Declaring metric variables
2024-05-09 13:12:51,224:INFO:Importing untrained model
2024-05-09 13:12:51,224:INFO:Declaring custom model
2024-05-09 13:12:51,224:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:12:51,224:INFO:Starting cross validation
2024-05-09 13:12:51,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:12:51,973:INFO:Calculating mean and std
2024-05-09 13:12:51,973:INFO:Creating metrics dataframe
2024-05-09 13:12:51,973:INFO:Finalizing model
2024-05-09 13:12:52,166:INFO:Uploading results into container
2024-05-09 13:12:52,166:INFO:Uploading model into container now
2024-05-09 13:12:52,166:INFO:_master_model_container: 5
2024-05-09 13:12:52,166:INFO:_display_container: 5
2024-05-09 13:12:52,166:INFO:RandomForestRegressor(max_depth=9, min_impurity_decrease=0.0005,
                      min_samples_leaf=3, min_samples_split=5, n_estimators=160,
                      n_jobs=-1, random_state=5806)
2024-05-09 13:12:52,166:INFO:create_model() successfully completed......................................
2024-05-09 13:12:52,252:INFO:SubProcess create_model() end ==================================
2024-05-09 13:12:52,252:INFO:choose_better activated
2024-05-09 13:12:52,252:INFO:SubProcess create_model() called ==================================
2024-05-09 13:12:52,252:INFO:Initializing create_model()
2024-05-09 13:12:52,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5806), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:12:52,252:INFO:Checking exceptions
2024-05-09 13:12:52,252:INFO:Importing libraries
2024-05-09 13:12:52,252:INFO:Copying training dataset
2024-05-09 13:12:52,252:INFO:Defining folds
2024-05-09 13:12:52,252:INFO:Declaring metric variables
2024-05-09 13:12:52,252:INFO:Importing untrained model
2024-05-09 13:12:52,252:INFO:Declaring custom model
2024-05-09 13:12:52,252:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:12:52,252:INFO:Starting cross validation
2024-05-09 13:12:52,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:12:52,838:INFO:Calculating mean and std
2024-05-09 13:12:52,838:INFO:Creating metrics dataframe
2024-05-09 13:12:52,840:INFO:Finalizing model
2024-05-09 13:12:52,985:INFO:Uploading results into container
2024-05-09 13:12:52,985:INFO:Uploading model into container now
2024-05-09 13:12:52,985:INFO:_master_model_container: 6
2024-05-09 13:12:52,985:INFO:_display_container: 6
2024-05-09 13:12:52,985:INFO:RandomForestRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:52,985:INFO:create_model() successfully completed......................................
2024-05-09 13:12:53,084:INFO:SubProcess create_model() end ==================================
2024-05-09 13:12:53,084:INFO:RandomForestRegressor(n_jobs=-1, random_state=5806) result for R2 is 0.7265
2024-05-09 13:12:53,084:INFO:RandomForestRegressor(max_depth=9, min_impurity_decrease=0.0005,
                      min_samples_leaf=3, min_samples_split=5, n_estimators=160,
                      n_jobs=-1, random_state=5806) result for R2 is 0.7142
2024-05-09 13:12:53,084:INFO:RandomForestRegressor(n_jobs=-1, random_state=5806) is best model
2024-05-09 13:12:53,084:INFO:choose_better completed
2024-05-09 13:12:53,084:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 13:12:53,094:INFO:_master_model_container: 6
2024-05-09 13:12:53,094:INFO:_display_container: 5
2024-05-09 13:12:53,094:INFO:RandomForestRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:53,094:INFO:tune_model() successfully completed......................................
2024-05-09 13:12:53,184:INFO:Initializing finalize_model()
2024-05-09 13:12:53,184:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5806), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 13:12:53,184:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=5806)
2024-05-09 13:12:53,194:INFO:Initializing create_model()
2024-05-09 13:12:53,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A79CFC1110>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5806), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:12:53,194:INFO:Checking exceptions
2024-05-09 13:12:53,194:INFO:Importing libraries
2024-05-09 13:12:53,194:INFO:Copying training dataset
2024-05-09 13:12:53,194:INFO:Defining folds
2024-05-09 13:12:53,194:INFO:Declaring metric variables
2024-05-09 13:12:53,194:INFO:Importing untrained model
2024-05-09 13:12:53,194:INFO:Declaring custom model
2024-05-09 13:12:53,194:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:12:53,194:INFO:Cross validation set to False
2024-05-09 13:12:53,194:INFO:Fitting Model
2024-05-09 13:12:53,337:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5806))])
2024-05-09 13:12:53,340:INFO:create_model() successfully completed......................................
2024-05-09 13:12:53,427:INFO:_master_model_container: 6
2024-05-09 13:12:53,427:INFO:_display_container: 5
2024-05-09 13:12:53,440:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5806))])
2024-05-09 13:12:53,440:INFO:finalize_model() successfully completed......................................
2024-05-09 13:13:56,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:13:56,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:13:56,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:13:56,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 13:13:56,697:INFO:PyCaret RegressionExperiment
2024-05-09 13:13:56,697:INFO:Logging name: reg-default-name
2024-05-09 13:13:56,697:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 13:13:56,697:INFO:version 3.3.2
2024-05-09 13:13:56,704:INFO:Initializing setup()
2024-05-09 13:13:56,704:INFO:self.USI: 6175
2024-05-09 13:13:56,704:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'X_test', '_available_plots', 'X', 'log_plots_param', 'fold_generator', 'data', 'gpu_n_jobs_param', 'html_param', 'logging_param', 'y_test', 'X_train', 'y_train', 'USI', 'target_param', '_ml_usecase', 'y', 'transform_target_param', 'pipeline', 'gpu_param', 'seed', 'memory', 'fold_shuffle_param', 'n_jobs_param', 'exp_id', 'exp_name_log'}
2024-05-09 13:13:56,704:INFO:Checking environment
2024-05-09 13:13:56,704:INFO:python_version: 3.11.9
2024-05-09 13:13:56,704:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 13:13:56,704:INFO:machine: AMD64
2024-05-09 13:13:56,724:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 13:13:56,724:INFO:Memory: svmem(total=7947747328, available=2107109376, percent=73.5, used=5840637952, free=2107109376)
2024-05-09 13:13:56,724:INFO:Physical Core: 6
2024-05-09 13:13:56,724:INFO:Logical Core: 6
2024-05-09 13:13:56,724:INFO:Checking libraries
2024-05-09 13:13:56,724:INFO:System:
2024-05-09 13:13:56,724:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 13:13:56,724:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 13:13:56,724:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 13:13:56,724:INFO:PyCaret required dependencies:
2024-05-09 13:13:56,754:INFO:                 pip: 24.0
2024-05-09 13:13:56,754:INFO:          setuptools: 65.5.0
2024-05-09 13:13:56,754:INFO:             pycaret: 3.3.2
2024-05-09 13:13:56,754:INFO:             IPython: 8.24.0
2024-05-09 13:13:56,754:INFO:          ipywidgets: 8.1.2
2024-05-09 13:13:56,754:INFO:                tqdm: 4.66.4
2024-05-09 13:13:56,754:INFO:               numpy: 1.26.4
2024-05-09 13:13:56,754:INFO:              pandas: 2.1.4
2024-05-09 13:13:56,754:INFO:              jinja2: 3.1.4
2024-05-09 13:13:56,754:INFO:               scipy: 1.11.4
2024-05-09 13:13:56,754:INFO:              joblib: 1.3.2
2024-05-09 13:13:56,754:INFO:             sklearn: 1.4.2
2024-05-09 13:13:56,754:INFO:                pyod: 1.1.3
2024-05-09 13:13:56,754:INFO:            imblearn: 0.12.2
2024-05-09 13:13:56,754:INFO:   category_encoders: 2.6.3
2024-05-09 13:13:56,754:INFO:            lightgbm: 4.3.0
2024-05-09 13:13:56,754:INFO:               numba: 0.59.1
2024-05-09 13:13:56,754:INFO:            requests: 2.31.0
2024-05-09 13:13:56,754:INFO:          matplotlib: 3.7.5
2024-05-09 13:13:56,754:INFO:          scikitplot: 0.3.7
2024-05-09 13:13:56,754:INFO:         yellowbrick: 1.5
2024-05-09 13:13:56,754:INFO:              plotly: 5.22.0
2024-05-09 13:13:56,754:INFO:    plotly-resampler: Not installed
2024-05-09 13:13:56,754:INFO:             kaleido: 0.2.1
2024-05-09 13:13:56,754:INFO:           schemdraw: 0.15
2024-05-09 13:13:56,754:INFO:         statsmodels: 0.14.2
2024-05-09 13:13:56,754:INFO:              sktime: 0.26.0
2024-05-09 13:13:56,754:INFO:               tbats: 1.1.3
2024-05-09 13:13:56,754:INFO:            pmdarima: 2.0.4
2024-05-09 13:13:56,754:INFO:              psutil: 5.9.8
2024-05-09 13:13:56,754:INFO:          markupsafe: 2.1.5
2024-05-09 13:13:56,754:INFO:             pickle5: Not installed
2024-05-09 13:13:56,754:INFO:         cloudpickle: 3.0.0
2024-05-09 13:13:56,754:INFO:         deprecation: 2.1.0
2024-05-09 13:13:56,754:INFO:              xxhash: 3.4.1
2024-05-09 13:13:56,754:INFO:           wurlitzer: Not installed
2024-05-09 13:13:56,754:INFO:PyCaret optional dependencies:
2024-05-09 13:13:56,774:INFO:                shap: Not installed
2024-05-09 13:13:56,774:INFO:           interpret: Not installed
2024-05-09 13:13:56,774:INFO:                umap: Not installed
2024-05-09 13:13:56,774:INFO:     ydata_profiling: Not installed
2024-05-09 13:13:56,774:INFO:  explainerdashboard: Not installed
2024-05-09 13:13:56,774:INFO:             autoviz: Not installed
2024-05-09 13:13:56,774:INFO:           fairlearn: Not installed
2024-05-09 13:13:56,774:INFO:          deepchecks: Not installed
2024-05-09 13:13:56,774:INFO:             xgboost: Not installed
2024-05-09 13:13:56,774:INFO:            catboost: Not installed
2024-05-09 13:13:56,774:INFO:              kmodes: Not installed
2024-05-09 13:13:56,774:INFO:             mlxtend: Not installed
2024-05-09 13:13:56,774:INFO:       statsforecast: Not installed
2024-05-09 13:13:56,774:INFO:        tune_sklearn: Not installed
2024-05-09 13:13:56,774:INFO:                 ray: Not installed
2024-05-09 13:13:56,774:INFO:            hyperopt: Not installed
2024-05-09 13:13:56,774:INFO:              optuna: Not installed
2024-05-09 13:13:56,774:INFO:               skopt: Not installed
2024-05-09 13:13:56,774:INFO:              mlflow: Not installed
2024-05-09 13:13:56,774:INFO:              gradio: Not installed
2024-05-09 13:13:56,774:INFO:             fastapi: Not installed
2024-05-09 13:13:56,774:INFO:             uvicorn: Not installed
2024-05-09 13:13:56,774:INFO:              m2cgen: Not installed
2024-05-09 13:13:56,774:INFO:           evidently: Not installed
2024-05-09 13:13:56,774:INFO:               fugue: Not installed
2024-05-09 13:13:56,774:INFO:           streamlit: Not installed
2024-05-09 13:13:56,774:INFO:             prophet: Not installed
2024-05-09 13:13:56,774:INFO:None
2024-05-09 13:13:56,774:INFO:Set up data.
2024-05-09 13:13:56,774:INFO:Set up folding strategy.
2024-05-09 13:13:56,774:INFO:Set up train/test split.
2024-05-09 13:13:56,784:INFO:Set up index.
2024-05-09 13:13:56,784:INFO:Assigning column types.
2024-05-09 13:13:56,784:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 13:13:56,784:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 13:13:56,797:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:13:56,804:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:13:56,904:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:56,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:56,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:56,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:56,984:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 13:13:56,997:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,004:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,097:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,175:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 13:13:57,184:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,184:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,365:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,375:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,545:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 13:13:57,565:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,854:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,924:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:57,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:57,924:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 13:13:58,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:58,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:58,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:58,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 13:13:58,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,305:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 13:13:58,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:58,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,606:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 13:13:58,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,676:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 13:13:58,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:58,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,077:INFO:Preparing preprocessing pipeline...
2024-05-09 13:13:59,113:INFO:Set up simple imputation.
2024-05-09 13:13:59,113:INFO:Set up column name cleaning.
2024-05-09 13:13:59,157:INFO:Finished creating preprocessing pipeline.
2024-05-09 13:13:59,167:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 13:13:59,167:INFO:Creating final display dataframe.
2024-05-09 13:13:59,257:INFO:Setup _display_container:                     Description             Value
0                    Session id              8023
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1108, 7)
4        Transformed data shape         (1108, 7)
5   Transformed train set shape          (775, 7)
6    Transformed test set shape          (333, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              6175
2024-05-09 13:13:59,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 13:13:59,679:INFO:setup() successfully completed in 2.98s...............
2024-05-09 13:13:59,689:INFO:Initializing create_model()
2024-05-09 13:13:59,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:13:59,689:INFO:Checking exceptions
2024-05-09 13:13:59,689:INFO:Importing libraries
2024-05-09 13:13:59,689:INFO:Copying training dataset
2024-05-09 13:13:59,701:INFO:Defining folds
2024-05-09 13:13:59,701:INFO:Declaring metric variables
2024-05-09 13:13:59,701:INFO:Importing untrained model
2024-05-09 13:13:59,701:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:13:59,701:INFO:Starting cross validation
2024-05-09 13:13:59,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:14:04,474:INFO:Calculating mean and std
2024-05-09 13:14:04,474:INFO:Creating metrics dataframe
2024-05-09 13:14:04,474:INFO:Finalizing model
2024-05-09 13:14:04,560:INFO:Uploading results into container
2024-05-09 13:14:04,569:INFO:Uploading model into container now
2024-05-09 13:14:04,572:INFO:_master_model_container: 1
2024-05-09 13:14:04,572:INFO:_display_container: 2
2024-05-09 13:14:04,572:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:04,572:INFO:create_model() successfully completed......................................
2024-05-09 13:14:04,643:INFO:Initializing tune_model()
2024-05-09 13:14:04,643:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8023), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 13:14:04,643:INFO:Checking exceptions
2024-05-09 13:14:04,643:INFO:Copying training dataset
2024-05-09 13:14:04,653:INFO:Checking base model
2024-05-09 13:14:04,653:INFO:Base model : Extra Trees Regressor
2024-05-09 13:14:04,653:INFO:Declaring metric variables
2024-05-09 13:14:04,653:INFO:Defining Hyperparameters
2024-05-09 13:14:04,713:INFO:Tuning with n_jobs=-1
2024-05-09 13:14:04,713:INFO:Initializing RandomizedSearchCV
2024-05-09 13:14:13,675:INFO:best_params: {'actual_estimator__n_estimators': 70, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 13:14:13,675:INFO:Hyperparameter search completed
2024-05-09 13:14:13,675:INFO:SubProcess create_model() called ==================================
2024-05-09 13:14:13,675:INFO:Initializing create_model()
2024-05-09 13:14:13,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8023), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B994D73F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 70, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 13:14:13,675:INFO:Checking exceptions
2024-05-09 13:14:13,675:INFO:Importing libraries
2024-05-09 13:14:13,675:INFO:Copying training dataset
2024-05-09 13:14:13,680:INFO:Defining folds
2024-05-09 13:14:13,680:INFO:Declaring metric variables
2024-05-09 13:14:13,680:INFO:Importing untrained model
2024-05-09 13:14:13,680:INFO:Declaring custom model
2024-05-09 13:14:13,680:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:14:13,680:INFO:Starting cross validation
2024-05-09 13:14:13,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:14:13,976:INFO:Calculating mean and std
2024-05-09 13:14:13,976:INFO:Creating metrics dataframe
2024-05-09 13:14:13,976:INFO:Finalizing model
2024-05-09 13:14:14,058:INFO:Uploading results into container
2024-05-09 13:14:14,058:INFO:Uploading model into container now
2024-05-09 13:14:14,058:INFO:_master_model_container: 2
2024-05-09 13:14:14,058:INFO:_display_container: 3
2024-05-09 13:14:14,058:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.02,
                    min_samples_leaf=2, min_samples_split=9, n_estimators=70,
                    n_jobs=-1, random_state=8023)
2024-05-09 13:14:14,058:INFO:create_model() successfully completed......................................
2024-05-09 13:14:14,127:INFO:SubProcess create_model() end ==================================
2024-05-09 13:14:14,127:INFO:choose_better activated
2024-05-09 13:14:14,127:INFO:SubProcess create_model() called ==================================
2024-05-09 13:14:14,127:INFO:Initializing create_model()
2024-05-09 13:14:14,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8023), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:14:14,127:INFO:Checking exceptions
2024-05-09 13:14:14,127:INFO:Importing libraries
2024-05-09 13:14:14,127:INFO:Copying training dataset
2024-05-09 13:14:14,127:INFO:Defining folds
2024-05-09 13:14:14,127:INFO:Declaring metric variables
2024-05-09 13:14:14,127:INFO:Importing untrained model
2024-05-09 13:14:14,127:INFO:Declaring custom model
2024-05-09 13:14:14,127:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:14:14,127:INFO:Starting cross validation
2024-05-09 13:14:14,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:14:14,595:INFO:Calculating mean and std
2024-05-09 13:14:14,595:INFO:Creating metrics dataframe
2024-05-09 13:14:14,595:INFO:Finalizing model
2024-05-09 13:14:14,694:INFO:Uploading results into container
2024-05-09 13:14:14,695:INFO:Uploading model into container now
2024-05-09 13:14:14,695:INFO:_master_model_container: 3
2024-05-09 13:14:14,695:INFO:_display_container: 4
2024-05-09 13:14:14,696:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:14,696:INFO:create_model() successfully completed......................................
2024-05-09 13:14:14,782:INFO:SubProcess create_model() end ==================================
2024-05-09 13:14:14,782:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8023) result for R2 is 0.6997
2024-05-09 13:14:14,782:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=10, min_impurity_decrease=0.02,
                    min_samples_leaf=2, min_samples_split=9, n_estimators=70,
                    n_jobs=-1, random_state=8023) result for R2 is 0.6713
2024-05-09 13:14:14,782:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8023) is best model
2024-05-09 13:14:14,782:INFO:choose_better completed
2024-05-09 13:14:14,782:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 13:14:14,792:INFO:_master_model_container: 3
2024-05-09 13:14:14,792:INFO:_display_container: 3
2024-05-09 13:14:14,792:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:14,792:INFO:tune_model() successfully completed......................................
2024-05-09 13:14:14,892:INFO:Initializing finalize_model()
2024-05-09 13:14:14,892:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8023), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 13:14:14,892:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:14,892:INFO:Initializing create_model()
2024-05-09 13:14:14,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8023), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:14:14,892:INFO:Checking exceptions
2024-05-09 13:14:14,892:INFO:Importing libraries
2024-05-09 13:14:14,892:INFO:Copying training dataset
2024-05-09 13:14:14,892:INFO:Defining folds
2024-05-09 13:14:14,892:INFO:Declaring metric variables
2024-05-09 13:14:14,892:INFO:Importing untrained model
2024-05-09 13:14:14,892:INFO:Declaring custom model
2024-05-09 13:14:14,892:INFO:Extra Trees Regressor Imported successfully
2024-05-09 13:14:14,892:INFO:Cross validation set to False
2024-05-09 13:14:14,892:INFO:Fitting Model
2024-05-09 13:14:14,994:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8023))])
2024-05-09 13:14:14,994:INFO:create_model() successfully completed......................................
2024-05-09 13:14:15,074:INFO:_master_model_container: 3
2024-05-09 13:14:15,074:INFO:_display_container: 3
2024-05-09 13:14:15,084:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8023))])
2024-05-09 13:14:15,084:INFO:finalize_model() successfully completed......................................
2024-05-09 13:14:15,165:INFO:Initializing create_model()
2024-05-09 13:14:15,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:14:15,165:INFO:Checking exceptions
2024-05-09 13:14:15,165:INFO:Importing libraries
2024-05-09 13:14:15,165:INFO:Copying training dataset
2024-05-09 13:14:15,165:INFO:Defining folds
2024-05-09 13:14:15,165:INFO:Declaring metric variables
2024-05-09 13:14:15,165:INFO:Importing untrained model
2024-05-09 13:14:15,165:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:14:15,165:INFO:Starting cross validation
2024-05-09 13:14:15,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:14:15,763:INFO:Calculating mean and std
2024-05-09 13:14:15,763:INFO:Creating metrics dataframe
2024-05-09 13:14:15,763:INFO:Finalizing model
2024-05-09 13:14:15,891:INFO:Uploading results into container
2024-05-09 13:14:15,891:INFO:Uploading model into container now
2024-05-09 13:14:15,891:INFO:_master_model_container: 4
2024-05-09 13:14:15,891:INFO:_display_container: 4
2024-05-09 13:14:15,891:INFO:RandomForestRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:15,891:INFO:create_model() successfully completed......................................
2024-05-09 13:14:15,981:INFO:Initializing tune_model()
2024-05-09 13:14:15,981:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8023), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 13:14:15,981:INFO:Checking exceptions
2024-05-09 13:14:15,981:INFO:Copying training dataset
2024-05-09 13:14:15,981:INFO:Checking base model
2024-05-09 13:14:15,981:INFO:Base model : Random Forest Regressor
2024-05-09 13:14:15,991:INFO:Declaring metric variables
2024-05-09 13:14:15,991:INFO:Defining Hyperparameters
2024-05-09 13:14:16,071:INFO:Tuning with n_jobs=-1
2024-05-09 13:14:16,071:INFO:Initializing RandomizedSearchCV
2024-05-09 13:14:30,505:INFO:best_params: {'actual_estimator__n_estimators': 70, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 13:14:30,505:INFO:Hyperparameter search completed
2024-05-09 13:14:30,505:INFO:SubProcess create_model() called ==================================
2024-05-09 13:14:30,505:INFO:Initializing create_model()
2024-05-09 13:14:30,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8023), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B9A6C54F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 70, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 13:14:30,505:INFO:Checking exceptions
2024-05-09 13:14:30,505:INFO:Importing libraries
2024-05-09 13:14:30,505:INFO:Copying training dataset
2024-05-09 13:14:30,510:INFO:Defining folds
2024-05-09 13:14:30,510:INFO:Declaring metric variables
2024-05-09 13:14:30,510:INFO:Importing untrained model
2024-05-09 13:14:30,510:INFO:Declaring custom model
2024-05-09 13:14:30,510:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:14:30,510:INFO:Starting cross validation
2024-05-09 13:14:30,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:14:30,925:INFO:Calculating mean and std
2024-05-09 13:14:30,925:INFO:Creating metrics dataframe
2024-05-09 13:14:30,925:INFO:Finalizing model
2024-05-09 13:14:31,019:INFO:Uploading results into container
2024-05-09 13:14:31,019:INFO:Uploading model into container now
2024-05-09 13:14:31,019:INFO:_master_model_container: 5
2024-05-09 13:14:31,019:INFO:_display_container: 5
2024-05-09 13:14:31,019:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.02,
                      min_samples_leaf=2, min_samples_split=9, n_estimators=70,
                      n_jobs=-1, random_state=8023)
2024-05-09 13:14:31,019:INFO:create_model() successfully completed......................................
2024-05-09 13:14:31,085:INFO:SubProcess create_model() end ==================================
2024-05-09 13:14:31,085:INFO:choose_better activated
2024-05-09 13:14:31,085:INFO:SubProcess create_model() called ==================================
2024-05-09 13:14:31,085:INFO:Initializing create_model()
2024-05-09 13:14:31,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8023), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:14:31,085:INFO:Checking exceptions
2024-05-09 13:14:31,085:INFO:Importing libraries
2024-05-09 13:14:31,085:INFO:Copying training dataset
2024-05-09 13:14:31,095:INFO:Defining folds
2024-05-09 13:14:31,095:INFO:Declaring metric variables
2024-05-09 13:14:31,095:INFO:Importing untrained model
2024-05-09 13:14:31,095:INFO:Declaring custom model
2024-05-09 13:14:31,095:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:14:31,095:INFO:Starting cross validation
2024-05-09 13:14:31,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 13:14:31,792:INFO:Calculating mean and std
2024-05-09 13:14:31,827:INFO:Creating metrics dataframe
2024-05-09 13:14:31,830:INFO:Finalizing model
2024-05-09 13:14:31,973:INFO:Uploading results into container
2024-05-09 13:14:31,973:INFO:Uploading model into container now
2024-05-09 13:14:31,973:INFO:_master_model_container: 6
2024-05-09 13:14:31,973:INFO:_display_container: 6
2024-05-09 13:14:31,973:INFO:RandomForestRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:31,973:INFO:create_model() successfully completed......................................
2024-05-09 13:14:32,042:INFO:SubProcess create_model() end ==================================
2024-05-09 13:14:32,042:INFO:RandomForestRegressor(n_jobs=-1, random_state=8023) result for R2 is 0.7168
2024-05-09 13:14:32,042:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0.02,
                      min_samples_leaf=2, min_samples_split=9, n_estimators=70,
                      n_jobs=-1, random_state=8023) result for R2 is 0.7085
2024-05-09 13:14:32,042:INFO:RandomForestRegressor(n_jobs=-1, random_state=8023) is best model
2024-05-09 13:14:32,042:INFO:choose_better completed
2024-05-09 13:14:32,042:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 13:14:32,052:INFO:_master_model_container: 6
2024-05-09 13:14:32,052:INFO:_display_container: 5
2024-05-09 13:14:32,052:INFO:RandomForestRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:32,052:INFO:tune_model() successfully completed......................................
2024-05-09 13:14:32,122:INFO:Initializing finalize_model()
2024-05-09 13:14:32,122:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8023), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 13:14:32,122:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=8023)
2024-05-09 13:14:32,127:INFO:Initializing create_model()
2024-05-09 13:14:32,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8023), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 13:14:32,127:INFO:Checking exceptions
2024-05-09 13:14:32,127:INFO:Importing libraries
2024-05-09 13:14:32,127:INFO:Copying training dataset
2024-05-09 13:14:32,127:INFO:Defining folds
2024-05-09 13:14:32,127:INFO:Declaring metric variables
2024-05-09 13:14:32,127:INFO:Importing untrained model
2024-05-09 13:14:32,127:INFO:Declaring custom model
2024-05-09 13:14:32,127:INFO:Random Forest Regressor Imported successfully
2024-05-09 13:14:32,127:INFO:Cross validation set to False
2024-05-09 13:14:32,127:INFO:Fitting Model
2024-05-09 13:14:32,264:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8023))])
2024-05-09 13:14:32,264:INFO:create_model() successfully completed......................................
2024-05-09 13:14:32,334:INFO:_master_model_container: 6
2024-05-09 13:14:32,334:INFO:_display_container: 5
2024-05-09 13:14:32,334:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8023))])
2024-05-09 13:14:32,334:INFO:finalize_model() successfully completed......................................
2024-05-09 13:17:03,460:INFO:Initializing predict_model()
2024-05-09 13:17:03,460:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8023))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B9A74B4040>)
2024-05-09 13:17:03,460:INFO:Checking exceptions
2024-05-09 13:17:03,460:INFO:Preloading libraries
2024-05-09 13:17:03,460:INFO:Set up data.
2024-05-09 13:17:03,470:INFO:Set up index.
2024-05-09 13:17:03,742:INFO:Initializing predict_model()
2024-05-09 13:17:03,742:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B992FCF190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8023))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B9958D8540>)
2024-05-09 13:17:03,742:INFO:Checking exceptions
2024-05-09 13:17:03,742:INFO:Preloading libraries
2024-05-09 13:17:03,742:INFO:Set up data.
2024-05-09 13:17:03,752:INFO:Set up index.
2024-05-09 23:22:12,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:22:12,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:22:12,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:22:12,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:22:12,720:INFO:PyCaret RegressionExperiment
2024-05-09 23:22:12,720:INFO:Logging name: reg-default-name
2024-05-09 23:22:12,720:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:22:12,720:INFO:version 3.3.2
2024-05-09 23:22:12,720:INFO:Initializing setup()
2024-05-09 23:22:12,720:INFO:self.USI: 22d7
2024-05-09 23:22:12,720:INFO:self._variable_keys: {'seed', 'memory', 'fold_shuffle_param', 'fold_groups_param', 'gpu_n_jobs_param', 'log_plots_param', 'y_test', '_available_plots', 'X_train', 'USI', 'logging_param', 'data', '_ml_usecase', 'html_param', 'pipeline', 'y_train', 'y', 'transform_target_param', 'exp_id', 'X_test', 'fold_generator', 'exp_name_log', 'n_jobs_param', 'idx', 'X', 'target_param', 'gpu_param'}
2024-05-09 23:22:12,720:INFO:Checking environment
2024-05-09 23:22:12,720:INFO:python_version: 3.11.9
2024-05-09 23:22:12,720:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:22:12,720:INFO:machine: AMD64
2024-05-09 23:22:12,730:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:22:12,730:INFO:Memory: svmem(total=7947747328, available=522985472, percent=93.4, used=7424761856, free=522985472)
2024-05-09 23:22:12,730:INFO:Physical Core: 6
2024-05-09 23:22:12,730:INFO:Logical Core: 6
2024-05-09 23:22:12,730:INFO:Checking libraries
2024-05-09 23:22:12,730:INFO:System:
2024-05-09 23:22:12,730:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:22:12,730:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:22:12,730:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:22:12,730:INFO:PyCaret required dependencies:
2024-05-09 23:22:12,800:INFO:                 pip: 24.0
2024-05-09 23:22:12,800:INFO:          setuptools: 65.5.0
2024-05-09 23:22:12,800:INFO:             pycaret: 3.3.2
2024-05-09 23:22:12,800:INFO:             IPython: 8.24.0
2024-05-09 23:22:12,800:INFO:          ipywidgets: 8.1.2
2024-05-09 23:22:12,800:INFO:                tqdm: 4.66.4
2024-05-09 23:22:12,800:INFO:               numpy: 1.26.4
2024-05-09 23:22:12,800:INFO:              pandas: 2.1.4
2024-05-09 23:22:12,800:INFO:              jinja2: 3.1.4
2024-05-09 23:22:12,800:INFO:               scipy: 1.11.4
2024-05-09 23:22:12,800:INFO:              joblib: 1.3.2
2024-05-09 23:22:12,800:INFO:             sklearn: 1.4.2
2024-05-09 23:22:12,800:INFO:                pyod: 1.1.3
2024-05-09 23:22:12,800:INFO:            imblearn: 0.12.2
2024-05-09 23:22:12,800:INFO:   category_encoders: 2.6.3
2024-05-09 23:22:12,800:INFO:            lightgbm: 4.3.0
2024-05-09 23:22:12,800:INFO:               numba: 0.59.1
2024-05-09 23:22:12,800:INFO:            requests: 2.31.0
2024-05-09 23:22:12,800:INFO:          matplotlib: 3.7.5
2024-05-09 23:22:12,800:INFO:          scikitplot: 0.3.7
2024-05-09 23:22:12,800:INFO:         yellowbrick: 1.5
2024-05-09 23:22:12,800:INFO:              plotly: 5.22.0
2024-05-09 23:22:12,800:INFO:    plotly-resampler: Not installed
2024-05-09 23:22:12,800:INFO:             kaleido: 0.2.1
2024-05-09 23:22:12,800:INFO:           schemdraw: 0.15
2024-05-09 23:22:12,800:INFO:         statsmodels: 0.14.2
2024-05-09 23:22:12,800:INFO:              sktime: 0.26.0
2024-05-09 23:22:12,800:INFO:               tbats: 1.1.3
2024-05-09 23:22:12,800:INFO:            pmdarima: 2.0.4
2024-05-09 23:22:12,800:INFO:              psutil: 5.9.8
2024-05-09 23:22:12,800:INFO:          markupsafe: 2.1.5
2024-05-09 23:22:12,800:INFO:             pickle5: Not installed
2024-05-09 23:22:12,800:INFO:         cloudpickle: 3.0.0
2024-05-09 23:22:12,800:INFO:         deprecation: 2.1.0
2024-05-09 23:22:12,800:INFO:              xxhash: 3.4.1
2024-05-09 23:22:12,800:INFO:           wurlitzer: Not installed
2024-05-09 23:22:12,800:INFO:PyCaret optional dependencies:
2024-05-09 23:22:12,810:INFO:                shap: Not installed
2024-05-09 23:22:12,810:INFO:           interpret: Not installed
2024-05-09 23:22:12,810:INFO:                umap: Not installed
2024-05-09 23:22:12,810:INFO:     ydata_profiling: Not installed
2024-05-09 23:22:12,810:INFO:  explainerdashboard: Not installed
2024-05-09 23:22:12,810:INFO:             autoviz: Not installed
2024-05-09 23:22:12,810:INFO:           fairlearn: Not installed
2024-05-09 23:22:12,810:INFO:          deepchecks: Not installed
2024-05-09 23:22:12,810:INFO:             xgboost: Not installed
2024-05-09 23:22:12,810:INFO:            catboost: Not installed
2024-05-09 23:22:12,810:INFO:              kmodes: Not installed
2024-05-09 23:22:12,810:INFO:             mlxtend: Not installed
2024-05-09 23:22:12,810:INFO:       statsforecast: Not installed
2024-05-09 23:22:12,810:INFO:        tune_sklearn: Not installed
2024-05-09 23:22:12,810:INFO:                 ray: Not installed
2024-05-09 23:22:12,810:INFO:            hyperopt: Not installed
2024-05-09 23:22:12,810:INFO:              optuna: Not installed
2024-05-09 23:22:12,810:INFO:               skopt: Not installed
2024-05-09 23:22:12,810:INFO:              mlflow: Not installed
2024-05-09 23:22:12,810:INFO:              gradio: Not installed
2024-05-09 23:22:12,810:INFO:             fastapi: Not installed
2024-05-09 23:22:12,810:INFO:             uvicorn: Not installed
2024-05-09 23:22:12,810:INFO:              m2cgen: Not installed
2024-05-09 23:22:12,810:INFO:           evidently: Not installed
2024-05-09 23:22:12,810:INFO:               fugue: Not installed
2024-05-09 23:22:12,810:INFO:           streamlit: Not installed
2024-05-09 23:22:12,810:INFO:             prophet: Not installed
2024-05-09 23:22:12,810:INFO:None
2024-05-09 23:22:12,810:INFO:Set up data.
2024-05-09 23:22:12,820:INFO:Set up folding strategy.
2024-05-09 23:22:12,820:INFO:Set up train/test split.
2024-05-09 23:22:12,820:INFO:Set up index.
2024-05-09 23:22:12,820:INFO:Assigning column types.
2024-05-09 23:22:12,830:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:22:12,830:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,830:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,840:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,900:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:12,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:12,950:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,950:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:22:12,960:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,010:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,060:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,060:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:22:13,070:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,070:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,180:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,180:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,290:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,290:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:22:13,300:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,521:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:22:13,591:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,711:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,761:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:22:13,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:22:13,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:13,981:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:22:14,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,231:INFO:Preparing preprocessing pipeline...
2024-05-09 23:22:14,231:INFO:Set up simple imputation.
2024-05-09 23:22:14,231:INFO:Set up column name cleaning.
2024-05-09 23:22:14,261:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:22:14,271:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:22:14,271:INFO:Creating final display dataframe.
2024-05-09 23:22:14,331:INFO:Setup _display_container:                     Description             Value
0                    Session id               521
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              22d7
2024-05-09 23:22:14,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:22:14,563:INFO:setup() successfully completed in 1.85s...............
2024-05-09 23:22:25,120:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:51: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-09 23:22:25,160:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-09 23:25:10,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:25:10,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:25:10,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:25:10,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:25:10,822:INFO:PyCaret RegressionExperiment
2024-05-09 23:25:10,822:INFO:Logging name: reg-default-name
2024-05-09 23:25:10,822:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:25:10,822:INFO:version 3.3.2
2024-05-09 23:25:10,822:INFO:Initializing setup()
2024-05-09 23:25:10,822:INFO:self.USI: 9000
2024-05-09 23:25:10,822:INFO:self._variable_keys: {'memory', 'data', 'X', 'n_jobs_param', 'fold_generator', 'pipeline', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'y_test', 'transform_target_param', 'exp_name_log', '_available_plots', 'y', 'seed', 'exp_id', '_ml_usecase', 'fold_groups_param', 'X_train', 'USI', 'logging_param', 'fold_shuffle_param', 'y_train', 'X_test', 'html_param', 'idx', 'log_plots_param'}
2024-05-09 23:25:10,822:INFO:Checking environment
2024-05-09 23:25:10,822:INFO:python_version: 3.11.9
2024-05-09 23:25:10,822:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:25:10,822:INFO:machine: AMD64
2024-05-09 23:25:10,832:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:25:10,836:INFO:Memory: svmem(total=7947747328, available=246644736, percent=96.9, used=7701102592, free=246644736)
2024-05-09 23:25:10,836:INFO:Physical Core: 6
2024-05-09 23:25:10,836:INFO:Logical Core: 6
2024-05-09 23:25:10,836:INFO:Checking libraries
2024-05-09 23:25:10,836:INFO:System:
2024-05-09 23:25:10,836:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:25:10,836:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:25:10,836:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:25:10,836:INFO:PyCaret required dependencies:
2024-05-09 23:25:10,868:INFO:                 pip: 24.0
2024-05-09 23:25:10,868:INFO:          setuptools: 65.5.0
2024-05-09 23:25:10,868:INFO:             pycaret: 3.3.2
2024-05-09 23:25:10,868:INFO:             IPython: 8.24.0
2024-05-09 23:25:10,868:INFO:          ipywidgets: 8.1.2
2024-05-09 23:25:10,868:INFO:                tqdm: 4.66.4
2024-05-09 23:25:10,868:INFO:               numpy: 1.26.4
2024-05-09 23:25:10,868:INFO:              pandas: 2.1.4
2024-05-09 23:25:10,868:INFO:              jinja2: 3.1.4
2024-05-09 23:25:10,868:INFO:               scipy: 1.11.4
2024-05-09 23:25:10,868:INFO:              joblib: 1.3.2
2024-05-09 23:25:10,868:INFO:             sklearn: 1.4.2
2024-05-09 23:25:10,868:INFO:                pyod: 1.1.3
2024-05-09 23:25:10,868:INFO:            imblearn: 0.12.2
2024-05-09 23:25:10,868:INFO:   category_encoders: 2.6.3
2024-05-09 23:25:10,868:INFO:            lightgbm: 4.3.0
2024-05-09 23:25:10,868:INFO:               numba: 0.59.1
2024-05-09 23:25:10,869:INFO:            requests: 2.31.0
2024-05-09 23:25:10,869:INFO:          matplotlib: 3.7.5
2024-05-09 23:25:10,869:INFO:          scikitplot: 0.3.7
2024-05-09 23:25:10,869:INFO:         yellowbrick: 1.5
2024-05-09 23:25:10,869:INFO:              plotly: 5.22.0
2024-05-09 23:25:10,869:INFO:    plotly-resampler: Not installed
2024-05-09 23:25:10,869:INFO:             kaleido: 0.2.1
2024-05-09 23:25:10,869:INFO:           schemdraw: 0.15
2024-05-09 23:25:10,869:INFO:         statsmodels: 0.14.2
2024-05-09 23:25:10,869:INFO:              sktime: 0.26.0
2024-05-09 23:25:10,869:INFO:               tbats: 1.1.3
2024-05-09 23:25:10,869:INFO:            pmdarima: 2.0.4
2024-05-09 23:25:10,869:INFO:              psutil: 5.9.8
2024-05-09 23:25:10,869:INFO:          markupsafe: 2.1.5
2024-05-09 23:25:10,869:INFO:             pickle5: Not installed
2024-05-09 23:25:10,869:INFO:         cloudpickle: 3.0.0
2024-05-09 23:25:10,869:INFO:         deprecation: 2.1.0
2024-05-09 23:25:10,869:INFO:              xxhash: 3.4.1
2024-05-09 23:25:10,869:INFO:           wurlitzer: Not installed
2024-05-09 23:25:10,869:INFO:PyCaret optional dependencies:
2024-05-09 23:25:10,878:INFO:                shap: Not installed
2024-05-09 23:25:10,878:INFO:           interpret: Not installed
2024-05-09 23:25:10,878:INFO:                umap: Not installed
2024-05-09 23:25:10,878:INFO:     ydata_profiling: Not installed
2024-05-09 23:25:10,878:INFO:  explainerdashboard: Not installed
2024-05-09 23:25:10,878:INFO:             autoviz: Not installed
2024-05-09 23:25:10,878:INFO:           fairlearn: Not installed
2024-05-09 23:25:10,878:INFO:          deepchecks: Not installed
2024-05-09 23:25:10,878:INFO:             xgboost: Not installed
2024-05-09 23:25:10,878:INFO:            catboost: Not installed
2024-05-09 23:25:10,878:INFO:              kmodes: Not installed
2024-05-09 23:25:10,878:INFO:             mlxtend: Not installed
2024-05-09 23:25:10,878:INFO:       statsforecast: Not installed
2024-05-09 23:25:10,879:INFO:        tune_sklearn: Not installed
2024-05-09 23:25:10,879:INFO:                 ray: Not installed
2024-05-09 23:25:10,879:INFO:            hyperopt: Not installed
2024-05-09 23:25:10,879:INFO:              optuna: Not installed
2024-05-09 23:25:10,879:INFO:               skopt: Not installed
2024-05-09 23:25:10,879:INFO:              mlflow: Not installed
2024-05-09 23:25:10,879:INFO:              gradio: Not installed
2024-05-09 23:25:10,879:INFO:             fastapi: Not installed
2024-05-09 23:25:10,879:INFO:             uvicorn: Not installed
2024-05-09 23:25:10,879:INFO:              m2cgen: Not installed
2024-05-09 23:25:10,879:INFO:           evidently: Not installed
2024-05-09 23:25:10,879:INFO:               fugue: Not installed
2024-05-09 23:25:10,879:INFO:           streamlit: Not installed
2024-05-09 23:25:10,879:INFO:             prophet: Not installed
2024-05-09 23:25:10,879:INFO:None
2024-05-09 23:25:10,879:INFO:Set up data.
2024-05-09 23:25:10,891:INFO:Set up folding strategy.
2024-05-09 23:25:10,891:INFO:Set up train/test split.
2024-05-09 23:25:10,897:INFO:Set up index.
2024-05-09 23:25:10,899:INFO:Assigning column types.
2024-05-09 23:25:10,903:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:25:10,904:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:25:10,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:25:10,914:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:25:10,974:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,022:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,023:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,028:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,033:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,136:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:25:11,140:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,145:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,203:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,248:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,254:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,258:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,318:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,363:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,366:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:25:11,377:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,490:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,548:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,593:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,594:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:25:11,660:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,821:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:25:11,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:11,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:11,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:25:12,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,050:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:25:12,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,278:INFO:Preparing preprocessing pipeline...
2024-05-09 23:25:12,278:INFO:Set up simple imputation.
2024-05-09 23:25:12,278:INFO:Set up column name cleaning.
2024-05-09 23:25:12,306:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:25:12,310:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:25:12,310:INFO:Creating final display dataframe.
2024-05-09 23:25:12,372:INFO:Setup _display_container:                     Description             Value
0                    Session id               484
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              9000
2024-05-09 23:25:12,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:25:12,603:INFO:setup() successfully completed in 1.79s...............
2024-05-09 23:25:22,436:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:51: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-09 23:25:22,476:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-09 23:27:13,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:27:13,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:27:13,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:27:13,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:27:14,117:INFO:PyCaret RegressionExperiment
2024-05-09 23:27:14,117:INFO:Logging name: reg-default-name
2024-05-09 23:27:14,117:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:27:14,117:INFO:version 3.3.2
2024-05-09 23:27:14,117:INFO:Initializing setup()
2024-05-09 23:27:14,117:INFO:self.USI: 2169
2024-05-09 23:27:14,117:INFO:self._variable_keys: {'_available_plots', 'log_plots_param', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'pipeline', 'y_train', 'X_train', 'html_param', 'seed', 'memory', 'USI', 'exp_id', 'X', 'fold_groups_param', 'target_param', 'n_jobs_param', 'gpu_param', 'fold_generator', 'y_test', 'logging_param', 'gpu_n_jobs_param', 'X_test', 'data', 'idx', 'transform_target_param', 'y'}
2024-05-09 23:27:14,117:INFO:Checking environment
2024-05-09 23:27:14,117:INFO:python_version: 3.11.9
2024-05-09 23:27:14,117:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:27:14,117:INFO:machine: AMD64
2024-05-09 23:27:14,127:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:27:14,127:INFO:Memory: svmem(total=7947747328, available=1191358464, percent=85.0, used=6756388864, free=1191358464)
2024-05-09 23:27:14,127:INFO:Physical Core: 6
2024-05-09 23:27:14,127:INFO:Logical Core: 6
2024-05-09 23:27:14,127:INFO:Checking libraries
2024-05-09 23:27:14,127:INFO:System:
2024-05-09 23:27:14,127:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:27:14,127:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:27:14,127:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:27:14,127:INFO:PyCaret required dependencies:
2024-05-09 23:27:14,157:INFO:                 pip: 24.0
2024-05-09 23:27:14,157:INFO:          setuptools: 65.5.0
2024-05-09 23:27:14,157:INFO:             pycaret: 3.3.2
2024-05-09 23:27:14,157:INFO:             IPython: 8.24.0
2024-05-09 23:27:14,157:INFO:          ipywidgets: 8.1.2
2024-05-09 23:27:14,157:INFO:                tqdm: 4.66.4
2024-05-09 23:27:14,157:INFO:               numpy: 1.26.4
2024-05-09 23:27:14,157:INFO:              pandas: 2.1.4
2024-05-09 23:27:14,157:INFO:              jinja2: 3.1.4
2024-05-09 23:27:14,157:INFO:               scipy: 1.11.4
2024-05-09 23:27:14,157:INFO:              joblib: 1.3.2
2024-05-09 23:27:14,157:INFO:             sklearn: 1.4.2
2024-05-09 23:27:14,157:INFO:                pyod: 1.1.3
2024-05-09 23:27:14,157:INFO:            imblearn: 0.12.2
2024-05-09 23:27:14,157:INFO:   category_encoders: 2.6.3
2024-05-09 23:27:14,157:INFO:            lightgbm: 4.3.0
2024-05-09 23:27:14,157:INFO:               numba: 0.59.1
2024-05-09 23:27:14,157:INFO:            requests: 2.31.0
2024-05-09 23:27:14,157:INFO:          matplotlib: 3.7.5
2024-05-09 23:27:14,157:INFO:          scikitplot: 0.3.7
2024-05-09 23:27:14,157:INFO:         yellowbrick: 1.5
2024-05-09 23:27:14,157:INFO:              plotly: 5.22.0
2024-05-09 23:27:14,157:INFO:    plotly-resampler: Not installed
2024-05-09 23:27:14,157:INFO:             kaleido: 0.2.1
2024-05-09 23:27:14,157:INFO:           schemdraw: 0.15
2024-05-09 23:27:14,157:INFO:         statsmodels: 0.14.2
2024-05-09 23:27:14,157:INFO:              sktime: 0.26.0
2024-05-09 23:27:14,157:INFO:               tbats: 1.1.3
2024-05-09 23:27:14,157:INFO:            pmdarima: 2.0.4
2024-05-09 23:27:14,157:INFO:              psutil: 5.9.8
2024-05-09 23:27:14,157:INFO:          markupsafe: 2.1.5
2024-05-09 23:27:14,157:INFO:             pickle5: Not installed
2024-05-09 23:27:14,157:INFO:         cloudpickle: 3.0.0
2024-05-09 23:27:14,157:INFO:         deprecation: 2.1.0
2024-05-09 23:27:14,157:INFO:              xxhash: 3.4.1
2024-05-09 23:27:14,157:INFO:           wurlitzer: Not installed
2024-05-09 23:27:14,157:INFO:PyCaret optional dependencies:
2024-05-09 23:27:14,167:INFO:                shap: Not installed
2024-05-09 23:27:14,167:INFO:           interpret: Not installed
2024-05-09 23:27:14,167:INFO:                umap: Not installed
2024-05-09 23:27:14,167:INFO:     ydata_profiling: Not installed
2024-05-09 23:27:14,167:INFO:  explainerdashboard: Not installed
2024-05-09 23:27:14,167:INFO:             autoviz: Not installed
2024-05-09 23:27:14,167:INFO:           fairlearn: Not installed
2024-05-09 23:27:14,167:INFO:          deepchecks: Not installed
2024-05-09 23:27:14,167:INFO:             xgboost: Not installed
2024-05-09 23:27:14,167:INFO:            catboost: Not installed
2024-05-09 23:27:14,167:INFO:              kmodes: Not installed
2024-05-09 23:27:14,167:INFO:             mlxtend: Not installed
2024-05-09 23:27:14,167:INFO:       statsforecast: Not installed
2024-05-09 23:27:14,167:INFO:        tune_sklearn: Not installed
2024-05-09 23:27:14,167:INFO:                 ray: Not installed
2024-05-09 23:27:14,167:INFO:            hyperopt: Not installed
2024-05-09 23:27:14,167:INFO:              optuna: Not installed
2024-05-09 23:27:14,167:INFO:               skopt: Not installed
2024-05-09 23:27:14,167:INFO:              mlflow: Not installed
2024-05-09 23:27:14,167:INFO:              gradio: Not installed
2024-05-09 23:27:14,167:INFO:             fastapi: Not installed
2024-05-09 23:27:14,167:INFO:             uvicorn: Not installed
2024-05-09 23:27:14,167:INFO:              m2cgen: Not installed
2024-05-09 23:27:14,167:INFO:           evidently: Not installed
2024-05-09 23:27:14,167:INFO:               fugue: Not installed
2024-05-09 23:27:14,167:INFO:           streamlit: Not installed
2024-05-09 23:27:14,167:INFO:             prophet: Not installed
2024-05-09 23:27:14,167:INFO:None
2024-05-09 23:27:14,167:INFO:Set up data.
2024-05-09 23:27:14,177:INFO:Set up folding strategy.
2024-05-09 23:27:14,177:INFO:Set up train/test split.
2024-05-09 23:27:14,177:INFO:Set up index.
2024-05-09 23:27:14,177:INFO:Assigning column types.
2024-05-09 23:27:14,177:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:27:14,177:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,187:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,306:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,307:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,307:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,307:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,374:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,422:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,424:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:27:14,429:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,434:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,543:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,549:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,606:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,656:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,656:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:27:14,666:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,723:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,844:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:14,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:14,889:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:27:14,956:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:15,006:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:15,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,073:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:15,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:27:15,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,123:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:27:15,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:15,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,308:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:27:15,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,353:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:27:15,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,583:INFO:Preparing preprocessing pipeline...
2024-05-09 23:27:15,583:INFO:Set up simple imputation.
2024-05-09 23:27:15,583:INFO:Set up column name cleaning.
2024-05-09 23:27:15,603:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:27:15,603:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:27:15,603:INFO:Creating final display dataframe.
2024-05-09 23:27:15,664:INFO:Setup _display_container:                     Description             Value
0                    Session id              2206
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              2169
2024-05-09 23:27:15,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:27:15,894:INFO:setup() successfully completed in 1.78s...............
2024-05-09 23:27:15,904:INFO:Initializing create_model()
2024-05-09 23:27:15,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:27:15,904:INFO:Checking exceptions
2024-05-09 23:27:15,904:INFO:Importing libraries
2024-05-09 23:27:15,904:INFO:Copying training dataset
2024-05-09 23:27:15,914:INFO:Defining folds
2024-05-09 23:27:15,914:INFO:Declaring metric variables
2024-05-09 23:27:15,914:INFO:Importing untrained model
2024-05-09 23:27:15,914:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:27:15,914:INFO:Starting cross validation
2024-05-09 23:27:15,924:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:27:20,026:INFO:Calculating mean and std
2024-05-09 23:27:20,026:INFO:Creating metrics dataframe
2024-05-09 23:27:20,026:INFO:Finalizing model
2024-05-09 23:27:20,119:INFO:Uploading results into container
2024-05-09 23:27:20,119:INFO:Uploading model into container now
2024-05-09 23:27:20,127:INFO:_master_model_container: 1
2024-05-09 23:27:20,127:INFO:_display_container: 2
2024-05-09 23:27:20,127:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:20,127:INFO:create_model() successfully completed......................................
2024-05-09 23:27:20,217:INFO:Initializing tune_model()
2024-05-09 23:27:20,217:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2206), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:27:20,217:INFO:Checking exceptions
2024-05-09 23:27:20,217:INFO:Copying training dataset
2024-05-09 23:27:20,227:INFO:Checking base model
2024-05-09 23:27:20,227:INFO:Base model : Extra Trees Regressor
2024-05-09 23:27:20,227:INFO:Declaring metric variables
2024-05-09 23:27:20,227:INFO:Defining Hyperparameters
2024-05-09 23:27:20,317:INFO:Tuning with n_jobs=-1
2024-05-09 23:27:20,317:INFO:Initializing RandomizedSearchCV
2024-05-09 23:27:31,601:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2024-05-09 23:27:31,601:INFO:Hyperparameter search completed
2024-05-09 23:27:31,601:INFO:SubProcess create_model() called ==================================
2024-05-09 23:27:31,601:INFO:Initializing create_model()
2024-05-09 23:27:31,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D1EC19CC50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'absolute_error', 'bootstrap': False})
2024-05-09 23:27:31,601:INFO:Checking exceptions
2024-05-09 23:27:31,601:INFO:Importing libraries
2024-05-09 23:27:31,601:INFO:Copying training dataset
2024-05-09 23:27:31,601:INFO:Defining folds
2024-05-09 23:27:31,601:INFO:Declaring metric variables
2024-05-09 23:27:31,601:INFO:Importing untrained model
2024-05-09 23:27:31,601:INFO:Declaring custom model
2024-05-09 23:27:31,601:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:27:31,601:INFO:Starting cross validation
2024-05-09 23:27:31,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:27:34,355:INFO:Calculating mean and std
2024-05-09 23:27:34,355:INFO:Creating metrics dataframe
2024-05-09 23:27:34,355:INFO:Finalizing model
2024-05-09 23:27:34,706:INFO:Uploading results into container
2024-05-09 23:27:34,706:INFO:Uploading model into container now
2024-05-09 23:27:34,706:INFO:_master_model_container: 2
2024-05-09 23:27:34,706:INFO:_display_container: 3
2024-05-09 23:27:34,706:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=10,
                    min_impurity_decrease=0.1, min_samples_leaf=3,
                    min_samples_split=5, n_estimators=160, n_jobs=-1,
                    random_state=2206)
2024-05-09 23:27:34,706:INFO:create_model() successfully completed......................................
2024-05-09 23:27:34,796:INFO:SubProcess create_model() end ==================================
2024-05-09 23:27:34,796:INFO:choose_better activated
2024-05-09 23:27:34,796:INFO:SubProcess create_model() called ==================================
2024-05-09 23:27:34,796:INFO:Initializing create_model()
2024-05-09 23:27:34,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:27:34,796:INFO:Checking exceptions
2024-05-09 23:27:34,796:INFO:Importing libraries
2024-05-09 23:27:34,796:INFO:Copying training dataset
2024-05-09 23:27:34,796:INFO:Defining folds
2024-05-09 23:27:34,796:INFO:Declaring metric variables
2024-05-09 23:27:34,796:INFO:Importing untrained model
2024-05-09 23:27:34,796:INFO:Declaring custom model
2024-05-09 23:27:34,796:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:27:34,796:INFO:Starting cross validation
2024-05-09 23:27:34,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:27:35,284:INFO:Calculating mean and std
2024-05-09 23:27:35,284:INFO:Creating metrics dataframe
2024-05-09 23:27:35,284:INFO:Finalizing model
2024-05-09 23:27:35,375:INFO:Uploading results into container
2024-05-09 23:27:35,375:INFO:Uploading model into container now
2024-05-09 23:27:35,375:INFO:_master_model_container: 3
2024-05-09 23:27:35,375:INFO:_display_container: 4
2024-05-09 23:27:35,375:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:35,375:INFO:create_model() successfully completed......................................
2024-05-09 23:27:35,464:INFO:SubProcess create_model() end ==================================
2024-05-09 23:27:35,464:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2206) result for R2 is 0.7612
2024-05-09 23:27:35,464:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=10,
                    min_impurity_decrease=0.1, min_samples_leaf=3,
                    min_samples_split=5, n_estimators=160, n_jobs=-1,
                    random_state=2206) result for R2 is 0.7253
2024-05-09 23:27:35,464:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2206) is best model
2024-05-09 23:27:35,464:INFO:choose_better completed
2024-05-09 23:27:35,464:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:27:35,474:INFO:_master_model_container: 3
2024-05-09 23:27:35,474:INFO:_display_container: 3
2024-05-09 23:27:35,474:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:35,474:INFO:tune_model() successfully completed......................................
2024-05-09 23:27:35,554:INFO:Initializing finalize_model()
2024-05-09 23:27:35,554:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2206), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:27:35,554:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:35,564:INFO:Initializing create_model()
2024-05-09 23:27:35,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2206), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:27:35,564:INFO:Checking exceptions
2024-05-09 23:27:35,564:INFO:Importing libraries
2024-05-09 23:27:35,564:INFO:Copying training dataset
2024-05-09 23:27:35,564:INFO:Defining folds
2024-05-09 23:27:35,564:INFO:Declaring metric variables
2024-05-09 23:27:35,564:INFO:Importing untrained model
2024-05-09 23:27:35,564:INFO:Declaring custom model
2024-05-09 23:27:35,564:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:27:35,564:INFO:Cross validation set to False
2024-05-09 23:27:35,564:INFO:Fitting Model
2024-05-09 23:27:35,665:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2206))])
2024-05-09 23:27:35,665:INFO:create_model() successfully completed......................................
2024-05-09 23:27:35,735:INFO:_master_model_container: 3
2024-05-09 23:27:35,735:INFO:_display_container: 3
2024-05-09 23:27:35,745:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2206))])
2024-05-09 23:27:35,745:INFO:finalize_model() successfully completed......................................
2024-05-09 23:27:35,815:INFO:Initializing create_model()
2024-05-09 23:27:35,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:27:35,815:INFO:Checking exceptions
2024-05-09 23:27:35,825:INFO:Importing libraries
2024-05-09 23:27:35,825:INFO:Copying training dataset
2024-05-09 23:27:35,825:INFO:Defining folds
2024-05-09 23:27:35,825:INFO:Declaring metric variables
2024-05-09 23:27:35,825:INFO:Importing untrained model
2024-05-09 23:27:35,825:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:27:35,825:INFO:Starting cross validation
2024-05-09 23:27:35,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:27:36,475:INFO:Calculating mean and std
2024-05-09 23:27:36,475:INFO:Creating metrics dataframe
2024-05-09 23:27:36,475:INFO:Finalizing model
2024-05-09 23:27:36,612:INFO:Uploading results into container
2024-05-09 23:27:36,612:INFO:Uploading model into container now
2024-05-09 23:27:36,618:INFO:_master_model_container: 4
2024-05-09 23:27:36,618:INFO:_display_container: 4
2024-05-09 23:27:36,618:INFO:RandomForestRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:36,618:INFO:create_model() successfully completed......................................
2024-05-09 23:27:36,708:INFO:Initializing tune_model()
2024-05-09 23:27:36,708:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2206), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:27:36,708:INFO:Checking exceptions
2024-05-09 23:27:36,708:INFO:Copying training dataset
2024-05-09 23:27:36,708:INFO:Checking base model
2024-05-09 23:27:36,708:INFO:Base model : Random Forest Regressor
2024-05-09 23:27:36,708:INFO:Declaring metric variables
2024-05-09 23:27:36,708:INFO:Defining Hyperparameters
2024-05-09 23:27:36,788:INFO:Tuning with n_jobs=-1
2024-05-09 23:27:36,788:INFO:Initializing RandomizedSearchCV
2024-05-09 23:27:52,703:INFO:best_params: {'actual_estimator__n_estimators': 270, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2024-05-09 23:27:52,703:INFO:Hyperparameter search completed
2024-05-09 23:27:52,703:INFO:SubProcess create_model() called ==================================
2024-05-09 23:27:52,703:INFO:Initializing create_model()
2024-05-09 23:27:52,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D1EE843BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 270, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.5, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'absolute_error', 'bootstrap': False})
2024-05-09 23:27:52,703:INFO:Checking exceptions
2024-05-09 23:27:52,703:INFO:Importing libraries
2024-05-09 23:27:52,703:INFO:Copying training dataset
2024-05-09 23:27:52,703:INFO:Defining folds
2024-05-09 23:27:52,703:INFO:Declaring metric variables
2024-05-09 23:27:52,703:INFO:Importing untrained model
2024-05-09 23:27:52,703:INFO:Declaring custom model
2024-05-09 23:27:52,703:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:27:52,703:INFO:Starting cross validation
2024-05-09 23:27:52,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:27:56,267:INFO:Calculating mean and std
2024-05-09 23:27:56,267:INFO:Creating metrics dataframe
2024-05-09 23:27:56,267:INFO:Finalizing model
2024-05-09 23:27:56,806:INFO:Uploading results into container
2024-05-09 23:27:56,806:INFO:Uploading model into container now
2024-05-09 23:27:56,806:INFO:_master_model_container: 5
2024-05-09 23:27:56,806:INFO:_display_container: 5
2024-05-09 23:27:56,806:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=9,
                      max_features='sqrt', min_impurity_decrease=0.5,
                      min_samples_leaf=4, min_samples_split=7, n_estimators=270,
                      n_jobs=-1, random_state=2206)
2024-05-09 23:27:56,806:INFO:create_model() successfully completed......................................
2024-05-09 23:27:56,886:INFO:SubProcess create_model() end ==================================
2024-05-09 23:27:56,886:INFO:choose_better activated
2024-05-09 23:27:56,886:INFO:SubProcess create_model() called ==================================
2024-05-09 23:27:56,886:INFO:Initializing create_model()
2024-05-09 23:27:56,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2206), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:27:56,886:INFO:Checking exceptions
2024-05-09 23:27:56,886:INFO:Importing libraries
2024-05-09 23:27:56,886:INFO:Copying training dataset
2024-05-09 23:27:56,896:INFO:Defining folds
2024-05-09 23:27:56,896:INFO:Declaring metric variables
2024-05-09 23:27:56,896:INFO:Importing untrained model
2024-05-09 23:27:56,896:INFO:Declaring custom model
2024-05-09 23:27:56,896:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:27:56,896:INFO:Starting cross validation
2024-05-09 23:27:56,896:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:27:57,529:INFO:Calculating mean and std
2024-05-09 23:27:57,529:INFO:Creating metrics dataframe
2024-05-09 23:27:57,530:INFO:Finalizing model
2024-05-09 23:27:57,658:INFO:Uploading results into container
2024-05-09 23:27:57,658:INFO:Uploading model into container now
2024-05-09 23:27:57,658:INFO:_master_model_container: 6
2024-05-09 23:27:57,658:INFO:_display_container: 6
2024-05-09 23:27:57,658:INFO:RandomForestRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:57,658:INFO:create_model() successfully completed......................................
2024-05-09 23:27:57,732:INFO:SubProcess create_model() end ==================================
2024-05-09 23:27:57,732:INFO:RandomForestRegressor(n_jobs=-1, random_state=2206) result for R2 is 0.7602
2024-05-09 23:27:57,732:INFO:RandomForestRegressor(bootstrap=False, criterion='absolute_error', max_depth=9,
                      max_features='sqrt', min_impurity_decrease=0.5,
                      min_samples_leaf=4, min_samples_split=7, n_estimators=270,
                      n_jobs=-1, random_state=2206) result for R2 is 0.7452
2024-05-09 23:27:57,732:INFO:RandomForestRegressor(n_jobs=-1, random_state=2206) is best model
2024-05-09 23:27:57,732:INFO:choose_better completed
2024-05-09 23:27:57,732:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:27:57,742:INFO:_master_model_container: 6
2024-05-09 23:27:57,742:INFO:_display_container: 5
2024-05-09 23:27:57,742:INFO:RandomForestRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:57,742:INFO:tune_model() successfully completed......................................
2024-05-09 23:27:57,813:INFO:Initializing finalize_model()
2024-05-09 23:27:57,813:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2206), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:27:57,813:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=2206)
2024-05-09 23:27:57,823:INFO:Initializing create_model()
2024-05-09 23:27:57,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2206), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:27:57,823:INFO:Checking exceptions
2024-05-09 23:27:57,823:INFO:Importing libraries
2024-05-09 23:27:57,823:INFO:Copying training dataset
2024-05-09 23:27:57,823:INFO:Defining folds
2024-05-09 23:27:57,823:INFO:Declaring metric variables
2024-05-09 23:27:57,823:INFO:Importing untrained model
2024-05-09 23:27:57,823:INFO:Declaring custom model
2024-05-09 23:27:57,823:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:27:57,823:INFO:Cross validation set to False
2024-05-09 23:27:57,823:INFO:Fitting Model
2024-05-09 23:27:57,955:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2206))])
2024-05-09 23:27:57,955:INFO:create_model() successfully completed......................................
2024-05-09 23:27:58,024:INFO:_master_model_container: 6
2024-05-09 23:27:58,024:INFO:_display_container: 5
2024-05-09 23:27:58,024:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2206))])
2024-05-09 23:27:58,024:INFO:finalize_model() successfully completed......................................
2024-05-09 23:28:21,221:INFO:Initializing predict_model()
2024-05-09 23:28:21,221:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2206))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D1EEAB0180>)
2024-05-09 23:28:21,221:INFO:Checking exceptions
2024-05-09 23:28:21,221:INFO:Preloading libraries
2024-05-09 23:28:21,221:INFO:Set up data.
2024-05-09 23:28:21,231:INFO:Set up index.
2024-05-09 23:28:21,411:INFO:Initializing predict_model()
2024-05-09 23:28:21,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D1DA8DA5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2206))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D1EE094AE0>)
2024-05-09 23:28:21,411:INFO:Checking exceptions
2024-05-09 23:28:21,411:INFO:Preloading libraries
2024-05-09 23:28:21,411:INFO:Set up data.
2024-05-09 23:28:21,421:INFO:Set up index.
2024-05-09 23:29:23,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:29:23,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:29:23,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:29:23,563:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:29:23,723:INFO:PyCaret RegressionExperiment
2024-05-09 23:29:23,723:INFO:Logging name: reg-default-name
2024-05-09 23:29:23,723:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:29:23,723:INFO:version 3.3.2
2024-05-09 23:29:23,723:INFO:Initializing setup()
2024-05-09 23:29:23,723:INFO:self.USI: 2fa4
2024-05-09 23:29:23,723:INFO:self._variable_keys: {'exp_id', 'target_param', 'exp_name_log', 'X_train', 'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_param', 'n_jobs_param', '_available_plots', 'fold_generator', 'USI', 'X', 'pipeline', 'transform_target_param', 'y', 'html_param', 'y_test', 'data', 'log_plots_param', 'memory', 'seed', 'fold_groups_param', 'y_train', '_ml_usecase', 'idx', 'gpu_n_jobs_param'}
2024-05-09 23:29:23,723:INFO:Checking environment
2024-05-09 23:29:23,723:INFO:python_version: 3.11.9
2024-05-09 23:29:23,723:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:29:23,723:INFO:machine: AMD64
2024-05-09 23:29:23,733:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:29:23,733:INFO:Memory: svmem(total=7947747328, available=2050777088, percent=74.2, used=5896970240, free=2050777088)
2024-05-09 23:29:23,733:INFO:Physical Core: 6
2024-05-09 23:29:23,733:INFO:Logical Core: 6
2024-05-09 23:29:23,733:INFO:Checking libraries
2024-05-09 23:29:23,733:INFO:System:
2024-05-09 23:29:23,733:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:29:23,733:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:29:23,733:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:29:23,733:INFO:PyCaret required dependencies:
2024-05-09 23:29:23,763:INFO:                 pip: 24.0
2024-05-09 23:29:23,763:INFO:          setuptools: 65.5.0
2024-05-09 23:29:23,763:INFO:             pycaret: 3.3.2
2024-05-09 23:29:23,763:INFO:             IPython: 8.24.0
2024-05-09 23:29:23,763:INFO:          ipywidgets: 8.1.2
2024-05-09 23:29:23,763:INFO:                tqdm: 4.66.4
2024-05-09 23:29:23,763:INFO:               numpy: 1.26.4
2024-05-09 23:29:23,763:INFO:              pandas: 2.1.4
2024-05-09 23:29:23,763:INFO:              jinja2: 3.1.4
2024-05-09 23:29:23,763:INFO:               scipy: 1.11.4
2024-05-09 23:29:23,763:INFO:              joblib: 1.3.2
2024-05-09 23:29:23,763:INFO:             sklearn: 1.4.2
2024-05-09 23:29:23,763:INFO:                pyod: 1.1.3
2024-05-09 23:29:23,763:INFO:            imblearn: 0.12.2
2024-05-09 23:29:23,763:INFO:   category_encoders: 2.6.3
2024-05-09 23:29:23,763:INFO:            lightgbm: 4.3.0
2024-05-09 23:29:23,763:INFO:               numba: 0.59.1
2024-05-09 23:29:23,763:INFO:            requests: 2.31.0
2024-05-09 23:29:23,763:INFO:          matplotlib: 3.7.5
2024-05-09 23:29:23,763:INFO:          scikitplot: 0.3.7
2024-05-09 23:29:23,763:INFO:         yellowbrick: 1.5
2024-05-09 23:29:23,763:INFO:              plotly: 5.22.0
2024-05-09 23:29:23,763:INFO:    plotly-resampler: Not installed
2024-05-09 23:29:23,763:INFO:             kaleido: 0.2.1
2024-05-09 23:29:23,763:INFO:           schemdraw: 0.15
2024-05-09 23:29:23,763:INFO:         statsmodels: 0.14.2
2024-05-09 23:29:23,763:INFO:              sktime: 0.26.0
2024-05-09 23:29:23,763:INFO:               tbats: 1.1.3
2024-05-09 23:29:23,763:INFO:            pmdarima: 2.0.4
2024-05-09 23:29:23,763:INFO:              psutil: 5.9.8
2024-05-09 23:29:23,763:INFO:          markupsafe: 2.1.5
2024-05-09 23:29:23,763:INFO:             pickle5: Not installed
2024-05-09 23:29:23,763:INFO:         cloudpickle: 3.0.0
2024-05-09 23:29:23,763:INFO:         deprecation: 2.1.0
2024-05-09 23:29:23,763:INFO:              xxhash: 3.4.1
2024-05-09 23:29:23,763:INFO:           wurlitzer: Not installed
2024-05-09 23:29:23,763:INFO:PyCaret optional dependencies:
2024-05-09 23:29:23,773:INFO:                shap: Not installed
2024-05-09 23:29:23,773:INFO:           interpret: Not installed
2024-05-09 23:29:23,773:INFO:                umap: Not installed
2024-05-09 23:29:23,773:INFO:     ydata_profiling: Not installed
2024-05-09 23:29:23,773:INFO:  explainerdashboard: Not installed
2024-05-09 23:29:23,773:INFO:             autoviz: Not installed
2024-05-09 23:29:23,773:INFO:           fairlearn: Not installed
2024-05-09 23:29:23,773:INFO:          deepchecks: Not installed
2024-05-09 23:29:23,773:INFO:             xgboost: Not installed
2024-05-09 23:29:23,773:INFO:            catboost: Not installed
2024-05-09 23:29:23,773:INFO:              kmodes: Not installed
2024-05-09 23:29:23,773:INFO:             mlxtend: Not installed
2024-05-09 23:29:23,773:INFO:       statsforecast: Not installed
2024-05-09 23:29:23,773:INFO:        tune_sklearn: Not installed
2024-05-09 23:29:23,773:INFO:                 ray: Not installed
2024-05-09 23:29:23,773:INFO:            hyperopt: Not installed
2024-05-09 23:29:23,773:INFO:              optuna: Not installed
2024-05-09 23:29:23,773:INFO:               skopt: Not installed
2024-05-09 23:29:23,773:INFO:              mlflow: Not installed
2024-05-09 23:29:23,773:INFO:              gradio: Not installed
2024-05-09 23:29:23,773:INFO:             fastapi: Not installed
2024-05-09 23:29:23,773:INFO:             uvicorn: Not installed
2024-05-09 23:29:23,773:INFO:              m2cgen: Not installed
2024-05-09 23:29:23,773:INFO:           evidently: Not installed
2024-05-09 23:29:23,773:INFO:               fugue: Not installed
2024-05-09 23:29:23,773:INFO:           streamlit: Not installed
2024-05-09 23:29:23,773:INFO:             prophet: Not installed
2024-05-09 23:29:23,773:INFO:None
2024-05-09 23:29:23,773:INFO:Set up data.
2024-05-09 23:29:23,773:INFO:Set up folding strategy.
2024-05-09 23:29:23,773:INFO:Set up train/test split.
2024-05-09 23:29:23,783:INFO:Set up index.
2024-05-09 23:29:23,783:INFO:Assigning column types.
2024-05-09 23:29:23,783:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:29:23,783:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,783:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,793:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,854:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:23,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:23,894:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,904:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:29:23,964:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,004:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:29:24,014:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,014:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,074:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,134:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,134:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,194:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,244:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,244:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:29:24,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,424:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,464:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:29:24,534:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,694:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,694:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:29:24,767:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,892:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:29:24,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:24,942:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:29:25,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,180:INFO:Preparing preprocessing pipeline...
2024-05-09 23:29:25,181:INFO:Set up simple imputation.
2024-05-09 23:29:25,181:INFO:Set up column name cleaning.
2024-05-09 23:29:25,199:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:29:25,214:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:29:25,214:INFO:Creating final display dataframe.
2024-05-09 23:29:25,281:INFO:Setup _display_container:                     Description             Value
0                    Session id              8752
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              2fa4
2024-05-09 23:29:25,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:29:25,514:INFO:setup() successfully completed in 1.79s...............
2024-05-09 23:29:36,206:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:51: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-09 23:29:36,247:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-09 23:29:41,184:INFO:Initializing create_model()
2024-05-09 23:29:41,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:29:41,184:INFO:Checking exceptions
2024-05-09 23:29:41,184:INFO:Importing libraries
2024-05-09 23:29:41,184:INFO:Copying training dataset
2024-05-09 23:29:41,184:INFO:Defining folds
2024-05-09 23:29:41,184:INFO:Declaring metric variables
2024-05-09 23:29:41,184:INFO:Importing untrained model
2024-05-09 23:29:41,184:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:29:41,184:INFO:Starting cross validation
2024-05-09 23:29:41,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:29:45,143:INFO:Calculating mean and std
2024-05-09 23:29:45,144:INFO:Creating metrics dataframe
2024-05-09 23:29:45,144:INFO:Finalizing model
2024-05-09 23:29:45,237:INFO:Uploading results into container
2024-05-09 23:29:45,237:INFO:Uploading model into container now
2024-05-09 23:29:45,245:INFO:_master_model_container: 1
2024-05-09 23:29:45,245:INFO:_display_container: 2
2024-05-09 23:29:45,245:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:29:45,245:INFO:create_model() successfully completed......................................
2024-05-09 23:29:45,355:INFO:Initializing tune_model()
2024-05-09 23:29:45,355:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8752), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:29:45,355:INFO:Checking exceptions
2024-05-09 23:29:45,365:INFO:Copying training dataset
2024-05-09 23:29:45,365:INFO:Checking base model
2024-05-09 23:29:45,365:INFO:Base model : Extra Trees Regressor
2024-05-09 23:29:45,365:INFO:Declaring metric variables
2024-05-09 23:29:45,365:INFO:Defining Hyperparameters
2024-05-09 23:29:45,446:INFO:Tuning with n_jobs=-1
2024-05-09 23:29:45,446:INFO:Initializing RandomizedSearchCV
2024-05-09 23:29:57,700:INFO:best_params: {'actual_estimator__n_estimators': 80, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:29:57,700:INFO:Hyperparameter search completed
2024-05-09 23:29:57,700:INFO:SubProcess create_model() called ==================================
2024-05-09 23:29:57,703:INFO:Initializing create_model()
2024-05-09 23:29:57,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8752), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B15FB8E710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 80, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.001, 'max_features': 'sqrt', 'max_depth': 11, 'criterion': 'absolute_error', 'bootstrap': True})
2024-05-09 23:29:57,703:INFO:Checking exceptions
2024-05-09 23:29:57,703:INFO:Importing libraries
2024-05-09 23:29:57,703:INFO:Copying training dataset
2024-05-09 23:29:57,703:INFO:Defining folds
2024-05-09 23:29:57,703:INFO:Declaring metric variables
2024-05-09 23:29:57,703:INFO:Importing untrained model
2024-05-09 23:29:57,703:INFO:Declaring custom model
2024-05-09 23:29:57,703:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:29:57,703:INFO:Starting cross validation
2024-05-09 23:29:57,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:29:58,339:INFO:Calculating mean and std
2024-05-09 23:29:58,339:INFO:Creating metrics dataframe
2024-05-09 23:29:58,341:INFO:Finalizing model
2024-05-09 23:29:58,443:INFO:Uploading results into container
2024-05-09 23:29:58,443:INFO:Uploading model into container now
2024-05-09 23:29:58,443:INFO:_master_model_container: 2
2024-05-09 23:29:58,443:INFO:_display_container: 3
2024-05-09 23:29:58,443:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=11,
                    max_features='sqrt', min_impurity_decrease=0.001,
                    min_samples_leaf=2, min_samples_split=9, n_estimators=80,
                    n_jobs=-1, random_state=8752)
2024-05-09 23:29:58,443:INFO:create_model() successfully completed......................................
2024-05-09 23:29:58,513:INFO:SubProcess create_model() end ==================================
2024-05-09 23:29:58,523:INFO:choose_better activated
2024-05-09 23:29:58,523:INFO:SubProcess create_model() called ==================================
2024-05-09 23:29:58,523:INFO:Initializing create_model()
2024-05-09 23:29:58,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8752), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:29:58,523:INFO:Checking exceptions
2024-05-09 23:29:58,523:INFO:Importing libraries
2024-05-09 23:29:58,523:INFO:Copying training dataset
2024-05-09 23:29:58,523:INFO:Defining folds
2024-05-09 23:29:58,523:INFO:Declaring metric variables
2024-05-09 23:29:58,523:INFO:Importing untrained model
2024-05-09 23:29:58,523:INFO:Declaring custom model
2024-05-09 23:29:58,523:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:29:58,523:INFO:Starting cross validation
2024-05-09 23:29:58,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:29:59,021:INFO:Calculating mean and std
2024-05-09 23:29:59,021:INFO:Creating metrics dataframe
2024-05-09 23:29:59,021:INFO:Finalizing model
2024-05-09 23:29:59,103:INFO:Uploading results into container
2024-05-09 23:29:59,103:INFO:Uploading model into container now
2024-05-09 23:29:59,103:INFO:_master_model_container: 3
2024-05-09 23:29:59,103:INFO:_display_container: 4
2024-05-09 23:29:59,103:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:29:59,103:INFO:create_model() successfully completed......................................
2024-05-09 23:29:59,179:INFO:SubProcess create_model() end ==================================
2024-05-09 23:29:59,179:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8752) result for R2 is 0.7416
2024-05-09 23:29:59,179:INFO:ExtraTreesRegressor(bootstrap=True, criterion='absolute_error', max_depth=11,
                    max_features='sqrt', min_impurity_decrease=0.001,
                    min_samples_leaf=2, min_samples_split=9, n_estimators=80,
                    n_jobs=-1, random_state=8752) result for R2 is 0.6786
2024-05-09 23:29:59,179:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8752) is best model
2024-05-09 23:29:59,179:INFO:choose_better completed
2024-05-09 23:29:59,179:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:29:59,189:INFO:_master_model_container: 3
2024-05-09 23:29:59,189:INFO:_display_container: 3
2024-05-09 23:29:59,189:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:29:59,189:INFO:tune_model() successfully completed......................................
2024-05-09 23:29:59,260:INFO:Initializing finalize_model()
2024-05-09 23:29:59,260:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8752), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:29:59,260:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:29:59,260:INFO:Initializing create_model()
2024-05-09 23:29:59,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8752), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:29:59,260:INFO:Checking exceptions
2024-05-09 23:29:59,270:INFO:Importing libraries
2024-05-09 23:29:59,270:INFO:Copying training dataset
2024-05-09 23:29:59,270:INFO:Defining folds
2024-05-09 23:29:59,270:INFO:Declaring metric variables
2024-05-09 23:29:59,270:INFO:Importing untrained model
2024-05-09 23:29:59,270:INFO:Declaring custom model
2024-05-09 23:29:59,270:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:29:59,270:INFO:Cross validation set to False
2024-05-09 23:29:59,270:INFO:Fitting Model
2024-05-09 23:29:59,361:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8752))])
2024-05-09 23:29:59,361:INFO:create_model() successfully completed......................................
2024-05-09 23:29:59,431:INFO:_master_model_container: 3
2024-05-09 23:29:59,431:INFO:_display_container: 3
2024-05-09 23:29:59,431:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8752))])
2024-05-09 23:29:59,431:INFO:finalize_model() successfully completed......................................
2024-05-09 23:29:59,512:INFO:Initializing create_model()
2024-05-09 23:29:59,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:29:59,512:INFO:Checking exceptions
2024-05-09 23:29:59,512:INFO:Importing libraries
2024-05-09 23:29:59,512:INFO:Copying training dataset
2024-05-09 23:29:59,512:INFO:Defining folds
2024-05-09 23:29:59,512:INFO:Declaring metric variables
2024-05-09 23:29:59,512:INFO:Importing untrained model
2024-05-09 23:29:59,512:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:29:59,512:INFO:Starting cross validation
2024-05-09 23:29:59,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:30:00,146:INFO:Calculating mean and std
2024-05-09 23:30:00,148:INFO:Creating metrics dataframe
2024-05-09 23:30:00,148:INFO:Finalizing model
2024-05-09 23:30:00,287:INFO:Uploading results into container
2024-05-09 23:30:00,290:INFO:Uploading model into container now
2024-05-09 23:30:00,290:INFO:_master_model_container: 4
2024-05-09 23:30:00,290:INFO:_display_container: 4
2024-05-09 23:30:00,290:INFO:RandomForestRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:30:00,290:INFO:create_model() successfully completed......................................
2024-05-09 23:30:00,370:INFO:Initializing tune_model()
2024-05-09 23:30:00,370:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8752), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:30:00,370:INFO:Checking exceptions
2024-05-09 23:30:00,380:INFO:Copying training dataset
2024-05-09 23:30:00,380:INFO:Checking base model
2024-05-09 23:30:00,380:INFO:Base model : Random Forest Regressor
2024-05-09 23:30:00,380:INFO:Declaring metric variables
2024-05-09 23:30:00,380:INFO:Defining Hyperparameters
2024-05-09 23:30:00,450:INFO:Tuning with n_jobs=-1
2024-05-09 23:30:00,460:INFO:Initializing RandomizedSearchCV
2024-05-09 23:30:19,977:INFO:best_params: {'actual_estimator__n_estimators': 10, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2024-05-09 23:30:19,977:INFO:Hyperparameter search completed
2024-05-09 23:30:19,977:INFO:SubProcess create_model() called ==================================
2024-05-09 23:30:19,977:INFO:Initializing create_model()
2024-05-09 23:30:19,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8752), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B159C7BB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 10, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.01, 'max_features': 'log2', 'max_depth': 7, 'criterion': 'squared_error', 'bootstrap': False})
2024-05-09 23:30:19,977:INFO:Checking exceptions
2024-05-09 23:30:19,977:INFO:Importing libraries
2024-05-09 23:30:19,977:INFO:Copying training dataset
2024-05-09 23:30:19,977:INFO:Defining folds
2024-05-09 23:30:19,977:INFO:Declaring metric variables
2024-05-09 23:30:19,977:INFO:Importing untrained model
2024-05-09 23:30:19,977:INFO:Declaring custom model
2024-05-09 23:30:19,983:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:30:19,983:INFO:Starting cross validation
2024-05-09 23:30:19,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:30:20,115:INFO:Calculating mean and std
2024-05-09 23:30:20,115:INFO:Creating metrics dataframe
2024-05-09 23:30:20,115:INFO:Finalizing model
2024-05-09 23:30:20,141:INFO:Uploading results into container
2024-05-09 23:30:20,144:INFO:Uploading model into container now
2024-05-09 23:30:20,144:INFO:_master_model_container: 5
2024-05-09 23:30:20,144:INFO:_display_container: 5
2024-05-09 23:30:20,144:INFO:RandomForestRegressor(bootstrap=False, max_depth=7, max_features='log2',
                      min_impurity_decrease=0.01, min_samples_leaf=4,
                      min_samples_split=7, n_estimators=10, n_jobs=-1,
                      random_state=8752)
2024-05-09 23:30:20,144:INFO:create_model() successfully completed......................................
2024-05-09 23:30:20,213:INFO:SubProcess create_model() end ==================================
2024-05-09 23:30:20,213:INFO:choose_better activated
2024-05-09 23:30:20,213:INFO:SubProcess create_model() called ==================================
2024-05-09 23:30:20,213:INFO:Initializing create_model()
2024-05-09 23:30:20,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8752), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:30:20,213:INFO:Checking exceptions
2024-05-09 23:30:20,213:INFO:Importing libraries
2024-05-09 23:30:20,213:INFO:Copying training dataset
2024-05-09 23:30:20,223:INFO:Defining folds
2024-05-09 23:30:20,223:INFO:Declaring metric variables
2024-05-09 23:30:20,223:INFO:Importing untrained model
2024-05-09 23:30:20,223:INFO:Declaring custom model
2024-05-09 23:30:20,223:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:30:20,223:INFO:Starting cross validation
2024-05-09 23:30:20,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:30:20,836:INFO:Calculating mean and std
2024-05-09 23:30:20,836:INFO:Creating metrics dataframe
2024-05-09 23:30:20,836:INFO:Finalizing model
2024-05-09 23:30:20,967:INFO:Uploading results into container
2024-05-09 23:30:20,967:INFO:Uploading model into container now
2024-05-09 23:30:20,967:INFO:_master_model_container: 6
2024-05-09 23:30:20,967:INFO:_display_container: 6
2024-05-09 23:30:20,967:INFO:RandomForestRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:30:20,967:INFO:create_model() successfully completed......................................
2024-05-09 23:30:21,041:INFO:SubProcess create_model() end ==================================
2024-05-09 23:30:21,041:INFO:RandomForestRegressor(n_jobs=-1, random_state=8752) result for R2 is 0.7464
2024-05-09 23:30:21,041:INFO:RandomForestRegressor(bootstrap=False, max_depth=7, max_features='log2',
                      min_impurity_decrease=0.01, min_samples_leaf=4,
                      min_samples_split=7, n_estimators=10, n_jobs=-1,
                      random_state=8752) result for R2 is 0.7204
2024-05-09 23:30:21,041:INFO:RandomForestRegressor(n_jobs=-1, random_state=8752) is best model
2024-05-09 23:30:21,041:INFO:choose_better completed
2024-05-09 23:30:21,041:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:30:21,051:INFO:_master_model_container: 6
2024-05-09 23:30:21,051:INFO:_display_container: 5
2024-05-09 23:30:21,051:INFO:RandomForestRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:30:21,051:INFO:tune_model() successfully completed......................................
2024-05-09 23:30:21,131:INFO:Initializing finalize_model()
2024-05-09 23:30:21,131:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8752), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:30:21,131:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=8752)
2024-05-09 23:30:21,131:INFO:Initializing create_model()
2024-05-09 23:30:21,131:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B145D2A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8752), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:30:21,131:INFO:Checking exceptions
2024-05-09 23:30:21,131:INFO:Importing libraries
2024-05-09 23:30:21,131:INFO:Copying training dataset
2024-05-09 23:30:21,131:INFO:Defining folds
2024-05-09 23:30:21,131:INFO:Declaring metric variables
2024-05-09 23:30:21,131:INFO:Importing untrained model
2024-05-09 23:30:21,131:INFO:Declaring custom model
2024-05-09 23:30:21,131:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:30:21,131:INFO:Cross validation set to False
2024-05-09 23:30:21,131:INFO:Fitting Model
2024-05-09 23:30:21,267:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8752))])
2024-05-09 23:30:21,267:INFO:create_model() successfully completed......................................
2024-05-09 23:30:21,343:INFO:_master_model_container: 6
2024-05-09 23:30:21,343:INFO:_display_container: 5
2024-05-09 23:30:21,343:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8752))])
2024-05-09 23:30:21,343:INFO:finalize_model() successfully completed......................................
2024-05-09 23:33:20,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:33:20,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:33:20,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:33:20,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:33:20,946:INFO:PyCaret RegressionExperiment
2024-05-09 23:33:20,946:INFO:Logging name: reg-default-name
2024-05-09 23:33:20,946:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:33:20,946:INFO:version 3.3.2
2024-05-09 23:33:20,946:INFO:Initializing setup()
2024-05-09 23:33:20,946:INFO:self.USI: a8c2
2024-05-09 23:33:20,946:INFO:self._variable_keys: {'n_jobs_param', '_available_plots', 'logging_param', 'gpu_n_jobs_param', 'X_train', 'exp_id', 'data', 'pipeline', 'idx', 'target_param', 'fold_generator', '_ml_usecase', 'y', 'fold_groups_param', 'y_test', 'X', 'y_train', 'gpu_param', 'exp_name_log', 'X_test', 'seed', 'transform_target_param', 'memory', 'log_plots_param', 'fold_shuffle_param', 'html_param', 'USI'}
2024-05-09 23:33:20,946:INFO:Checking environment
2024-05-09 23:33:20,946:INFO:python_version: 3.11.9
2024-05-09 23:33:20,946:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:33:20,946:INFO:machine: AMD64
2024-05-09 23:33:20,954:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:33:20,958:INFO:Memory: svmem(total=7947747328, available=1612509184, percent=79.7, used=6335238144, free=1612509184)
2024-05-09 23:33:20,958:INFO:Physical Core: 6
2024-05-09 23:33:20,962:INFO:Logical Core: 6
2024-05-09 23:33:20,962:INFO:Checking libraries
2024-05-09 23:33:20,962:INFO:System:
2024-05-09 23:33:20,962:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:33:20,962:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:33:20,962:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:33:20,962:INFO:PyCaret required dependencies:
2024-05-09 23:33:20,986:INFO:                 pip: 24.0
2024-05-09 23:33:20,986:INFO:          setuptools: 65.5.0
2024-05-09 23:33:20,986:INFO:             pycaret: 3.3.2
2024-05-09 23:33:20,986:INFO:             IPython: 8.24.0
2024-05-09 23:33:20,986:INFO:          ipywidgets: 8.1.2
2024-05-09 23:33:20,986:INFO:                tqdm: 4.66.4
2024-05-09 23:33:20,986:INFO:               numpy: 1.26.4
2024-05-09 23:33:20,986:INFO:              pandas: 2.1.4
2024-05-09 23:33:20,986:INFO:              jinja2: 3.1.4
2024-05-09 23:33:20,986:INFO:               scipy: 1.11.4
2024-05-09 23:33:20,986:INFO:              joblib: 1.3.2
2024-05-09 23:33:20,986:INFO:             sklearn: 1.4.2
2024-05-09 23:33:20,986:INFO:                pyod: 1.1.3
2024-05-09 23:33:20,986:INFO:            imblearn: 0.12.2
2024-05-09 23:33:20,986:INFO:   category_encoders: 2.6.3
2024-05-09 23:33:20,986:INFO:            lightgbm: 4.3.0
2024-05-09 23:33:20,986:INFO:               numba: 0.59.1
2024-05-09 23:33:20,986:INFO:            requests: 2.31.0
2024-05-09 23:33:20,986:INFO:          matplotlib: 3.7.5
2024-05-09 23:33:20,986:INFO:          scikitplot: 0.3.7
2024-05-09 23:33:20,986:INFO:         yellowbrick: 1.5
2024-05-09 23:33:20,986:INFO:              plotly: 5.22.0
2024-05-09 23:33:20,986:INFO:    plotly-resampler: Not installed
2024-05-09 23:33:20,986:INFO:             kaleido: 0.2.1
2024-05-09 23:33:20,986:INFO:           schemdraw: 0.15
2024-05-09 23:33:20,986:INFO:         statsmodels: 0.14.2
2024-05-09 23:33:20,986:INFO:              sktime: 0.26.0
2024-05-09 23:33:20,986:INFO:               tbats: 1.1.3
2024-05-09 23:33:20,986:INFO:            pmdarima: 2.0.4
2024-05-09 23:33:20,986:INFO:              psutil: 5.9.8
2024-05-09 23:33:20,986:INFO:          markupsafe: 2.1.5
2024-05-09 23:33:20,986:INFO:             pickle5: Not installed
2024-05-09 23:33:20,986:INFO:         cloudpickle: 3.0.0
2024-05-09 23:33:20,986:INFO:         deprecation: 2.1.0
2024-05-09 23:33:20,986:INFO:              xxhash: 3.4.1
2024-05-09 23:33:20,986:INFO:           wurlitzer: Not installed
2024-05-09 23:33:20,986:INFO:PyCaret optional dependencies:
2024-05-09 23:33:20,998:INFO:                shap: Not installed
2024-05-09 23:33:20,998:INFO:           interpret: Not installed
2024-05-09 23:33:20,998:INFO:                umap: Not installed
2024-05-09 23:33:20,998:INFO:     ydata_profiling: Not installed
2024-05-09 23:33:20,998:INFO:  explainerdashboard: Not installed
2024-05-09 23:33:20,998:INFO:             autoviz: Not installed
2024-05-09 23:33:20,998:INFO:           fairlearn: Not installed
2024-05-09 23:33:20,998:INFO:          deepchecks: Not installed
2024-05-09 23:33:20,998:INFO:             xgboost: Not installed
2024-05-09 23:33:20,998:INFO:            catboost: Not installed
2024-05-09 23:33:20,998:INFO:              kmodes: Not installed
2024-05-09 23:33:20,998:INFO:             mlxtend: Not installed
2024-05-09 23:33:20,998:INFO:       statsforecast: Not installed
2024-05-09 23:33:20,998:INFO:        tune_sklearn: Not installed
2024-05-09 23:33:20,998:INFO:                 ray: Not installed
2024-05-09 23:33:20,998:INFO:            hyperopt: Not installed
2024-05-09 23:33:20,998:INFO:              optuna: Not installed
2024-05-09 23:33:20,998:INFO:               skopt: Not installed
2024-05-09 23:33:20,998:INFO:              mlflow: Not installed
2024-05-09 23:33:20,998:INFO:              gradio: Not installed
2024-05-09 23:33:20,998:INFO:             fastapi: Not installed
2024-05-09 23:33:20,998:INFO:             uvicorn: Not installed
2024-05-09 23:33:20,998:INFO:              m2cgen: Not installed
2024-05-09 23:33:20,998:INFO:           evidently: Not installed
2024-05-09 23:33:20,998:INFO:               fugue: Not installed
2024-05-09 23:33:20,998:INFO:           streamlit: Not installed
2024-05-09 23:33:20,998:INFO:             prophet: Not installed
2024-05-09 23:33:20,998:INFO:None
2024-05-09 23:33:20,998:INFO:Set up data.
2024-05-09 23:33:21,002:INFO:Set up folding strategy.
2024-05-09 23:33:21,002:INFO:Set up train/test split.
2024-05-09 23:33:21,002:INFO:Set up index.
2024-05-09 23:33:21,006:INFO:Assigning column types.
2024-05-09 23:33:21,006:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:33:21,006:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,014:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,019:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,078:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,126:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,126:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,130:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,135:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,194:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,242:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:33:21,246:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,250:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,306:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,359:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,363:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,423:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,467:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:33:21,475:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,535:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,579:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,591:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,695:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:33:21,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,875:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,920:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:33:21,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:21,923:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:33:21,987:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:22,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,099:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:33:22,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,148:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:33:22,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,376:INFO:Preparing preprocessing pipeline...
2024-05-09 23:33:22,376:INFO:Set up simple imputation.
2024-05-09 23:33:22,376:INFO:Set up column name cleaning.
2024-05-09 23:33:22,392:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:33:22,400:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:33:22,400:INFO:Creating final display dataframe.
2024-05-09 23:33:22,456:INFO:Setup _display_container:                     Description             Value
0                    Session id              4007
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              a8c2
2024-05-09 23:33:22,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:33:22,686:INFO:setup() successfully completed in 1.74s...............
2024-05-09 23:33:32,411:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-09 23:33:32,451:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:53: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-09 23:33:37,327:INFO:Initializing create_model()
2024-05-09 23:33:37,327:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:33:37,327:INFO:Checking exceptions
2024-05-09 23:33:37,327:INFO:Importing libraries
2024-05-09 23:33:37,327:INFO:Copying training dataset
2024-05-09 23:33:37,337:INFO:Defining folds
2024-05-09 23:33:37,337:INFO:Declaring metric variables
2024-05-09 23:33:37,337:INFO:Importing untrained model
2024-05-09 23:33:37,337:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:33:37,337:INFO:Starting cross validation
2024-05-09 23:33:37,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:33:41,623:INFO:Calculating mean and std
2024-05-09 23:33:41,623:INFO:Creating metrics dataframe
2024-05-09 23:33:41,623:INFO:Finalizing model
2024-05-09 23:33:41,717:INFO:Uploading results into container
2024-05-09 23:33:41,717:INFO:Uploading model into container now
2024-05-09 23:33:41,721:INFO:_master_model_container: 1
2024-05-09 23:33:41,721:INFO:_display_container: 2
2024-05-09 23:33:41,721:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:33:41,721:INFO:create_model() successfully completed......................................
2024-05-09 23:33:41,851:INFO:Initializing tune_model()
2024-05-09 23:33:41,851:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4007), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:33:41,851:INFO:Checking exceptions
2024-05-09 23:33:41,851:INFO:Copying training dataset
2024-05-09 23:33:41,851:INFO:Checking base model
2024-05-09 23:33:41,851:INFO:Base model : Extra Trees Regressor
2024-05-09 23:33:41,851:INFO:Declaring metric variables
2024-05-09 23:33:41,851:INFO:Defining Hyperparameters
2024-05-09 23:33:41,931:INFO:Tuning with n_jobs=-1
2024-05-09 23:33:41,931:INFO:Initializing RandomizedSearchCV
2024-05-09 23:33:47,631:INFO:best_params: {'actual_estimator__n_estimators': 220, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:33:47,631:INFO:Hyperparameter search completed
2024-05-09 23:33:47,631:INFO:SubProcess create_model() called ==================================
2024-05-09 23:33:47,631:INFO:Initializing create_model()
2024-05-09 23:33:47,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4007), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A724B9D550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 220, 'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.2, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 23:33:47,631:INFO:Checking exceptions
2024-05-09 23:33:47,631:INFO:Importing libraries
2024-05-09 23:33:47,631:INFO:Copying training dataset
2024-05-09 23:33:47,631:INFO:Defining folds
2024-05-09 23:33:47,631:INFO:Declaring metric variables
2024-05-09 23:33:47,631:INFO:Importing untrained model
2024-05-09 23:33:47,631:INFO:Declaring custom model
2024-05-09 23:33:47,631:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:33:47,631:INFO:Starting cross validation
2024-05-09 23:33:47,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:33:48,299:INFO:Calculating mean and std
2024-05-09 23:33:48,299:INFO:Creating metrics dataframe
2024-05-09 23:33:48,299:INFO:Finalizing model
2024-05-09 23:33:48,532:INFO:Uploading results into container
2024-05-09 23:33:48,532:INFO:Uploading model into container now
2024-05-09 23:33:48,532:INFO:_master_model_container: 2
2024-05-09 23:33:48,532:INFO:_display_container: 3
2024-05-09 23:33:48,532:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, max_features='log2',
                    min_impurity_decrease=0.2, min_samples_leaf=4,
                    min_samples_split=9, n_estimators=220, n_jobs=-1,
                    random_state=4007)
2024-05-09 23:33:48,532:INFO:create_model() successfully completed......................................
2024-05-09 23:33:48,602:INFO:SubProcess create_model() end ==================================
2024-05-09 23:33:48,602:INFO:choose_better activated
2024-05-09 23:33:48,602:INFO:SubProcess create_model() called ==================================
2024-05-09 23:33:48,602:INFO:Initializing create_model()
2024-05-09 23:33:48,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4007), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:33:48,602:INFO:Checking exceptions
2024-05-09 23:33:48,602:INFO:Importing libraries
2024-05-09 23:33:48,602:INFO:Copying training dataset
2024-05-09 23:33:48,612:INFO:Defining folds
2024-05-09 23:33:48,612:INFO:Declaring metric variables
2024-05-09 23:33:48,612:INFO:Importing untrained model
2024-05-09 23:33:48,612:INFO:Declaring custom model
2024-05-09 23:33:48,612:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:33:48,612:INFO:Starting cross validation
2024-05-09 23:33:48,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:33:49,083:INFO:Calculating mean and std
2024-05-09 23:33:49,083:INFO:Creating metrics dataframe
2024-05-09 23:33:49,083:INFO:Finalizing model
2024-05-09 23:33:49,171:INFO:Uploading results into container
2024-05-09 23:33:49,171:INFO:Uploading model into container now
2024-05-09 23:33:49,171:INFO:_master_model_container: 3
2024-05-09 23:33:49,171:INFO:_display_container: 4
2024-05-09 23:33:49,171:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:33:49,171:INFO:create_model() successfully completed......................................
2024-05-09 23:33:49,267:INFO:SubProcess create_model() end ==================================
2024-05-09 23:33:49,267:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4007) result for R2 is 0.7702
2024-05-09 23:33:49,277:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=9, max_features='log2',
                    min_impurity_decrease=0.2, min_samples_leaf=4,
                    min_samples_split=9, n_estimators=220, n_jobs=-1,
                    random_state=4007) result for R2 is 0.6896
2024-05-09 23:33:49,277:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4007) is best model
2024-05-09 23:33:49,277:INFO:choose_better completed
2024-05-09 23:33:49,277:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:33:49,277:INFO:_master_model_container: 3
2024-05-09 23:33:49,277:INFO:_display_container: 3
2024-05-09 23:33:49,277:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:33:49,277:INFO:tune_model() successfully completed......................................
2024-05-09 23:33:49,367:INFO:Initializing finalize_model()
2024-05-09 23:33:49,367:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4007), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:33:49,367:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:33:49,367:INFO:Initializing create_model()
2024-05-09 23:33:49,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4007), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:33:49,367:INFO:Checking exceptions
2024-05-09 23:33:49,367:INFO:Importing libraries
2024-05-09 23:33:49,367:INFO:Copying training dataset
2024-05-09 23:33:49,367:INFO:Defining folds
2024-05-09 23:33:49,367:INFO:Declaring metric variables
2024-05-09 23:33:49,367:INFO:Importing untrained model
2024-05-09 23:33:49,367:INFO:Declaring custom model
2024-05-09 23:33:49,367:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:33:49,367:INFO:Cross validation set to False
2024-05-09 23:33:49,367:INFO:Fitting Model
2024-05-09 23:33:49,467:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4007))])
2024-05-09 23:33:49,467:INFO:create_model() successfully completed......................................
2024-05-09 23:33:49,537:INFO:_master_model_container: 3
2024-05-09 23:33:49,537:INFO:_display_container: 3
2024-05-09 23:33:49,547:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=4007))])
2024-05-09 23:33:49,547:INFO:finalize_model() successfully completed......................................
2024-05-09 23:33:49,617:INFO:Initializing create_model()
2024-05-09 23:33:49,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:33:49,617:INFO:Checking exceptions
2024-05-09 23:33:49,617:INFO:Importing libraries
2024-05-09 23:33:49,617:INFO:Copying training dataset
2024-05-09 23:33:49,617:INFO:Defining folds
2024-05-09 23:33:49,617:INFO:Declaring metric variables
2024-05-09 23:33:49,617:INFO:Importing untrained model
2024-05-09 23:33:49,617:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:33:49,617:INFO:Starting cross validation
2024-05-09 23:33:49,617:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:33:50,248:INFO:Calculating mean and std
2024-05-09 23:33:50,248:INFO:Creating metrics dataframe
2024-05-09 23:33:50,248:INFO:Finalizing model
2024-05-09 23:33:50,374:INFO:Uploading results into container
2024-05-09 23:33:50,374:INFO:Uploading model into container now
2024-05-09 23:33:50,374:INFO:_master_model_container: 4
2024-05-09 23:33:50,374:INFO:_display_container: 4
2024-05-09 23:33:50,374:INFO:RandomForestRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:33:50,374:INFO:create_model() successfully completed......................................
2024-05-09 23:33:50,455:INFO:Initializing tune_model()
2024-05-09 23:33:50,455:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4007), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:33:50,455:INFO:Checking exceptions
2024-05-09 23:33:50,455:INFO:Copying training dataset
2024-05-09 23:33:50,455:INFO:Checking base model
2024-05-09 23:33:50,455:INFO:Base model : Random Forest Regressor
2024-05-09 23:33:50,455:INFO:Declaring metric variables
2024-05-09 23:33:50,455:INFO:Defining Hyperparameters
2024-05-09 23:33:50,535:INFO:Tuning with n_jobs=-1
2024-05-09 23:33:50,535:INFO:Initializing RandomizedSearchCV
2024-05-09 23:33:58,400:INFO:best_params: {'actual_estimator__n_estimators': 220, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:33:58,400:INFO:Hyperparameter search completed
2024-05-09 23:33:58,400:INFO:SubProcess create_model() called ==================================
2024-05-09 23:33:58,400:INFO:Initializing create_model()
2024-05-09 23:33:58,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4007), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A723732F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 220, 'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.2, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 23:33:58,400:INFO:Checking exceptions
2024-05-09 23:33:58,400:INFO:Importing libraries
2024-05-09 23:33:58,400:INFO:Copying training dataset
2024-05-09 23:33:58,400:INFO:Defining folds
2024-05-09 23:33:58,400:INFO:Declaring metric variables
2024-05-09 23:33:58,400:INFO:Importing untrained model
2024-05-09 23:33:58,400:INFO:Declaring custom model
2024-05-09 23:33:58,400:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:33:58,400:INFO:Starting cross validation
2024-05-09 23:33:58,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:33:59,255:INFO:Calculating mean and std
2024-05-09 23:33:59,255:INFO:Creating metrics dataframe
2024-05-09 23:33:59,256:INFO:Finalizing model
2024-05-09 23:33:59,514:INFO:Uploading results into container
2024-05-09 23:33:59,514:INFO:Uploading model into container now
2024-05-09 23:33:59,514:INFO:_master_model_container: 5
2024-05-09 23:33:59,514:INFO:_display_container: 5
2024-05-09 23:33:59,514:INFO:RandomForestRegressor(max_depth=9, max_features='log2',
                      min_impurity_decrease=0.2, min_samples_leaf=4,
                      min_samples_split=9, n_estimators=220, n_jobs=-1,
                      random_state=4007)
2024-05-09 23:33:59,514:INFO:create_model() successfully completed......................................
2024-05-09 23:33:59,604:INFO:SubProcess create_model() end ==================================
2024-05-09 23:33:59,604:INFO:choose_better activated
2024-05-09 23:33:59,604:INFO:SubProcess create_model() called ==================================
2024-05-09 23:33:59,604:INFO:Initializing create_model()
2024-05-09 23:33:59,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4007), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:33:59,604:INFO:Checking exceptions
2024-05-09 23:33:59,604:INFO:Importing libraries
2024-05-09 23:33:59,604:INFO:Copying training dataset
2024-05-09 23:33:59,604:INFO:Defining folds
2024-05-09 23:33:59,604:INFO:Declaring metric variables
2024-05-09 23:33:59,604:INFO:Importing untrained model
2024-05-09 23:33:59,604:INFO:Declaring custom model
2024-05-09 23:33:59,604:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:33:59,604:INFO:Starting cross validation
2024-05-09 23:33:59,604:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:34:00,311:INFO:Calculating mean and std
2024-05-09 23:34:00,311:INFO:Creating metrics dataframe
2024-05-09 23:34:00,311:INFO:Finalizing model
2024-05-09 23:34:00,442:INFO:Uploading results into container
2024-05-09 23:34:00,442:INFO:Uploading model into container now
2024-05-09 23:34:00,442:INFO:_master_model_container: 6
2024-05-09 23:34:00,442:INFO:_display_container: 6
2024-05-09 23:34:00,442:INFO:RandomForestRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:34:00,442:INFO:create_model() successfully completed......................................
2024-05-09 23:34:00,511:INFO:SubProcess create_model() end ==================================
2024-05-09 23:34:00,511:INFO:RandomForestRegressor(n_jobs=-1, random_state=4007) result for R2 is 0.7601
2024-05-09 23:34:00,511:INFO:RandomForestRegressor(max_depth=9, max_features='log2',
                      min_impurity_decrease=0.2, min_samples_leaf=4,
                      min_samples_split=9, n_estimators=220, n_jobs=-1,
                      random_state=4007) result for R2 is 0.7251
2024-05-09 23:34:00,511:INFO:RandomForestRegressor(n_jobs=-1, random_state=4007) is best model
2024-05-09 23:34:00,511:INFO:choose_better completed
2024-05-09 23:34:00,511:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:34:00,521:INFO:_master_model_container: 6
2024-05-09 23:34:00,521:INFO:_display_container: 5
2024-05-09 23:34:00,521:INFO:RandomForestRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:34:00,521:INFO:tune_model() successfully completed......................................
2024-05-09 23:34:00,601:INFO:Initializing finalize_model()
2024-05-09 23:34:00,601:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4007), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:34:00,601:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=4007)
2024-05-09 23:34:00,601:INFO:Initializing create_model()
2024-05-09 23:34:00,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A70F5E7F90>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4007), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:34:00,601:INFO:Checking exceptions
2024-05-09 23:34:00,611:INFO:Importing libraries
2024-05-09 23:34:00,611:INFO:Copying training dataset
2024-05-09 23:34:00,611:INFO:Defining folds
2024-05-09 23:34:00,611:INFO:Declaring metric variables
2024-05-09 23:34:00,611:INFO:Importing untrained model
2024-05-09 23:34:00,611:INFO:Declaring custom model
2024-05-09 23:34:00,611:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:34:00,611:INFO:Cross validation set to False
2024-05-09 23:34:00,611:INFO:Fitting Model
2024-05-09 23:34:00,745:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4007))])
2024-05-09 23:34:00,745:INFO:create_model() successfully completed......................................
2024-05-09 23:34:00,824:INFO:_master_model_container: 6
2024-05-09 23:34:00,824:INFO:_display_container: 5
2024-05-09 23:34:00,824:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4007))])
2024-05-09 23:34:00,824:INFO:finalize_model() successfully completed......................................
2024-05-09 23:35:03,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:35:03,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:35:03,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:35:03,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:35:03,533:INFO:PyCaret RegressionExperiment
2024-05-09 23:35:03,533:INFO:Logging name: reg-default-name
2024-05-09 23:35:03,533:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:35:03,533:INFO:version 3.3.2
2024-05-09 23:35:03,533:INFO:Initializing setup()
2024-05-09 23:35:03,533:INFO:self.USI: 6745
2024-05-09 23:35:03,533:INFO:self._variable_keys: {'y', 'fold_generator', '_ml_usecase', 'seed', 'fold_shuffle_param', 'memory', '_available_plots', 'X_test', 'pipeline', 'y_train', 'exp_name_log', 'transform_target_param', 'idx', 'data', 'X_train', 'X', 'fold_groups_param', 'USI', 'gpu_param', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'y_test', 'n_jobs_param', 'log_plots_param', 'html_param', 'logging_param'}
2024-05-09 23:35:03,533:INFO:Checking environment
2024-05-09 23:35:03,533:INFO:python_version: 3.11.9
2024-05-09 23:35:03,533:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:35:03,533:INFO:machine: AMD64
2024-05-09 23:35:03,533:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:35:03,543:INFO:Memory: svmem(total=7947747328, available=1375277056, percent=82.7, used=6572470272, free=1375277056)
2024-05-09 23:35:03,543:INFO:Physical Core: 6
2024-05-09 23:35:03,543:INFO:Logical Core: 6
2024-05-09 23:35:03,543:INFO:Checking libraries
2024-05-09 23:35:03,543:INFO:System:
2024-05-09 23:35:03,543:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:35:03,543:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:35:03,543:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:35:03,543:INFO:PyCaret required dependencies:
2024-05-09 23:35:03,573:INFO:                 pip: 24.0
2024-05-09 23:35:03,573:INFO:          setuptools: 65.5.0
2024-05-09 23:35:03,573:INFO:             pycaret: 3.3.2
2024-05-09 23:35:03,573:INFO:             IPython: 8.24.0
2024-05-09 23:35:03,573:INFO:          ipywidgets: 8.1.2
2024-05-09 23:35:03,573:INFO:                tqdm: 4.66.4
2024-05-09 23:35:03,573:INFO:               numpy: 1.26.4
2024-05-09 23:35:03,573:INFO:              pandas: 2.1.4
2024-05-09 23:35:03,573:INFO:              jinja2: 3.1.4
2024-05-09 23:35:03,573:INFO:               scipy: 1.11.4
2024-05-09 23:35:03,573:INFO:              joblib: 1.3.2
2024-05-09 23:35:03,573:INFO:             sklearn: 1.4.2
2024-05-09 23:35:03,573:INFO:                pyod: 1.1.3
2024-05-09 23:35:03,573:INFO:            imblearn: 0.12.2
2024-05-09 23:35:03,573:INFO:   category_encoders: 2.6.3
2024-05-09 23:35:03,573:INFO:            lightgbm: 4.3.0
2024-05-09 23:35:03,573:INFO:               numba: 0.59.1
2024-05-09 23:35:03,573:INFO:            requests: 2.31.0
2024-05-09 23:35:03,573:INFO:          matplotlib: 3.7.5
2024-05-09 23:35:03,573:INFO:          scikitplot: 0.3.7
2024-05-09 23:35:03,573:INFO:         yellowbrick: 1.5
2024-05-09 23:35:03,573:INFO:              plotly: 5.22.0
2024-05-09 23:35:03,573:INFO:    plotly-resampler: Not installed
2024-05-09 23:35:03,573:INFO:             kaleido: 0.2.1
2024-05-09 23:35:03,573:INFO:           schemdraw: 0.15
2024-05-09 23:35:03,573:INFO:         statsmodels: 0.14.2
2024-05-09 23:35:03,573:INFO:              sktime: 0.26.0
2024-05-09 23:35:03,573:INFO:               tbats: 1.1.3
2024-05-09 23:35:03,573:INFO:            pmdarima: 2.0.4
2024-05-09 23:35:03,573:INFO:              psutil: 5.9.8
2024-05-09 23:35:03,573:INFO:          markupsafe: 2.1.5
2024-05-09 23:35:03,573:INFO:             pickle5: Not installed
2024-05-09 23:35:03,573:INFO:         cloudpickle: 3.0.0
2024-05-09 23:35:03,573:INFO:         deprecation: 2.1.0
2024-05-09 23:35:03,573:INFO:              xxhash: 3.4.1
2024-05-09 23:35:03,573:INFO:           wurlitzer: Not installed
2024-05-09 23:35:03,573:INFO:PyCaret optional dependencies:
2024-05-09 23:35:03,586:INFO:                shap: Not installed
2024-05-09 23:35:03,586:INFO:           interpret: Not installed
2024-05-09 23:35:03,586:INFO:                umap: Not installed
2024-05-09 23:35:03,586:INFO:     ydata_profiling: Not installed
2024-05-09 23:35:03,586:INFO:  explainerdashboard: Not installed
2024-05-09 23:35:03,586:INFO:             autoviz: Not installed
2024-05-09 23:35:03,586:INFO:           fairlearn: Not installed
2024-05-09 23:35:03,586:INFO:          deepchecks: Not installed
2024-05-09 23:35:03,586:INFO:             xgboost: Not installed
2024-05-09 23:35:03,586:INFO:            catboost: Not installed
2024-05-09 23:35:03,586:INFO:              kmodes: Not installed
2024-05-09 23:35:03,586:INFO:             mlxtend: Not installed
2024-05-09 23:35:03,586:INFO:       statsforecast: Not installed
2024-05-09 23:35:03,586:INFO:        tune_sklearn: Not installed
2024-05-09 23:35:03,586:INFO:                 ray: Not installed
2024-05-09 23:35:03,586:INFO:            hyperopt: Not installed
2024-05-09 23:35:03,586:INFO:              optuna: Not installed
2024-05-09 23:35:03,586:INFO:               skopt: Not installed
2024-05-09 23:35:03,586:INFO:              mlflow: Not installed
2024-05-09 23:35:03,586:INFO:              gradio: Not installed
2024-05-09 23:35:03,586:INFO:             fastapi: Not installed
2024-05-09 23:35:03,586:INFO:             uvicorn: Not installed
2024-05-09 23:35:03,586:INFO:              m2cgen: Not installed
2024-05-09 23:35:03,586:INFO:           evidently: Not installed
2024-05-09 23:35:03,586:INFO:               fugue: Not installed
2024-05-09 23:35:03,586:INFO:           streamlit: Not installed
2024-05-09 23:35:03,586:INFO:             prophet: Not installed
2024-05-09 23:35:03,586:INFO:None
2024-05-09 23:35:03,586:INFO:Set up data.
2024-05-09 23:35:03,593:INFO:Set up folding strategy.
2024-05-09 23:35:03,593:INFO:Set up train/test split.
2024-05-09 23:35:03,593:INFO:Set up index.
2024-05-09 23:35:03,593:INFO:Assigning column types.
2024-05-09 23:35:03,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:35:03,593:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,603:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,603:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,673:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:03,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:03,723:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,723:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,733:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,793:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:03,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:03,843:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:35:03,843:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,853:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:03,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:03,964:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:35:03,974:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,074:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:35:04,087:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,194:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,204:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,314:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:35:04,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,544:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,544:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:35:04,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:35:04,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,774:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:35:04,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:04,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,015:INFO:Preparing preprocessing pipeline...
2024-05-09 23:35:05,015:INFO:Set up simple imputation.
2024-05-09 23:35:05,015:INFO:Set up column name cleaning.
2024-05-09 23:35:05,035:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:35:05,045:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:35:05,045:INFO:Creating final display dataframe.
2024-05-09 23:35:05,105:INFO:Setup _display_container:                     Description             Value
0                    Session id               767
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              6745
2024-05-09 23:35:05,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:35:05,375:INFO:setup() successfully completed in 1.85s...............
2024-05-09 23:35:15,588:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-09 23:35:15,618:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:53: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-09 23:35:20,745:INFO:Initializing create_model()
2024-05-09 23:35:20,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:35:20,745:INFO:Checking exceptions
2024-05-09 23:35:20,745:INFO:Importing libraries
2024-05-09 23:35:20,745:INFO:Copying training dataset
2024-05-09 23:35:20,755:INFO:Defining folds
2024-05-09 23:35:20,755:INFO:Declaring metric variables
2024-05-09 23:35:20,755:INFO:Importing untrained model
2024-05-09 23:35:20,755:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:35:20,755:INFO:Starting cross validation
2024-05-09 23:35:20,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:35:24,873:INFO:Calculating mean and std
2024-05-09 23:35:24,873:INFO:Creating metrics dataframe
2024-05-09 23:35:24,873:INFO:Finalizing model
2024-05-09 23:35:24,963:INFO:Uploading results into container
2024-05-09 23:35:24,963:INFO:Uploading model into container now
2024-05-09 23:35:24,973:INFO:_master_model_container: 1
2024-05-09 23:35:24,973:INFO:_display_container: 2
2024-05-09 23:35:24,973:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:24,973:INFO:create_model() successfully completed......................................
2024-05-09 23:35:25,083:INFO:Initializing tune_model()
2024-05-09 23:35:25,083:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=767), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:35:25,083:INFO:Checking exceptions
2024-05-09 23:35:25,083:INFO:Copying training dataset
2024-05-09 23:35:25,083:INFO:Checking base model
2024-05-09 23:35:25,083:INFO:Base model : Extra Trees Regressor
2024-05-09 23:35:25,083:INFO:Declaring metric variables
2024-05-09 23:35:25,083:INFO:Defining Hyperparameters
2024-05-09 23:35:25,163:INFO:Tuning with n_jobs=-1
2024-05-09 23:35:25,163:INFO:Initializing RandomizedSearchCV
2024-05-09 23:35:33,928:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:35:33,928:INFO:Hyperparameter search completed
2024-05-09 23:35:33,928:INFO:SubProcess create_model() called ==================================
2024-05-09 23:35:33,928:INFO:Initializing create_model()
2024-05-09 23:35:33,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=767), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D8C0E412D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 5, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 23:35:33,928:INFO:Checking exceptions
2024-05-09 23:35:33,928:INFO:Importing libraries
2024-05-09 23:35:33,928:INFO:Copying training dataset
2024-05-09 23:35:33,933:INFO:Defining folds
2024-05-09 23:35:33,933:INFO:Declaring metric variables
2024-05-09 23:35:33,933:INFO:Importing untrained model
2024-05-09 23:35:33,933:INFO:Declaring custom model
2024-05-09 23:35:33,933:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:35:33,933:INFO:Starting cross validation
2024-05-09 23:35:33,933:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:35:34,835:INFO:Calculating mean and std
2024-05-09 23:35:34,835:INFO:Creating metrics dataframe
2024-05-09 23:35:34,835:INFO:Finalizing model
2024-05-09 23:35:35,131:INFO:Uploading results into container
2024-05-09 23:35:35,131:INFO:Uploading model into container now
2024-05-09 23:35:35,131:INFO:_master_model_container: 2
2024-05-09 23:35:35,131:INFO:_display_container: 3
2024-05-09 23:35:35,131:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=5, min_impurity_decrease=0,
                    min_samples_leaf=3, min_samples_split=7, n_estimators=290,
                    n_jobs=-1, random_state=767)
2024-05-09 23:35:35,131:INFO:create_model() successfully completed......................................
2024-05-09 23:35:35,208:INFO:SubProcess create_model() end ==================================
2024-05-09 23:35:35,208:INFO:choose_better activated
2024-05-09 23:35:35,208:INFO:SubProcess create_model() called ==================================
2024-05-09 23:35:35,208:INFO:Initializing create_model()
2024-05-09 23:35:35,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=767), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:35:35,208:INFO:Checking exceptions
2024-05-09 23:35:35,208:INFO:Importing libraries
2024-05-09 23:35:35,208:INFO:Copying training dataset
2024-05-09 23:35:35,208:INFO:Defining folds
2024-05-09 23:35:35,208:INFO:Declaring metric variables
2024-05-09 23:35:35,208:INFO:Importing untrained model
2024-05-09 23:35:35,208:INFO:Declaring custom model
2024-05-09 23:35:35,208:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:35:35,208:INFO:Starting cross validation
2024-05-09 23:35:35,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:35:35,727:INFO:Calculating mean and std
2024-05-09 23:35:35,727:INFO:Creating metrics dataframe
2024-05-09 23:35:35,727:INFO:Finalizing model
2024-05-09 23:35:35,818:INFO:Uploading results into container
2024-05-09 23:35:35,818:INFO:Uploading model into container now
2024-05-09 23:35:35,818:INFO:_master_model_container: 3
2024-05-09 23:35:35,818:INFO:_display_container: 4
2024-05-09 23:35:35,818:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:35,818:INFO:create_model() successfully completed......................................
2024-05-09 23:35:35,888:INFO:SubProcess create_model() end ==================================
2024-05-09 23:35:35,888:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=767) result for R2 is 0.7209
2024-05-09 23:35:35,888:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=5, min_impurity_decrease=0,
                    min_samples_leaf=3, min_samples_split=7, n_estimators=290,
                    n_jobs=-1, random_state=767) result for R2 is 0.6743
2024-05-09 23:35:35,888:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=767) is best model
2024-05-09 23:35:35,888:INFO:choose_better completed
2024-05-09 23:35:35,888:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:35:35,898:INFO:_master_model_container: 3
2024-05-09 23:35:35,898:INFO:_display_container: 3
2024-05-09 23:35:35,898:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:35,898:INFO:tune_model() successfully completed......................................
2024-05-09 23:35:35,979:INFO:Initializing finalize_model()
2024-05-09 23:35:35,979:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=767), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:35:35,979:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:35,979:INFO:Initializing create_model()
2024-05-09 23:35:35,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=767), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:35:35,979:INFO:Checking exceptions
2024-05-09 23:35:35,979:INFO:Importing libraries
2024-05-09 23:35:35,979:INFO:Copying training dataset
2024-05-09 23:35:35,979:INFO:Defining folds
2024-05-09 23:35:35,979:INFO:Declaring metric variables
2024-05-09 23:35:35,979:INFO:Importing untrained model
2024-05-09 23:35:35,979:INFO:Declaring custom model
2024-05-09 23:35:35,979:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:35:35,979:INFO:Cross validation set to False
2024-05-09 23:35:35,979:INFO:Fitting Model
2024-05-09 23:35:36,071:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=767))])
2024-05-09 23:35:36,071:INFO:create_model() successfully completed......................................
2024-05-09 23:35:36,141:INFO:_master_model_container: 3
2024-05-09 23:35:36,141:INFO:_display_container: 3
2024-05-09 23:35:36,151:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=767))])
2024-05-09 23:35:36,151:INFO:finalize_model() successfully completed......................................
2024-05-09 23:35:36,225:INFO:Initializing create_model()
2024-05-09 23:35:36,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:35:36,225:INFO:Checking exceptions
2024-05-09 23:35:36,225:INFO:Importing libraries
2024-05-09 23:35:36,225:INFO:Copying training dataset
2024-05-09 23:35:36,225:INFO:Defining folds
2024-05-09 23:35:36,225:INFO:Declaring metric variables
2024-05-09 23:35:36,225:INFO:Importing untrained model
2024-05-09 23:35:36,225:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:35:36,225:INFO:Starting cross validation
2024-05-09 23:35:36,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:35:36,859:INFO:Calculating mean and std
2024-05-09 23:35:36,859:INFO:Creating metrics dataframe
2024-05-09 23:35:36,859:INFO:Finalizing model
2024-05-09 23:35:36,980:INFO:Uploading results into container
2024-05-09 23:35:36,980:INFO:Uploading model into container now
2024-05-09 23:35:36,987:INFO:_master_model_container: 4
2024-05-09 23:35:36,987:INFO:_display_container: 4
2024-05-09 23:35:36,987:INFO:RandomForestRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:36,987:INFO:create_model() successfully completed......................................
2024-05-09 23:35:37,057:INFO:Initializing tune_model()
2024-05-09 23:35:37,057:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=RandomForestRegressor(n_jobs=-1, random_state=767), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:35:37,057:INFO:Checking exceptions
2024-05-09 23:35:37,057:INFO:Copying training dataset
2024-05-09 23:35:37,067:INFO:Checking base model
2024-05-09 23:35:37,067:INFO:Base model : Random Forest Regressor
2024-05-09 23:35:37,067:INFO:Declaring metric variables
2024-05-09 23:35:37,067:INFO:Defining Hyperparameters
2024-05-09 23:35:37,138:INFO:Tuning with n_jobs=-1
2024-05-09 23:35:37,138:INFO:Initializing RandomizedSearchCV
2024-05-09 23:35:49,313:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:35:49,313:INFO:Hyperparameter search completed
2024-05-09 23:35:49,313:INFO:SubProcess create_model() called ==================================
2024-05-09 23:35:49,313:INFO:Initializing create_model()
2024-05-09 23:35:49,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=RandomForestRegressor(n_jobs=-1, random_state=767), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D8B9944690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 5, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 23:35:49,313:INFO:Checking exceptions
2024-05-09 23:35:49,313:INFO:Importing libraries
2024-05-09 23:35:49,313:INFO:Copying training dataset
2024-05-09 23:35:49,313:INFO:Defining folds
2024-05-09 23:35:49,313:INFO:Declaring metric variables
2024-05-09 23:35:49,313:INFO:Importing untrained model
2024-05-09 23:35:49,313:INFO:Declaring custom model
2024-05-09 23:35:49,320:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:35:49,320:INFO:Starting cross validation
2024-05-09 23:35:49,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:35:50,414:INFO:Calculating mean and std
2024-05-09 23:35:50,414:INFO:Creating metrics dataframe
2024-05-09 23:35:50,414:INFO:Finalizing model
2024-05-09 23:35:50,720:INFO:Uploading results into container
2024-05-09 23:35:50,720:INFO:Uploading model into container now
2024-05-09 23:35:50,720:INFO:_master_model_container: 5
2024-05-09 23:35:50,720:INFO:_display_container: 5
2024-05-09 23:35:50,720:INFO:RandomForestRegressor(max_depth=5, min_impurity_decrease=0, min_samples_leaf=3,
                      min_samples_split=7, n_estimators=290, n_jobs=-1,
                      random_state=767)
2024-05-09 23:35:50,720:INFO:create_model() successfully completed......................................
2024-05-09 23:35:50,798:INFO:SubProcess create_model() end ==================================
2024-05-09 23:35:50,798:INFO:choose_better activated
2024-05-09 23:35:50,798:INFO:SubProcess create_model() called ==================================
2024-05-09 23:35:50,798:INFO:Initializing create_model()
2024-05-09 23:35:50,798:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=RandomForestRegressor(n_jobs=-1, random_state=767), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:35:50,798:INFO:Checking exceptions
2024-05-09 23:35:50,798:INFO:Importing libraries
2024-05-09 23:35:50,798:INFO:Copying training dataset
2024-05-09 23:35:50,798:INFO:Defining folds
2024-05-09 23:35:50,798:INFO:Declaring metric variables
2024-05-09 23:35:50,798:INFO:Importing untrained model
2024-05-09 23:35:50,798:INFO:Declaring custom model
2024-05-09 23:35:50,798:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:35:50,798:INFO:Starting cross validation
2024-05-09 23:35:50,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:35:51,430:INFO:Calculating mean and std
2024-05-09 23:35:51,430:INFO:Creating metrics dataframe
2024-05-09 23:35:51,432:INFO:Finalizing model
2024-05-09 23:35:51,554:INFO:Uploading results into container
2024-05-09 23:35:51,554:INFO:Uploading model into container now
2024-05-09 23:35:51,554:INFO:_master_model_container: 6
2024-05-09 23:35:51,554:INFO:_display_container: 6
2024-05-09 23:35:51,554:INFO:RandomForestRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:51,554:INFO:create_model() successfully completed......................................
2024-05-09 23:35:51,624:INFO:SubProcess create_model() end ==================================
2024-05-09 23:35:51,624:INFO:RandomForestRegressor(n_jobs=-1, random_state=767) result for R2 is 0.7363
2024-05-09 23:35:51,624:INFO:RandomForestRegressor(max_depth=5, min_impurity_decrease=0, min_samples_leaf=3,
                      min_samples_split=7, n_estimators=290, n_jobs=-1,
                      random_state=767) result for R2 is 0.7022
2024-05-09 23:35:51,624:INFO:RandomForestRegressor(n_jobs=-1, random_state=767) is best model
2024-05-09 23:35:51,624:INFO:choose_better completed
2024-05-09 23:35:51,624:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:35:51,636:INFO:_master_model_container: 6
2024-05-09 23:35:51,636:INFO:_display_container: 5
2024-05-09 23:35:51,636:INFO:RandomForestRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:51,636:INFO:tune_model() successfully completed......................................
2024-05-09 23:35:51,714:INFO:Initializing finalize_model()
2024-05-09 23:35:51,714:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=RandomForestRegressor(n_jobs=-1, random_state=767), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:35:51,714:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=767)
2024-05-09 23:35:51,714:INFO:Initializing create_model()
2024-05-09 23:35:51,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D8A5CEB750>, estimator=RandomForestRegressor(n_jobs=-1, random_state=767), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:35:51,714:INFO:Checking exceptions
2024-05-09 23:35:51,714:INFO:Importing libraries
2024-05-09 23:35:51,714:INFO:Copying training dataset
2024-05-09 23:35:51,714:INFO:Defining folds
2024-05-09 23:35:51,714:INFO:Declaring metric variables
2024-05-09 23:35:51,714:INFO:Importing untrained model
2024-05-09 23:35:51,714:INFO:Declaring custom model
2024-05-09 23:35:51,714:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:35:51,714:INFO:Cross validation set to False
2024-05-09 23:35:51,714:INFO:Fitting Model
2024-05-09 23:35:51,849:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=767))])
2024-05-09 23:35:51,849:INFO:create_model() successfully completed......................................
2024-05-09 23:35:51,927:INFO:_master_model_container: 6
2024-05-09 23:35:51,927:INFO:_display_container: 5
2024-05-09 23:35:51,927:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=767))])
2024-05-09 23:35:51,927:INFO:finalize_model() successfully completed......................................
2024-05-09 23:36:40,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:36:40,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:36:40,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:36:40,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 23:36:40,691:INFO:PyCaret RegressionExperiment
2024-05-09 23:36:40,691:INFO:Logging name: reg-default-name
2024-05-09 23:36:40,691:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-09 23:36:40,691:INFO:version 3.3.2
2024-05-09 23:36:40,691:INFO:Initializing setup()
2024-05-09 23:36:40,691:INFO:self.USI: 1ae6
2024-05-09 23:36:40,691:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'y_train', 'X_test', 'y_test', 'gpu_n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'memory', 'y', 'X', 'logging_param', 'seed', 'fold_groups_param', 'n_jobs_param', '_available_plots', 'exp_id', 'USI', 'transform_target_param', 'data', 'idx', 'pipeline', 'html_param', 'fold_generator', 'exp_name_log', 'X_train', '_ml_usecase'}
2024-05-09 23:36:40,691:INFO:Checking environment
2024-05-09 23:36:40,691:INFO:python_version: 3.11.9
2024-05-09 23:36:40,691:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-09 23:36:40,691:INFO:machine: AMD64
2024-05-09 23:36:40,691:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-09 23:36:40,701:INFO:Memory: svmem(total=7947747328, available=1341304832, percent=83.1, used=6606442496, free=1341304832)
2024-05-09 23:36:40,701:INFO:Physical Core: 6
2024-05-09 23:36:40,701:INFO:Logical Core: 6
2024-05-09 23:36:40,701:INFO:Checking libraries
2024-05-09 23:36:40,701:INFO:System:
2024-05-09 23:36:40,701:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-09 23:36:40,701:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-09 23:36:40,701:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-09 23:36:40,701:INFO:PyCaret required dependencies:
2024-05-09 23:36:40,721:INFO:                 pip: 24.0
2024-05-09 23:36:40,721:INFO:          setuptools: 65.5.0
2024-05-09 23:36:40,721:INFO:             pycaret: 3.3.2
2024-05-09 23:36:40,721:INFO:             IPython: 8.24.0
2024-05-09 23:36:40,721:INFO:          ipywidgets: 8.1.2
2024-05-09 23:36:40,721:INFO:                tqdm: 4.66.4
2024-05-09 23:36:40,721:INFO:               numpy: 1.26.4
2024-05-09 23:36:40,721:INFO:              pandas: 2.1.4
2024-05-09 23:36:40,721:INFO:              jinja2: 3.1.4
2024-05-09 23:36:40,721:INFO:               scipy: 1.11.4
2024-05-09 23:36:40,721:INFO:              joblib: 1.3.2
2024-05-09 23:36:40,721:INFO:             sklearn: 1.4.2
2024-05-09 23:36:40,721:INFO:                pyod: 1.1.3
2024-05-09 23:36:40,721:INFO:            imblearn: 0.12.2
2024-05-09 23:36:40,721:INFO:   category_encoders: 2.6.3
2024-05-09 23:36:40,721:INFO:            lightgbm: 4.3.0
2024-05-09 23:36:40,721:INFO:               numba: 0.59.1
2024-05-09 23:36:40,721:INFO:            requests: 2.31.0
2024-05-09 23:36:40,721:INFO:          matplotlib: 3.7.5
2024-05-09 23:36:40,721:INFO:          scikitplot: 0.3.7
2024-05-09 23:36:40,721:INFO:         yellowbrick: 1.5
2024-05-09 23:36:40,721:INFO:              plotly: 5.22.0
2024-05-09 23:36:40,721:INFO:    plotly-resampler: Not installed
2024-05-09 23:36:40,721:INFO:             kaleido: 0.2.1
2024-05-09 23:36:40,721:INFO:           schemdraw: 0.15
2024-05-09 23:36:40,721:INFO:         statsmodels: 0.14.2
2024-05-09 23:36:40,721:INFO:              sktime: 0.26.0
2024-05-09 23:36:40,721:INFO:               tbats: 1.1.3
2024-05-09 23:36:40,721:INFO:            pmdarima: 2.0.4
2024-05-09 23:36:40,721:INFO:              psutil: 5.9.8
2024-05-09 23:36:40,721:INFO:          markupsafe: 2.1.5
2024-05-09 23:36:40,721:INFO:             pickle5: Not installed
2024-05-09 23:36:40,721:INFO:         cloudpickle: 3.0.0
2024-05-09 23:36:40,721:INFO:         deprecation: 2.1.0
2024-05-09 23:36:40,721:INFO:              xxhash: 3.4.1
2024-05-09 23:36:40,721:INFO:           wurlitzer: Not installed
2024-05-09 23:36:40,721:INFO:PyCaret optional dependencies:
2024-05-09 23:36:40,731:INFO:                shap: Not installed
2024-05-09 23:36:40,731:INFO:           interpret: Not installed
2024-05-09 23:36:40,731:INFO:                umap: Not installed
2024-05-09 23:36:40,731:INFO:     ydata_profiling: Not installed
2024-05-09 23:36:40,731:INFO:  explainerdashboard: Not installed
2024-05-09 23:36:40,731:INFO:             autoviz: Not installed
2024-05-09 23:36:40,731:INFO:           fairlearn: Not installed
2024-05-09 23:36:40,731:INFO:          deepchecks: Not installed
2024-05-09 23:36:40,731:INFO:             xgboost: Not installed
2024-05-09 23:36:40,731:INFO:            catboost: Not installed
2024-05-09 23:36:40,731:INFO:              kmodes: Not installed
2024-05-09 23:36:40,731:INFO:             mlxtend: Not installed
2024-05-09 23:36:40,731:INFO:       statsforecast: Not installed
2024-05-09 23:36:40,731:INFO:        tune_sklearn: Not installed
2024-05-09 23:36:40,731:INFO:                 ray: Not installed
2024-05-09 23:36:40,731:INFO:            hyperopt: Not installed
2024-05-09 23:36:40,731:INFO:              optuna: Not installed
2024-05-09 23:36:40,731:INFO:               skopt: Not installed
2024-05-09 23:36:40,731:INFO:              mlflow: Not installed
2024-05-09 23:36:40,731:INFO:              gradio: Not installed
2024-05-09 23:36:40,731:INFO:             fastapi: Not installed
2024-05-09 23:36:40,731:INFO:             uvicorn: Not installed
2024-05-09 23:36:40,731:INFO:              m2cgen: Not installed
2024-05-09 23:36:40,741:INFO:           evidently: Not installed
2024-05-09 23:36:40,741:INFO:               fugue: Not installed
2024-05-09 23:36:40,741:INFO:           streamlit: Not installed
2024-05-09 23:36:40,741:INFO:             prophet: Not installed
2024-05-09 23:36:40,741:INFO:None
2024-05-09 23:36:40,741:INFO:Set up data.
2024-05-09 23:36:40,741:INFO:Set up folding strategy.
2024-05-09 23:36:40,741:INFO:Set up train/test split.
2024-05-09 23:36:40,741:INFO:Set up index.
2024-05-09 23:36:40,741:INFO:Assigning column types.
2024-05-09 23:36:40,741:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-09 23:36:40,741:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,754:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:40,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:40,861:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,871:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,871:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:40,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:40,982:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-09 23:36:40,982:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:36:40,992:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,102:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,102:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,212:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-09 23:36:41,222:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,282:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,342:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,362:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,422:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,472:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-09 23:36:41,542:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,655:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,703:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-09 23:36:41,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,884:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-09 23:36:41,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:41,934:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-09 23:36:42,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,156:INFO:Preparing preprocessing pipeline...
2024-05-09 23:36:42,156:INFO:Set up simple imputation.
2024-05-09 23:36:42,156:INFO:Set up column name cleaning.
2024-05-09 23:36:42,174:INFO:Finished creating preprocessing pipeline.
2024-05-09 23:36:42,184:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-09 23:36:42,184:INFO:Creating final display dataframe.
2024-05-09 23:36:42,244:INFO:Setup _display_container:                     Description             Value
0                    Session id              2597
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1ae6
2024-05-09 23:36:42,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-09 23:36:42,485:INFO:setup() successfully completed in 1.8s...............
2024-05-09 23:36:52,311:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-09 23:36:52,361:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:53: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-09 23:36:57,440:INFO:Initializing create_model()
2024-05-09 23:36:57,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:36:57,440:INFO:Checking exceptions
2024-05-09 23:36:57,440:INFO:Importing libraries
2024-05-09 23:36:57,440:INFO:Copying training dataset
2024-05-09 23:36:57,440:INFO:Defining folds
2024-05-09 23:36:57,440:INFO:Declaring metric variables
2024-05-09 23:36:57,440:INFO:Importing untrained model
2024-05-09 23:36:57,440:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:36:57,440:INFO:Starting cross validation
2024-05-09 23:36:57,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:37:01,861:INFO:Calculating mean and std
2024-05-09 23:37:01,861:INFO:Creating metrics dataframe
2024-05-09 23:37:01,861:INFO:Finalizing model
2024-05-09 23:37:01,951:INFO:Uploading results into container
2024-05-09 23:37:01,951:INFO:Uploading model into container now
2024-05-09 23:37:01,958:INFO:_master_model_container: 1
2024-05-09 23:37:01,958:INFO:_display_container: 2
2024-05-09 23:37:01,958:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:01,958:INFO:create_model() successfully completed......................................
2024-05-09 23:37:02,068:INFO:Initializing tune_model()
2024-05-09 23:37:02,068:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2597), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:37:02,068:INFO:Checking exceptions
2024-05-09 23:37:02,068:INFO:Copying training dataset
2024-05-09 23:37:02,068:INFO:Checking base model
2024-05-09 23:37:02,068:INFO:Base model : Extra Trees Regressor
2024-05-09 23:37:02,068:INFO:Declaring metric variables
2024-05-09 23:37:02,068:INFO:Defining Hyperparameters
2024-05-09 23:37:02,149:INFO:Tuning with n_jobs=-1
2024-05-09 23:37:02,149:INFO:Initializing RandomizedSearchCV
2024-05-09 23:37:12,109:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:37:12,109:INFO:Hyperparameter search completed
2024-05-09 23:37:12,109:INFO:SubProcess create_model() called ==================================
2024-05-09 23:37:12,109:INFO:Initializing create_model()
2024-05-09 23:37:12,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2597), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C00DB59A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.3, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 23:37:12,109:INFO:Checking exceptions
2024-05-09 23:37:12,109:INFO:Importing libraries
2024-05-09 23:37:12,109:INFO:Copying training dataset
2024-05-09 23:37:12,109:INFO:Defining folds
2024-05-09 23:37:12,109:INFO:Declaring metric variables
2024-05-09 23:37:12,109:INFO:Importing untrained model
2024-05-09 23:37:12,109:INFO:Declaring custom model
2024-05-09 23:37:12,109:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:37:12,109:INFO:Starting cross validation
2024-05-09 23:37:12,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:37:12,886:INFO:Calculating mean and std
2024-05-09 23:37:12,886:INFO:Creating metrics dataframe
2024-05-09 23:37:12,890:INFO:Finalizing model
2024-05-09 23:37:13,137:INFO:Uploading results into container
2024-05-09 23:37:13,137:INFO:Uploading model into container now
2024-05-09 23:37:13,137:INFO:_master_model_container: 2
2024-05-09 23:37:13,137:INFO:_display_container: 3
2024-05-09 23:37:13,137:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=11, min_impurity_decrease=0.3,
                    min_samples_leaf=4, min_samples_split=10, n_estimators=240,
                    n_jobs=-1, random_state=2597)
2024-05-09 23:37:13,137:INFO:create_model() successfully completed......................................
2024-05-09 23:37:13,212:INFO:SubProcess create_model() end ==================================
2024-05-09 23:37:13,212:INFO:choose_better activated
2024-05-09 23:37:13,212:INFO:SubProcess create_model() called ==================================
2024-05-09 23:37:13,212:INFO:Initializing create_model()
2024-05-09 23:37:13,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2597), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:37:13,212:INFO:Checking exceptions
2024-05-09 23:37:13,212:INFO:Importing libraries
2024-05-09 23:37:13,212:INFO:Copying training dataset
2024-05-09 23:37:13,212:INFO:Defining folds
2024-05-09 23:37:13,212:INFO:Declaring metric variables
2024-05-09 23:37:13,212:INFO:Importing untrained model
2024-05-09 23:37:13,212:INFO:Declaring custom model
2024-05-09 23:37:13,212:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:37:13,212:INFO:Starting cross validation
2024-05-09 23:37:13,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:37:13,699:INFO:Calculating mean and std
2024-05-09 23:37:13,699:INFO:Creating metrics dataframe
2024-05-09 23:37:13,699:INFO:Finalizing model
2024-05-09 23:37:13,783:INFO:Uploading results into container
2024-05-09 23:37:13,783:INFO:Uploading model into container now
2024-05-09 23:37:13,783:INFO:_master_model_container: 3
2024-05-09 23:37:13,783:INFO:_display_container: 4
2024-05-09 23:37:13,783:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:13,783:INFO:create_model() successfully completed......................................
2024-05-09 23:37:13,850:INFO:SubProcess create_model() end ==================================
2024-05-09 23:37:13,850:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2597) result for R2 is 0.7271
2024-05-09 23:37:13,850:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=11, min_impurity_decrease=0.3,
                    min_samples_leaf=4, min_samples_split=10, n_estimators=240,
                    n_jobs=-1, random_state=2597) result for R2 is 0.6762
2024-05-09 23:37:13,850:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2597) is best model
2024-05-09 23:37:13,850:INFO:choose_better completed
2024-05-09 23:37:13,850:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:37:13,860:INFO:_master_model_container: 3
2024-05-09 23:37:13,860:INFO:_display_container: 3
2024-05-09 23:37:13,860:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:13,860:INFO:tune_model() successfully completed......................................
2024-05-09 23:37:13,941:INFO:Initializing finalize_model()
2024-05-09 23:37:13,941:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2597), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:37:13,941:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:13,941:INFO:Initializing create_model()
2024-05-09 23:37:13,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=2597), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:37:13,941:INFO:Checking exceptions
2024-05-09 23:37:13,941:INFO:Importing libraries
2024-05-09 23:37:13,941:INFO:Copying training dataset
2024-05-09 23:37:13,941:INFO:Defining folds
2024-05-09 23:37:13,941:INFO:Declaring metric variables
2024-05-09 23:37:13,941:INFO:Importing untrained model
2024-05-09 23:37:13,941:INFO:Declaring custom model
2024-05-09 23:37:13,941:INFO:Extra Trees Regressor Imported successfully
2024-05-09 23:37:13,941:INFO:Cross validation set to False
2024-05-09 23:37:13,941:INFO:Fitting Model
2024-05-09 23:37:14,032:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2597))])
2024-05-09 23:37:14,032:INFO:create_model() successfully completed......................................
2024-05-09 23:37:14,102:INFO:_master_model_container: 3
2024-05-09 23:37:14,102:INFO:_display_container: 3
2024-05-09 23:37:14,102:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2597))])
2024-05-09 23:37:14,102:INFO:finalize_model() successfully completed......................................
2024-05-09 23:37:14,183:INFO:Initializing create_model()
2024-05-09 23:37:14,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:37:14,183:INFO:Checking exceptions
2024-05-09 23:37:14,183:INFO:Importing libraries
2024-05-09 23:37:14,183:INFO:Copying training dataset
2024-05-09 23:37:14,183:INFO:Defining folds
2024-05-09 23:37:14,183:INFO:Declaring metric variables
2024-05-09 23:37:14,183:INFO:Importing untrained model
2024-05-09 23:37:14,183:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:37:14,183:INFO:Starting cross validation
2024-05-09 23:37:14,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:37:14,814:INFO:Calculating mean and std
2024-05-09 23:37:14,814:INFO:Creating metrics dataframe
2024-05-09 23:37:14,814:INFO:Finalizing model
2024-05-09 23:37:14,935:INFO:Uploading results into container
2024-05-09 23:37:14,935:INFO:Uploading model into container now
2024-05-09 23:37:14,941:INFO:_master_model_container: 4
2024-05-09 23:37:14,941:INFO:_display_container: 4
2024-05-09 23:37:14,941:INFO:RandomForestRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:14,941:INFO:create_model() successfully completed......................................
2024-05-09 23:37:15,021:INFO:Initializing tune_model()
2024-05-09 23:37:15,021:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2597), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-09 23:37:15,021:INFO:Checking exceptions
2024-05-09 23:37:15,021:INFO:Copying training dataset
2024-05-09 23:37:15,021:INFO:Checking base model
2024-05-09 23:37:15,021:INFO:Base model : Random Forest Regressor
2024-05-09 23:37:15,021:INFO:Declaring metric variables
2024-05-09 23:37:15,021:INFO:Defining Hyperparameters
2024-05-09 23:37:15,102:INFO:Tuning with n_jobs=-1
2024-05-09 23:37:15,102:INFO:Initializing RandomizedSearchCV
2024-05-09 23:37:30,382:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-09 23:37:30,382:INFO:Hyperparameter search completed
2024-05-09 23:37:30,382:INFO:SubProcess create_model() called ==================================
2024-05-09 23:37:30,382:INFO:Initializing create_model()
2024-05-09 23:37:30,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2597), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C004ACC050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.3, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-09 23:37:30,382:INFO:Checking exceptions
2024-05-09 23:37:30,382:INFO:Importing libraries
2024-05-09 23:37:30,382:INFO:Copying training dataset
2024-05-09 23:37:30,386:INFO:Defining folds
2024-05-09 23:37:30,386:INFO:Declaring metric variables
2024-05-09 23:37:30,386:INFO:Importing untrained model
2024-05-09 23:37:30,386:INFO:Declaring custom model
2024-05-09 23:37:30,386:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:37:30,386:INFO:Starting cross validation
2024-05-09 23:37:30,386:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:37:31,464:INFO:Calculating mean and std
2024-05-09 23:37:31,464:INFO:Creating metrics dataframe
2024-05-09 23:37:31,464:INFO:Finalizing model
2024-05-09 23:37:31,746:INFO:Uploading results into container
2024-05-09 23:37:31,746:INFO:Uploading model into container now
2024-05-09 23:37:31,746:INFO:_master_model_container: 5
2024-05-09 23:37:31,746:INFO:_display_container: 5
2024-05-09 23:37:31,746:INFO:RandomForestRegressor(max_depth=11, min_impurity_decrease=0.3,
                      min_samples_leaf=4, min_samples_split=10,
                      n_estimators=240, n_jobs=-1, random_state=2597)
2024-05-09 23:37:31,746:INFO:create_model() successfully completed......................................
2024-05-09 23:37:31,843:INFO:SubProcess create_model() end ==================================
2024-05-09 23:37:31,843:INFO:choose_better activated
2024-05-09 23:37:31,843:INFO:SubProcess create_model() called ==================================
2024-05-09 23:37:31,843:INFO:Initializing create_model()
2024-05-09 23:37:31,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2597), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:37:31,843:INFO:Checking exceptions
2024-05-09 23:37:31,843:INFO:Importing libraries
2024-05-09 23:37:31,843:INFO:Copying training dataset
2024-05-09 23:37:31,853:INFO:Defining folds
2024-05-09 23:37:31,853:INFO:Declaring metric variables
2024-05-09 23:37:31,853:INFO:Importing untrained model
2024-05-09 23:37:31,853:INFO:Declaring custom model
2024-05-09 23:37:31,853:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:37:31,853:INFO:Starting cross validation
2024-05-09 23:37:31,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-09 23:37:32,515:INFO:Calculating mean and std
2024-05-09 23:37:32,515:INFO:Creating metrics dataframe
2024-05-09 23:37:32,515:INFO:Finalizing model
2024-05-09 23:37:32,650:INFO:Uploading results into container
2024-05-09 23:37:32,650:INFO:Uploading model into container now
2024-05-09 23:37:32,650:INFO:_master_model_container: 6
2024-05-09 23:37:32,650:INFO:_display_container: 6
2024-05-09 23:37:32,650:INFO:RandomForestRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:32,650:INFO:create_model() successfully completed......................................
2024-05-09 23:37:32,734:INFO:SubProcess create_model() end ==================================
2024-05-09 23:37:32,734:INFO:RandomForestRegressor(n_jobs=-1, random_state=2597) result for R2 is 0.7269
2024-05-09 23:37:32,734:INFO:RandomForestRegressor(max_depth=11, min_impurity_decrease=0.3,
                      min_samples_leaf=4, min_samples_split=10,
                      n_estimators=240, n_jobs=-1, random_state=2597) result for R2 is 0.6957
2024-05-09 23:37:32,734:INFO:RandomForestRegressor(n_jobs=-1, random_state=2597) is best model
2024-05-09 23:37:32,734:INFO:choose_better completed
2024-05-09 23:37:32,734:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-09 23:37:32,744:INFO:_master_model_container: 6
2024-05-09 23:37:32,744:INFO:_display_container: 5
2024-05-09 23:37:32,744:INFO:RandomForestRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:32,744:INFO:tune_model() successfully completed......................................
2024-05-09 23:37:32,824:INFO:Initializing finalize_model()
2024-05-09 23:37:32,824:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2597), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-09 23:37:32,824:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=2597)
2024-05-09 23:37:32,824:INFO:Initializing create_model()
2024-05-09 23:37:32,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2597), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-09 23:37:32,824:INFO:Checking exceptions
2024-05-09 23:37:32,824:INFO:Importing libraries
2024-05-09 23:37:32,824:INFO:Copying training dataset
2024-05-09 23:37:32,824:INFO:Defining folds
2024-05-09 23:37:32,824:INFO:Declaring metric variables
2024-05-09 23:37:32,824:INFO:Importing untrained model
2024-05-09 23:37:32,824:INFO:Declaring custom model
2024-05-09 23:37:32,824:INFO:Random Forest Regressor Imported successfully
2024-05-09 23:37:32,824:INFO:Cross validation set to False
2024-05-09 23:37:32,824:INFO:Fitting Model
2024-05-09 23:37:32,966:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2597))])
2024-05-09 23:37:32,966:INFO:create_model() successfully completed......................................
2024-05-09 23:37:33,036:INFO:_master_model_container: 6
2024-05-09 23:37:33,036:INFO:_display_container: 5
2024-05-09 23:37:33,036:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2597))])
2024-05-09 23:37:33,036:INFO:finalize_model() successfully completed......................................
2024-05-09 23:44:34,424:INFO:Initializing predict_model()
2024-05-09 23:44:34,424:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C00A224360>)
2024-05-09 23:44:34,424:INFO:Checking exceptions
2024-05-09 23:44:34,424:INFO:Preloading libraries
2024-05-09 23:44:34,434:INFO:Set up data.
2024-05-09 23:44:34,444:INFO:Set up index.
2024-05-09 23:44:34,715:INFO:Initializing predict_model()
2024-05-09 23:44:34,715:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C07364C680>)
2024-05-09 23:44:34,715:INFO:Checking exceptions
2024-05-09 23:44:34,715:INFO:Preloading libraries
2024-05-09 23:44:34,715:INFO:Set up data.
2024-05-09 23:44:34,715:INFO:Set up index.
2024-05-09 23:45:21,072:INFO:Initializing predict_model()
2024-05-09 23:45:21,072:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C0051D4900>)
2024-05-09 23:45:21,072:INFO:Checking exceptions
2024-05-09 23:45:21,072:INFO:Preloading libraries
2024-05-09 23:45:21,072:INFO:Set up data.
2024-05-09 23:45:21,082:INFO:Set up index.
2024-05-09 23:45:21,182:INFO:Initializing predict_model()
2024-05-09 23:45:21,182:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C0051F77E0>)
2024-05-09 23:45:21,182:INFO:Checking exceptions
2024-05-09 23:45:21,182:INFO:Preloading libraries
2024-05-09 23:45:21,182:INFO:Set up data.
2024-05-09 23:45:21,182:INFO:Set up index.
2024-05-10 00:42:19,733:INFO:Initializing predict_model()
2024-05-10 00:42:19,753:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C00A224860>)
2024-05-10 00:42:19,753:INFO:Checking exceptions
2024-05-10 00:42:19,753:INFO:Preloading libraries
2024-05-10 00:42:19,823:INFO:Set up data.
2024-05-10 00:42:19,913:INFO:Set up index.
2024-05-10 00:42:21,116:INFO:Initializing predict_model()
2024-05-10 00:42:21,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C003485BC0>)
2024-05-10 00:42:21,116:INFO:Checking exceptions
2024-05-10 00:42:21,116:INFO:Preloading libraries
2024-05-10 00:42:21,116:INFO:Set up data.
2024-05-10 00:42:21,116:INFO:Set up index.
2024-05-10 00:42:21,176:INFO:Initializing predict_model()
2024-05-10 00:42:21,176:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C00A224220>)
2024-05-10 00:42:21,176:INFO:Checking exceptions
2024-05-10 00:42:21,176:INFO:Preloading libraries
2024-05-10 00:42:21,176:INFO:Set up data.
2024-05-10 00:42:21,176:INFO:Set up index.
2024-05-10 00:42:21,495:INFO:Initializing predict_model()
2024-05-10 00:42:21,495:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C070F7A5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2597))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C00A2247C0>)
2024-05-10 00:42:21,495:INFO:Checking exceptions
2024-05-10 00:42:21,495:INFO:Preloading libraries
2024-05-10 00:42:21,495:INFO:Set up data.
2024-05-10 00:42:21,497:INFO:Set up index.
2024-05-10 08:33:33,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 08:33:33,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 08:33:33,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 08:33:33,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 08:33:33,599:INFO:PyCaret RegressionExperiment
2024-05-10 08:33:33,599:INFO:Logging name: reg-default-name
2024-05-10 08:33:33,599:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-10 08:33:33,599:INFO:version 3.3.2
2024-05-10 08:33:33,599:INFO:Initializing setup()
2024-05-10 08:33:33,599:INFO:self.USI: b14e
2024-05-10 08:33:33,599:INFO:self._variable_keys: {'target_param', 'USI', 'X', 'memory', 'transform_target_param', 'gpu_param', 'X_train', 'y_train', 'data', 'seed', 'logging_param', '_ml_usecase', 'exp_name_log', 'y', 'exp_id', 'X_test', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_groups_param', 'idx', 'pipeline', '_available_plots', 'fold_shuffle_param', 'fold_generator', 'y_test', 'log_plots_param', 'html_param'}
2024-05-10 08:33:33,599:INFO:Checking environment
2024-05-10 08:33:33,599:INFO:python_version: 3.11.9
2024-05-10 08:33:33,599:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-10 08:33:33,599:INFO:machine: AMD64
2024-05-10 08:33:33,609:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-10 08:33:33,619:INFO:Memory: svmem(total=7947747328, available=2944999424, percent=62.9, used=5002747904, free=2944999424)
2024-05-10 08:33:33,619:INFO:Physical Core: 6
2024-05-10 08:33:33,619:INFO:Logical Core: 6
2024-05-10 08:33:33,619:INFO:Checking libraries
2024-05-10 08:33:33,619:INFO:System:
2024-05-10 08:33:33,619:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-10 08:33:33,619:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-10 08:33:33,619:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-10 08:33:33,619:INFO:PyCaret required dependencies:
2024-05-10 08:33:33,669:INFO:                 pip: 24.0
2024-05-10 08:33:33,669:INFO:          setuptools: 65.5.0
2024-05-10 08:33:33,669:INFO:             pycaret: 3.3.2
2024-05-10 08:33:33,669:INFO:             IPython: 8.24.0
2024-05-10 08:33:33,669:INFO:          ipywidgets: 8.1.2
2024-05-10 08:33:33,669:INFO:                tqdm: 4.66.4
2024-05-10 08:33:33,669:INFO:               numpy: 1.26.4
2024-05-10 08:33:33,669:INFO:              pandas: 2.1.4
2024-05-10 08:33:33,669:INFO:              jinja2: 3.1.4
2024-05-10 08:33:33,669:INFO:               scipy: 1.11.4
2024-05-10 08:33:33,669:INFO:              joblib: 1.3.2
2024-05-10 08:33:33,669:INFO:             sklearn: 1.4.2
2024-05-10 08:33:33,669:INFO:                pyod: 1.1.3
2024-05-10 08:33:33,669:INFO:            imblearn: 0.12.2
2024-05-10 08:33:33,669:INFO:   category_encoders: 2.6.3
2024-05-10 08:33:33,669:INFO:            lightgbm: 4.3.0
2024-05-10 08:33:33,669:INFO:               numba: 0.59.1
2024-05-10 08:33:33,669:INFO:            requests: 2.31.0
2024-05-10 08:33:33,669:INFO:          matplotlib: 3.7.5
2024-05-10 08:33:33,669:INFO:          scikitplot: 0.3.7
2024-05-10 08:33:33,669:INFO:         yellowbrick: 1.5
2024-05-10 08:33:33,669:INFO:              plotly: 5.22.0
2024-05-10 08:33:33,669:INFO:    plotly-resampler: Not installed
2024-05-10 08:33:33,669:INFO:             kaleido: 0.2.1
2024-05-10 08:33:33,669:INFO:           schemdraw: 0.15
2024-05-10 08:33:33,669:INFO:         statsmodels: 0.14.2
2024-05-10 08:33:33,669:INFO:              sktime: 0.26.0
2024-05-10 08:33:33,669:INFO:               tbats: 1.1.3
2024-05-10 08:33:33,669:INFO:            pmdarima: 2.0.4
2024-05-10 08:33:33,669:INFO:              psutil: 5.9.8
2024-05-10 08:33:33,669:INFO:          markupsafe: 2.1.5
2024-05-10 08:33:33,669:INFO:             pickle5: Not installed
2024-05-10 08:33:33,669:INFO:         cloudpickle: 3.0.0
2024-05-10 08:33:33,669:INFO:         deprecation: 2.1.0
2024-05-10 08:33:33,669:INFO:              xxhash: 3.4.1
2024-05-10 08:33:33,669:INFO:           wurlitzer: Not installed
2024-05-10 08:33:33,669:INFO:PyCaret optional dependencies:
2024-05-10 08:33:33,679:INFO:                shap: Not installed
2024-05-10 08:33:33,679:INFO:           interpret: Not installed
2024-05-10 08:33:33,679:INFO:                umap: Not installed
2024-05-10 08:33:33,679:INFO:     ydata_profiling: Not installed
2024-05-10 08:33:33,679:INFO:  explainerdashboard: Not installed
2024-05-10 08:33:33,679:INFO:             autoviz: Not installed
2024-05-10 08:33:33,679:INFO:           fairlearn: Not installed
2024-05-10 08:33:33,679:INFO:          deepchecks: Not installed
2024-05-10 08:33:33,679:INFO:             xgboost: Not installed
2024-05-10 08:33:33,679:INFO:            catboost: Not installed
2024-05-10 08:33:33,679:INFO:              kmodes: Not installed
2024-05-10 08:33:33,679:INFO:             mlxtend: Not installed
2024-05-10 08:33:33,679:INFO:       statsforecast: Not installed
2024-05-10 08:33:33,679:INFO:        tune_sklearn: Not installed
2024-05-10 08:33:33,679:INFO:                 ray: Not installed
2024-05-10 08:33:33,679:INFO:            hyperopt: Not installed
2024-05-10 08:33:33,679:INFO:              optuna: Not installed
2024-05-10 08:33:33,679:INFO:               skopt: Not installed
2024-05-10 08:33:33,679:INFO:              mlflow: Not installed
2024-05-10 08:33:33,679:INFO:              gradio: Not installed
2024-05-10 08:33:33,679:INFO:             fastapi: Not installed
2024-05-10 08:33:33,679:INFO:             uvicorn: Not installed
2024-05-10 08:33:33,679:INFO:              m2cgen: Not installed
2024-05-10 08:33:33,679:INFO:           evidently: Not installed
2024-05-10 08:33:33,679:INFO:               fugue: Not installed
2024-05-10 08:33:33,679:INFO:           streamlit: Not installed
2024-05-10 08:33:33,679:INFO:             prophet: Not installed
2024-05-10 08:33:33,679:INFO:None
2024-05-10 08:33:33,679:INFO:Set up data.
2024-05-10 08:33:33,689:INFO:Set up folding strategy.
2024-05-10 08:33:33,689:INFO:Set up train/test split.
2024-05-10 08:33:33,689:INFO:Set up index.
2024-05-10 08:33:33,689:INFO:Assigning column types.
2024-05-10 08:33:33,699:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-10 08:33:33,699:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,699:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,709:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:33,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:33,809:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,819:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,819:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:33,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:33,929:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-10 08:33:33,939:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,939:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 08:33:33,999:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,049:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,059:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,160:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,160:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-10 08:33:34,170:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,230:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,290:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,350:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,400:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,400:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-10 08:33:34,470:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,580:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,630:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-10 08:33:34,700:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,811:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 08:33:34,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,861:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-10 08:33:34,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:34,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,091:INFO:Preparing preprocessing pipeline...
2024-05-10 08:33:35,091:INFO:Set up simple imputation.
2024-05-10 08:33:35,091:INFO:Set up column name cleaning.
2024-05-10 08:33:35,131:INFO:Finished creating preprocessing pipeline.
2024-05-10 08:33:35,131:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-10 08:33:35,131:INFO:Creating final display dataframe.
2024-05-10 08:33:35,201:INFO:Setup _display_container:                     Description             Value
0                    Session id              5163
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b14e
2024-05-10 08:33:35,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 08:33:35,432:INFO:setup() successfully completed in 1.83s...............
2024-05-10 08:33:45,592:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-10 08:33:45,632:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:53: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-10 08:33:50,342:INFO:Initializing create_model()
2024-05-10 08:33:50,342:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 08:33:50,342:INFO:Checking exceptions
2024-05-10 08:33:50,342:INFO:Importing libraries
2024-05-10 08:33:50,342:INFO:Copying training dataset
2024-05-10 08:33:50,342:INFO:Defining folds
2024-05-10 08:33:50,342:INFO:Declaring metric variables
2024-05-10 08:33:50,342:INFO:Importing untrained model
2024-05-10 08:33:50,352:INFO:Extra Trees Regressor Imported successfully
2024-05-10 08:33:50,352:INFO:Starting cross validation
2024-05-10 08:33:50,352:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 08:33:53,990:INFO:Calculating mean and std
2024-05-10 08:33:53,990:INFO:Creating metrics dataframe
2024-05-10 08:33:53,990:INFO:Finalizing model
2024-05-10 08:33:54,072:INFO:Uploading results into container
2024-05-10 08:33:54,072:INFO:Uploading model into container now
2024-05-10 08:33:54,079:INFO:_master_model_container: 1
2024-05-10 08:33:54,079:INFO:_display_container: 2
2024-05-10 08:33:54,079:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:33:54,079:INFO:create_model() successfully completed......................................
2024-05-10 08:33:54,189:INFO:Initializing tune_model()
2024-05-10 08:33:54,189:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5163), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-10 08:33:54,189:INFO:Checking exceptions
2024-05-10 08:33:54,189:INFO:Copying training dataset
2024-05-10 08:33:54,189:INFO:Checking base model
2024-05-10 08:33:54,189:INFO:Base model : Extra Trees Regressor
2024-05-10 08:33:54,189:INFO:Declaring metric variables
2024-05-10 08:33:54,189:INFO:Defining Hyperparameters
2024-05-10 08:33:54,269:INFO:Tuning with n_jobs=-1
2024-05-10 08:33:54,269:INFO:Initializing RandomizedSearchCV
2024-05-10 08:34:04,239:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-10 08:34:04,239:INFO:Hyperparameter search completed
2024-05-10 08:34:04,239:INFO:SubProcess create_model() called ==================================
2024-05-10 08:34:04,239:INFO:Initializing create_model()
2024-05-10 08:34:04,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5163), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F581FE7390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 10, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-10 08:34:04,239:INFO:Checking exceptions
2024-05-10 08:34:04,239:INFO:Importing libraries
2024-05-10 08:34:04,239:INFO:Copying training dataset
2024-05-10 08:34:04,239:INFO:Defining folds
2024-05-10 08:34:04,239:INFO:Declaring metric variables
2024-05-10 08:34:04,239:INFO:Importing untrained model
2024-05-10 08:34:04,239:INFO:Declaring custom model
2024-05-10 08:34:04,239:INFO:Extra Trees Regressor Imported successfully
2024-05-10 08:34:04,239:INFO:Starting cross validation
2024-05-10 08:34:04,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 08:34:04,462:INFO:Calculating mean and std
2024-05-10 08:34:04,462:INFO:Creating metrics dataframe
2024-05-10 08:34:04,462:INFO:Finalizing model
2024-05-10 08:34:04,517:INFO:Uploading results into container
2024-05-10 08:34:04,517:INFO:Uploading model into container now
2024-05-10 08:34:04,517:INFO:_master_model_container: 2
2024-05-10 08:34:04,517:INFO:_display_container: 3
2024-05-10 08:34:04,517:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=6, min_impurity_decrease=0.1,
                    min_samples_leaf=5, min_samples_split=10, n_estimators=40,
                    n_jobs=-1, random_state=5163)
2024-05-10 08:34:04,517:INFO:create_model() successfully completed......................................
2024-05-10 08:34:04,582:INFO:SubProcess create_model() end ==================================
2024-05-10 08:34:04,582:INFO:choose_better activated
2024-05-10 08:34:04,592:INFO:SubProcess create_model() called ==================================
2024-05-10 08:34:04,592:INFO:Initializing create_model()
2024-05-10 08:34:04,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5163), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 08:34:04,592:INFO:Checking exceptions
2024-05-10 08:34:04,592:INFO:Importing libraries
2024-05-10 08:34:04,592:INFO:Copying training dataset
2024-05-10 08:34:04,592:INFO:Defining folds
2024-05-10 08:34:04,592:INFO:Declaring metric variables
2024-05-10 08:34:04,592:INFO:Importing untrained model
2024-05-10 08:34:04,592:INFO:Declaring custom model
2024-05-10 08:34:04,592:INFO:Extra Trees Regressor Imported successfully
2024-05-10 08:34:04,592:INFO:Starting cross validation
2024-05-10 08:34:04,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 08:34:05,045:INFO:Calculating mean and std
2024-05-10 08:34:05,045:INFO:Creating metrics dataframe
2024-05-10 08:34:05,048:INFO:Finalizing model
2024-05-10 08:34:05,124:INFO:Uploading results into container
2024-05-10 08:34:05,124:INFO:Uploading model into container now
2024-05-10 08:34:05,124:INFO:_master_model_container: 3
2024-05-10 08:34:05,124:INFO:_display_container: 4
2024-05-10 08:34:05,124:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:05,124:INFO:create_model() successfully completed......................................
2024-05-10 08:34:05,199:INFO:SubProcess create_model() end ==================================
2024-05-10 08:34:05,199:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5163) result for R2 is 0.7649
2024-05-10 08:34:05,199:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=6, min_impurity_decrease=0.1,
                    min_samples_leaf=5, min_samples_split=10, n_estimators=40,
                    n_jobs=-1, random_state=5163) result for R2 is 0.6792
2024-05-10 08:34:05,199:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5163) is best model
2024-05-10 08:34:05,199:INFO:choose_better completed
2024-05-10 08:34:05,199:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-10 08:34:05,199:INFO:_master_model_container: 3
2024-05-10 08:34:05,199:INFO:_display_container: 3
2024-05-10 08:34:05,199:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:05,199:INFO:tune_model() successfully completed......................................
2024-05-10 08:34:05,279:INFO:Initializing finalize_model()
2024-05-10 08:34:05,279:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5163), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-10 08:34:05,279:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:05,279:INFO:Initializing create_model()
2024-05-10 08:34:05,279:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=5163), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 08:34:05,279:INFO:Checking exceptions
2024-05-10 08:34:05,279:INFO:Importing libraries
2024-05-10 08:34:05,279:INFO:Copying training dataset
2024-05-10 08:34:05,279:INFO:Defining folds
2024-05-10 08:34:05,279:INFO:Declaring metric variables
2024-05-10 08:34:05,279:INFO:Importing untrained model
2024-05-10 08:34:05,279:INFO:Declaring custom model
2024-05-10 08:34:05,279:INFO:Extra Trees Regressor Imported successfully
2024-05-10 08:34:05,279:INFO:Cross validation set to False
2024-05-10 08:34:05,279:INFO:Fitting Model
2024-05-10 08:34:05,360:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5163))])
2024-05-10 08:34:05,360:INFO:create_model() successfully completed......................................
2024-05-10 08:34:05,429:INFO:_master_model_container: 3
2024-05-10 08:34:05,429:INFO:_display_container: 3
2024-05-10 08:34:05,439:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5163))])
2024-05-10 08:34:05,439:INFO:finalize_model() successfully completed......................................
2024-05-10 08:34:05,509:INFO:Initializing create_model()
2024-05-10 08:34:05,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 08:34:05,509:INFO:Checking exceptions
2024-05-10 08:34:05,509:INFO:Importing libraries
2024-05-10 08:34:05,509:INFO:Copying training dataset
2024-05-10 08:34:05,509:INFO:Defining folds
2024-05-10 08:34:05,509:INFO:Declaring metric variables
2024-05-10 08:34:05,509:INFO:Importing untrained model
2024-05-10 08:34:05,509:INFO:Random Forest Regressor Imported successfully
2024-05-10 08:34:05,509:INFO:Starting cross validation
2024-05-10 08:34:05,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 08:34:06,110:INFO:Calculating mean and std
2024-05-10 08:34:06,110:INFO:Creating metrics dataframe
2024-05-10 08:34:06,110:INFO:Finalizing model
2024-05-10 08:34:06,236:INFO:Uploading results into container
2024-05-10 08:34:06,239:INFO:Uploading model into container now
2024-05-10 08:34:06,241:INFO:_master_model_container: 4
2024-05-10 08:34:06,241:INFO:_display_container: 4
2024-05-10 08:34:06,241:INFO:RandomForestRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:06,241:INFO:create_model() successfully completed......................................
2024-05-10 08:34:06,319:INFO:Initializing tune_model()
2024-05-10 08:34:06,319:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5163), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-10 08:34:06,319:INFO:Checking exceptions
2024-05-10 08:34:06,319:INFO:Copying training dataset
2024-05-10 08:34:06,319:INFO:Checking base model
2024-05-10 08:34:06,319:INFO:Base model : Random Forest Regressor
2024-05-10 08:34:06,319:INFO:Declaring metric variables
2024-05-10 08:34:06,319:INFO:Defining Hyperparameters
2024-05-10 08:34:06,389:INFO:Tuning with n_jobs=-1
2024-05-10 08:34:06,399:INFO:Initializing RandomizedSearchCV
2024-05-10 08:34:25,744:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-10 08:34:25,744:INFO:Hyperparameter search completed
2024-05-10 08:34:25,744:INFO:SubProcess create_model() called ==================================
2024-05-10 08:34:25,744:INFO:Initializing create_model()
2024-05-10 08:34:25,744:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5163), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F581A80F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 10, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-10 08:34:25,744:INFO:Checking exceptions
2024-05-10 08:34:25,744:INFO:Importing libraries
2024-05-10 08:34:25,744:INFO:Copying training dataset
2024-05-10 08:34:25,749:INFO:Defining folds
2024-05-10 08:34:25,749:INFO:Declaring metric variables
2024-05-10 08:34:25,749:INFO:Importing untrained model
2024-05-10 08:34:25,749:INFO:Declaring custom model
2024-05-10 08:34:25,749:INFO:Random Forest Regressor Imported successfully
2024-05-10 08:34:25,749:INFO:Starting cross validation
2024-05-10 08:34:25,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 08:34:26,068:INFO:Calculating mean and std
2024-05-10 08:34:26,068:INFO:Creating metrics dataframe
2024-05-10 08:34:26,068:INFO:Finalizing model
2024-05-10 08:34:26,134:INFO:Uploading results into container
2024-05-10 08:34:26,134:INFO:Uploading model into container now
2024-05-10 08:34:26,134:INFO:_master_model_container: 5
2024-05-10 08:34:26,134:INFO:_display_container: 5
2024-05-10 08:34:26,134:INFO:RandomForestRegressor(max_depth=6, min_impurity_decrease=0.1,
                      min_samples_leaf=5, min_samples_split=10, n_estimators=40,
                      n_jobs=-1, random_state=5163)
2024-05-10 08:34:26,134:INFO:create_model() successfully completed......................................
2024-05-10 08:34:26,213:INFO:SubProcess create_model() end ==================================
2024-05-10 08:34:26,213:INFO:choose_better activated
2024-05-10 08:34:26,213:INFO:SubProcess create_model() called ==================================
2024-05-10 08:34:26,213:INFO:Initializing create_model()
2024-05-10 08:34:26,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5163), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 08:34:26,213:INFO:Checking exceptions
2024-05-10 08:34:26,213:INFO:Importing libraries
2024-05-10 08:34:26,213:INFO:Copying training dataset
2024-05-10 08:34:26,213:INFO:Defining folds
2024-05-10 08:34:26,213:INFO:Declaring metric variables
2024-05-10 08:34:26,213:INFO:Importing untrained model
2024-05-10 08:34:26,213:INFO:Declaring custom model
2024-05-10 08:34:26,213:INFO:Random Forest Regressor Imported successfully
2024-05-10 08:34:26,213:INFO:Starting cross validation
2024-05-10 08:34:26,213:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 08:34:26,926:INFO:Calculating mean and std
2024-05-10 08:34:26,926:INFO:Creating metrics dataframe
2024-05-10 08:34:26,926:INFO:Finalizing model
2024-05-10 08:34:27,064:INFO:Uploading results into container
2024-05-10 08:34:27,064:INFO:Uploading model into container now
2024-05-10 08:34:27,064:INFO:_master_model_container: 6
2024-05-10 08:34:27,064:INFO:_display_container: 6
2024-05-10 08:34:27,064:INFO:RandomForestRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:27,064:INFO:create_model() successfully completed......................................
2024-05-10 08:34:27,143:INFO:SubProcess create_model() end ==================================
2024-05-10 08:34:27,143:INFO:RandomForestRegressor(n_jobs=-1, random_state=5163) result for R2 is 0.7564
2024-05-10 08:34:27,143:INFO:RandomForestRegressor(max_depth=6, min_impurity_decrease=0.1,
                      min_samples_leaf=5, min_samples_split=10, n_estimators=40,
                      n_jobs=-1, random_state=5163) result for R2 is 0.7163
2024-05-10 08:34:27,143:INFO:RandomForestRegressor(n_jobs=-1, random_state=5163) is best model
2024-05-10 08:34:27,143:INFO:choose_better completed
2024-05-10 08:34:27,143:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-10 08:34:27,143:INFO:_master_model_container: 6
2024-05-10 08:34:27,143:INFO:_display_container: 5
2024-05-10 08:34:27,143:INFO:RandomForestRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:27,143:INFO:tune_model() successfully completed......................................
2024-05-10 08:34:27,233:INFO:Initializing finalize_model()
2024-05-10 08:34:27,233:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5163), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-10 08:34:27,233:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=5163)
2024-05-10 08:34:27,233:INFO:Initializing create_model()
2024-05-10 08:34:27,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5163), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 08:34:27,233:INFO:Checking exceptions
2024-05-10 08:34:27,233:INFO:Importing libraries
2024-05-10 08:34:27,233:INFO:Copying training dataset
2024-05-10 08:34:27,233:INFO:Defining folds
2024-05-10 08:34:27,233:INFO:Declaring metric variables
2024-05-10 08:34:27,233:INFO:Importing untrained model
2024-05-10 08:34:27,233:INFO:Declaring custom model
2024-05-10 08:34:27,233:INFO:Random Forest Regressor Imported successfully
2024-05-10 08:34:27,233:INFO:Cross validation set to False
2024-05-10 08:34:27,233:INFO:Fitting Model
2024-05-10 08:34:27,365:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5163))])
2024-05-10 08:34:27,365:INFO:create_model() successfully completed......................................
2024-05-10 08:34:27,444:INFO:_master_model_container: 6
2024-05-10 08:34:27,444:INFO:_display_container: 5
2024-05-10 08:34:27,444:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5163))])
2024-05-10 08:34:27,444:INFO:finalize_model() successfully completed......................................
2024-05-10 08:34:32,595:INFO:Initializing predict_model()
2024-05-10 08:34:32,595:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=5163))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F5819CC040>)
2024-05-10 08:34:32,595:INFO:Checking exceptions
2024-05-10 08:34:32,595:INFO:Preloading libraries
2024-05-10 08:34:32,595:INFO:Set up data.
2024-05-10 08:34:32,605:INFO:Set up index.
2024-05-10 08:34:32,725:INFO:Initializing predict_model()
2024-05-10 08:34:32,725:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5EDBF25D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5163))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F5E02662A0>)
2024-05-10 08:34:32,725:INFO:Checking exceptions
2024-05-10 08:34:32,725:INFO:Preloading libraries
2024-05-10 08:34:32,725:INFO:Set up data.
2024-05-10 08:34:32,725:INFO:Set up index.
2024-05-10 10:19:48,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 10:19:48,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 10:19:48,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 10:19:48,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-10 10:19:48,996:INFO:PyCaret RegressionExperiment
2024-05-10 10:19:48,996:INFO:Logging name: reg-default-name
2024-05-10 10:19:48,996:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-10 10:19:48,996:INFO:version 3.3.2
2024-05-10 10:19:48,996:INFO:Initializing setup()
2024-05-10 10:19:48,996:INFO:self.USI: f95b
2024-05-10 10:19:48,996:INFO:self._variable_keys: {'memory', 'log_plots_param', 'X_test', 'fold_generator', 'pipeline', 'X', 'logging_param', 'transform_target_param', 'seed', 'fold_shuffle_param', 'exp_id', 'y_train', 'gpu_param', 'n_jobs_param', 'y_test', 'USI', 'idx', 'exp_name_log', 'y', '_ml_usecase', 'gpu_n_jobs_param', 'fold_groups_param', 'target_param', 'data', 'html_param', 'X_train', '_available_plots'}
2024-05-10 10:19:48,996:INFO:Checking environment
2024-05-10 10:19:48,996:INFO:python_version: 3.11.9
2024-05-10 10:19:48,996:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-05-10 10:19:48,996:INFO:machine: AMD64
2024-05-10 10:19:49,006:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-10 10:19:49,006:INFO:Memory: svmem(total=7947747328, available=2216931328, percent=72.1, used=5730816000, free=2216931328)
2024-05-10 10:19:49,006:INFO:Physical Core: 6
2024-05-10 10:19:49,006:INFO:Logical Core: 6
2024-05-10 10:19:49,006:INFO:Checking libraries
2024-05-10 10:19:49,006:INFO:System:
2024-05-10 10:19:49,006:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-05-10 10:19:49,006:INFO:executable: C:\Users\Ana\AppData\Local\Programs\Python\Python311\python.exe
2024-05-10 10:19:49,006:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-10 10:19:49,006:INFO:PyCaret required dependencies:
2024-05-10 10:19:49,066:INFO:                 pip: 24.0
2024-05-10 10:19:49,066:INFO:          setuptools: 65.5.0
2024-05-10 10:19:49,066:INFO:             pycaret: 3.3.2
2024-05-10 10:19:49,066:INFO:             IPython: 8.24.0
2024-05-10 10:19:49,066:INFO:          ipywidgets: 8.1.2
2024-05-10 10:19:49,066:INFO:                tqdm: 4.66.4
2024-05-10 10:19:49,066:INFO:               numpy: 1.26.4
2024-05-10 10:19:49,066:INFO:              pandas: 2.1.4
2024-05-10 10:19:49,066:INFO:              jinja2: 3.1.4
2024-05-10 10:19:49,066:INFO:               scipy: 1.11.4
2024-05-10 10:19:49,066:INFO:              joblib: 1.3.2
2024-05-10 10:19:49,066:INFO:             sklearn: 1.4.2
2024-05-10 10:19:49,066:INFO:                pyod: 1.1.3
2024-05-10 10:19:49,066:INFO:            imblearn: 0.12.2
2024-05-10 10:19:49,066:INFO:   category_encoders: 2.6.3
2024-05-10 10:19:49,066:INFO:            lightgbm: 4.3.0
2024-05-10 10:19:49,066:INFO:               numba: 0.59.1
2024-05-10 10:19:49,066:INFO:            requests: 2.31.0
2024-05-10 10:19:49,066:INFO:          matplotlib: 3.7.5
2024-05-10 10:19:49,066:INFO:          scikitplot: 0.3.7
2024-05-10 10:19:49,066:INFO:         yellowbrick: 1.5
2024-05-10 10:19:49,066:INFO:              plotly: 5.22.0
2024-05-10 10:19:49,066:INFO:    plotly-resampler: Not installed
2024-05-10 10:19:49,066:INFO:             kaleido: 0.2.1
2024-05-10 10:19:49,066:INFO:           schemdraw: 0.15
2024-05-10 10:19:49,066:INFO:         statsmodels: 0.14.2
2024-05-10 10:19:49,066:INFO:              sktime: 0.26.0
2024-05-10 10:19:49,066:INFO:               tbats: 1.1.3
2024-05-10 10:19:49,066:INFO:            pmdarima: 2.0.4
2024-05-10 10:19:49,066:INFO:              psutil: 5.9.8
2024-05-10 10:19:49,066:INFO:          markupsafe: 2.1.5
2024-05-10 10:19:49,066:INFO:             pickle5: Not installed
2024-05-10 10:19:49,066:INFO:         cloudpickle: 3.0.0
2024-05-10 10:19:49,066:INFO:         deprecation: 2.1.0
2024-05-10 10:19:49,066:INFO:              xxhash: 3.4.1
2024-05-10 10:19:49,066:INFO:           wurlitzer: Not installed
2024-05-10 10:19:49,066:INFO:PyCaret optional dependencies:
2024-05-10 10:19:49,076:INFO:                shap: Not installed
2024-05-10 10:19:49,076:INFO:           interpret: Not installed
2024-05-10 10:19:49,076:INFO:                umap: Not installed
2024-05-10 10:19:49,076:INFO:     ydata_profiling: Not installed
2024-05-10 10:19:49,076:INFO:  explainerdashboard: Not installed
2024-05-10 10:19:49,076:INFO:             autoviz: Not installed
2024-05-10 10:19:49,076:INFO:           fairlearn: Not installed
2024-05-10 10:19:49,076:INFO:          deepchecks: Not installed
2024-05-10 10:19:49,076:INFO:             xgboost: Not installed
2024-05-10 10:19:49,076:INFO:            catboost: Not installed
2024-05-10 10:19:49,076:INFO:              kmodes: Not installed
2024-05-10 10:19:49,076:INFO:             mlxtend: Not installed
2024-05-10 10:19:49,076:INFO:       statsforecast: Not installed
2024-05-10 10:19:49,076:INFO:        tune_sklearn: Not installed
2024-05-10 10:19:49,076:INFO:                 ray: Not installed
2024-05-10 10:19:49,076:INFO:            hyperopt: Not installed
2024-05-10 10:19:49,076:INFO:              optuna: Not installed
2024-05-10 10:19:49,076:INFO:               skopt: Not installed
2024-05-10 10:19:49,076:INFO:              mlflow: Not installed
2024-05-10 10:19:49,076:INFO:              gradio: Not installed
2024-05-10 10:19:49,076:INFO:             fastapi: Not installed
2024-05-10 10:19:49,076:INFO:             uvicorn: Not installed
2024-05-10 10:19:49,076:INFO:              m2cgen: Not installed
2024-05-10 10:19:49,076:INFO:           evidently: Not installed
2024-05-10 10:19:49,076:INFO:               fugue: Not installed
2024-05-10 10:19:49,076:INFO:           streamlit: Not installed
2024-05-10 10:19:49,076:INFO:             prophet: Not installed
2024-05-10 10:19:49,076:INFO:None
2024-05-10 10:19:49,076:INFO:Set up data.
2024-05-10 10:19:49,086:INFO:Set up folding strategy.
2024-05-10 10:19:49,086:INFO:Set up train/test split.
2024-05-10 10:19:49,086:INFO:Set up index.
2024-05-10 10:19:49,096:INFO:Assigning column types.
2024-05-10 10:19:49,096:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-10 10:19:49,096:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,096:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,106:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,166:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,216:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,216:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,216:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,226:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,276:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,326:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-10 10:19:49,336:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,336:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,396:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,446:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,446:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,506:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,556:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-10 10:19:49,566:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,616:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,676:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,737:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,777:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-10 10:19:49,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:49,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:49,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:50,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-10 10:19:50,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,007:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-10 10:19:50,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:50,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,187:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-10 10:19:50,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,237:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-10 10:19:50,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,477:INFO:Preparing preprocessing pipeline...
2024-05-10 10:19:50,477:INFO:Set up simple imputation.
2024-05-10 10:19:50,477:INFO:Set up column name cleaning.
2024-05-10 10:19:50,507:INFO:Finished creating preprocessing pipeline.
2024-05-10 10:19:50,507:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Ana\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-05-10 10:19:50,507:INFO:Creating final display dataframe.
2024-05-10 10:19:50,578:INFO:Setup _display_container:                     Description             Value
0                    Session id              3596
1                        Target              Pret
2                   Target type        Regression
3           Original data shape         (1154, 7)
4        Transformed data shape         (1154, 7)
5   Transformed train set shape          (807, 7)
6    Transformed test set shape          (347, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              f95b
2024-05-10 10:19:50,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-10 10:19:50,808:INFO:setup() successfully completed in 1.81s...............
2024-05-10 10:20:01,301:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:52: UserWarning: Glyph 13 () missing from current font.
  plt.tight_layout()

2024-05-10 10:20:01,342:WARNING:C:\Users\Ana\Desktop\House-pricing-prediction-master\Site\PY\server\graphgenerator.py:53: UserWarning: Glyph 13 () missing from current font.
  plt.savefig('..\..\Photos\output10.png')

2024-05-10 10:20:06,091:INFO:Initializing create_model()
2024-05-10 10:20:06,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 10:20:06,091:INFO:Checking exceptions
2024-05-10 10:20:06,091:INFO:Importing libraries
2024-05-10 10:20:06,091:INFO:Copying training dataset
2024-05-10 10:20:06,091:INFO:Defining folds
2024-05-10 10:20:06,091:INFO:Declaring metric variables
2024-05-10 10:20:06,091:INFO:Importing untrained model
2024-05-10 10:20:06,091:INFO:Extra Trees Regressor Imported successfully
2024-05-10 10:20:06,091:INFO:Starting cross validation
2024-05-10 10:20:06,101:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 10:20:09,646:INFO:Calculating mean and std
2024-05-10 10:20:09,649:INFO:Creating metrics dataframe
2024-05-10 10:20:09,649:INFO:Finalizing model
2024-05-10 10:20:09,729:INFO:Uploading results into container
2024-05-10 10:20:09,729:INFO:Uploading model into container now
2024-05-10 10:20:09,729:INFO:_master_model_container: 1
2024-05-10 10:20:09,729:INFO:_display_container: 2
2024-05-10 10:20:09,729:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:09,739:INFO:create_model() successfully completed......................................
2024-05-10 10:20:09,844:INFO:Initializing tune_model()
2024-05-10 10:20:09,844:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3596), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-10 10:20:09,844:INFO:Checking exceptions
2024-05-10 10:20:09,844:INFO:Copying training dataset
2024-05-10 10:20:09,849:INFO:Checking base model
2024-05-10 10:20:09,849:INFO:Base model : Extra Trees Regressor
2024-05-10 10:20:09,849:INFO:Declaring metric variables
2024-05-10 10:20:09,849:INFO:Defining Hyperparameters
2024-05-10 10:20:09,944:INFO:Tuning with n_jobs=-1
2024-05-10 10:20:09,944:INFO:Initializing RandomizedSearchCV
2024-05-10 10:20:16,288:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'absolute_error', 'actual_estimator__bootstrap': False}
2024-05-10 10:20:16,288:INFO:Hyperparameter search completed
2024-05-10 10:20:16,288:INFO:SubProcess create_model() called ==================================
2024-05-10 10:20:16,288:INFO:Initializing create_model()
2024-05-10 10:20:16,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3596), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019750E6FE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 7, 'criterion': 'absolute_error', 'bootstrap': False})
2024-05-10 10:20:16,288:INFO:Checking exceptions
2024-05-10 10:20:16,288:INFO:Importing libraries
2024-05-10 10:20:16,288:INFO:Copying training dataset
2024-05-10 10:20:16,294:INFO:Defining folds
2024-05-10 10:20:16,294:INFO:Declaring metric variables
2024-05-10 10:20:16,294:INFO:Importing untrained model
2024-05-10 10:20:16,294:INFO:Declaring custom model
2024-05-10 10:20:16,294:INFO:Extra Trees Regressor Imported successfully
2024-05-10 10:20:16,294:INFO:Starting cross validation
2024-05-10 10:20:16,294:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 10:20:16,962:INFO:Calculating mean and std
2024-05-10 10:20:16,962:INFO:Creating metrics dataframe
2024-05-10 10:20:16,962:INFO:Finalizing model
2024-05-10 10:20:17,056:INFO:Uploading results into container
2024-05-10 10:20:17,056:INFO:Uploading model into container now
2024-05-10 10:20:17,056:INFO:_master_model_container: 2
2024-05-10 10:20:17,056:INFO:_display_container: 3
2024-05-10 10:20:17,056:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=7,
                    min_impurity_decrease=0.02, min_samples_leaf=2,
                    n_estimators=40, n_jobs=-1, random_state=3596)
2024-05-10 10:20:17,056:INFO:create_model() successfully completed......................................
2024-05-10 10:20:17,131:INFO:SubProcess create_model() end ==================================
2024-05-10 10:20:17,131:INFO:choose_better activated
2024-05-10 10:20:17,131:INFO:SubProcess create_model() called ==================================
2024-05-10 10:20:17,131:INFO:Initializing create_model()
2024-05-10 10:20:17,131:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3596), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 10:20:17,131:INFO:Checking exceptions
2024-05-10 10:20:17,131:INFO:Importing libraries
2024-05-10 10:20:17,131:INFO:Copying training dataset
2024-05-10 10:20:17,131:INFO:Defining folds
2024-05-10 10:20:17,131:INFO:Declaring metric variables
2024-05-10 10:20:17,131:INFO:Importing untrained model
2024-05-10 10:20:17,131:INFO:Declaring custom model
2024-05-10 10:20:17,131:INFO:Extra Trees Regressor Imported successfully
2024-05-10 10:20:17,131:INFO:Starting cross validation
2024-05-10 10:20:17,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 10:20:17,611:INFO:Calculating mean and std
2024-05-10 10:20:17,611:INFO:Creating metrics dataframe
2024-05-10 10:20:17,613:INFO:Finalizing model
2024-05-10 10:20:17,699:INFO:Uploading results into container
2024-05-10 10:20:17,699:INFO:Uploading model into container now
2024-05-10 10:20:17,699:INFO:_master_model_container: 3
2024-05-10 10:20:17,699:INFO:_display_container: 4
2024-05-10 10:20:17,699:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:17,699:INFO:create_model() successfully completed......................................
2024-05-10 10:20:17,785:INFO:SubProcess create_model() end ==================================
2024-05-10 10:20:17,785:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3596) result for R2 is 0.7421
2024-05-10 10:20:17,785:INFO:ExtraTreesRegressor(criterion='absolute_error', max_depth=7,
                    min_impurity_decrease=0.02, min_samples_leaf=2,
                    n_estimators=40, n_jobs=-1, random_state=3596) result for R2 is 0.6602
2024-05-10 10:20:17,785:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3596) is best model
2024-05-10 10:20:17,785:INFO:choose_better completed
2024-05-10 10:20:17,785:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-10 10:20:17,795:INFO:_master_model_container: 3
2024-05-10 10:20:17,795:INFO:_display_container: 3
2024-05-10 10:20:17,795:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:17,795:INFO:tune_model() successfully completed......................................
2024-05-10 10:20:17,866:INFO:Initializing finalize_model()
2024-05-10 10:20:17,866:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3596), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-10 10:20:17,866:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:17,866:INFO:Initializing create_model()
2024-05-10 10:20:17,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=3596), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 10:20:17,866:INFO:Checking exceptions
2024-05-10 10:20:17,866:INFO:Importing libraries
2024-05-10 10:20:17,866:INFO:Copying training dataset
2024-05-10 10:20:17,866:INFO:Defining folds
2024-05-10 10:20:17,866:INFO:Declaring metric variables
2024-05-10 10:20:17,866:INFO:Importing untrained model
2024-05-10 10:20:17,866:INFO:Declaring custom model
2024-05-10 10:20:17,866:INFO:Extra Trees Regressor Imported successfully
2024-05-10 10:20:17,866:INFO:Cross validation set to False
2024-05-10 10:20:17,866:INFO:Fitting Model
2024-05-10 10:20:17,959:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))])
2024-05-10 10:20:17,959:INFO:create_model() successfully completed......................................
2024-05-10 10:20:18,027:INFO:_master_model_container: 3
2024-05-10 10:20:18,027:INFO:_display_container: 3
2024-05-10 10:20:18,037:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))])
2024-05-10 10:20:18,037:INFO:finalize_model() successfully completed......................................
2024-05-10 10:20:18,107:INFO:Initializing create_model()
2024-05-10 10:20:18,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 10:20:18,107:INFO:Checking exceptions
2024-05-10 10:20:18,107:INFO:Importing libraries
2024-05-10 10:20:18,107:INFO:Copying training dataset
2024-05-10 10:20:18,107:INFO:Defining folds
2024-05-10 10:20:18,107:INFO:Declaring metric variables
2024-05-10 10:20:18,107:INFO:Importing untrained model
2024-05-10 10:20:18,107:INFO:Random Forest Regressor Imported successfully
2024-05-10 10:20:18,107:INFO:Starting cross validation
2024-05-10 10:20:18,107:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 10:20:18,703:INFO:Calculating mean and std
2024-05-10 10:20:18,703:INFO:Creating metrics dataframe
2024-05-10 10:20:18,703:INFO:Finalizing model
2024-05-10 10:20:18,820:INFO:Uploading results into container
2024-05-10 10:20:18,820:INFO:Uploading model into container now
2024-05-10 10:20:18,825:INFO:_master_model_container: 4
2024-05-10 10:20:18,825:INFO:_display_container: 4
2024-05-10 10:20:18,825:INFO:RandomForestRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:18,825:INFO:create_model() successfully completed......................................
2024-05-10 10:20:18,895:INFO:Initializing tune_model()
2024-05-10 10:20:18,895:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3596), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-10 10:20:18,895:INFO:Checking exceptions
2024-05-10 10:20:18,895:INFO:Copying training dataset
2024-05-10 10:20:18,906:INFO:Checking base model
2024-05-10 10:20:18,906:INFO:Base model : Random Forest Regressor
2024-05-10 10:20:18,906:INFO:Declaring metric variables
2024-05-10 10:20:18,906:INFO:Defining Hyperparameters
2024-05-10 10:20:18,976:INFO:Tuning with n_jobs=-1
2024-05-10 10:20:18,976:INFO:Initializing RandomizedSearchCV
2024-05-10 10:20:28,209:INFO:best_params: {'actual_estimator__n_estimators': 300, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-10 10:20:28,209:INFO:Hyperparameter search completed
2024-05-10 10:20:28,209:INFO:SubProcess create_model() called ==================================
2024-05-10 10:20:28,209:INFO:Initializing create_model()
2024-05-10 10:20:28,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3596), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019751490B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 300, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-10 10:20:28,209:INFO:Checking exceptions
2024-05-10 10:20:28,209:INFO:Importing libraries
2024-05-10 10:20:28,209:INFO:Copying training dataset
2024-05-10 10:20:28,209:INFO:Defining folds
2024-05-10 10:20:28,209:INFO:Declaring metric variables
2024-05-10 10:20:28,209:INFO:Importing untrained model
2024-05-10 10:20:28,209:INFO:Declaring custom model
2024-05-10 10:20:28,209:INFO:Random Forest Regressor Imported successfully
2024-05-10 10:20:28,209:INFO:Starting cross validation
2024-05-10 10:20:28,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 10:20:29,416:INFO:Calculating mean and std
2024-05-10 10:20:29,416:INFO:Creating metrics dataframe
2024-05-10 10:20:29,416:INFO:Finalizing model
2024-05-10 10:20:29,713:INFO:Uploading results into container
2024-05-10 10:20:29,713:INFO:Uploading model into container now
2024-05-10 10:20:29,713:INFO:_master_model_container: 5
2024-05-10 10:20:29,713:INFO:_display_container: 5
2024-05-10 10:20:29,713:INFO:RandomForestRegressor(max_depth=8, min_impurity_decrease=0.0005,
                      min_samples_leaf=5, min_samples_split=7, n_estimators=300,
                      n_jobs=-1, random_state=3596)
2024-05-10 10:20:29,713:INFO:create_model() successfully completed......................................
2024-05-10 10:20:29,782:INFO:SubProcess create_model() end ==================================
2024-05-10 10:20:29,782:INFO:choose_better activated
2024-05-10 10:20:29,782:INFO:SubProcess create_model() called ==================================
2024-05-10 10:20:29,782:INFO:Initializing create_model()
2024-05-10 10:20:29,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3596), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 10:20:29,782:INFO:Checking exceptions
2024-05-10 10:20:29,782:INFO:Importing libraries
2024-05-10 10:20:29,782:INFO:Copying training dataset
2024-05-10 10:20:29,782:INFO:Defining folds
2024-05-10 10:20:29,782:INFO:Declaring metric variables
2024-05-10 10:20:29,782:INFO:Importing untrained model
2024-05-10 10:20:29,782:INFO:Declaring custom model
2024-05-10 10:20:29,782:INFO:Random Forest Regressor Imported successfully
2024-05-10 10:20:29,782:INFO:Starting cross validation
2024-05-10 10:20:29,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-10 10:20:30,428:INFO:Calculating mean and std
2024-05-10 10:20:30,428:INFO:Creating metrics dataframe
2024-05-10 10:20:30,428:INFO:Finalizing model
2024-05-10 10:20:30,549:INFO:Uploading results into container
2024-05-10 10:20:30,551:INFO:Uploading model into container now
2024-05-10 10:20:30,551:INFO:_master_model_container: 6
2024-05-10 10:20:30,551:INFO:_display_container: 6
2024-05-10 10:20:30,551:INFO:RandomForestRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:30,551:INFO:create_model() successfully completed......................................
2024-05-10 10:20:30,621:INFO:SubProcess create_model() end ==================================
2024-05-10 10:20:30,621:INFO:RandomForestRegressor(n_jobs=-1, random_state=3596) result for R2 is 0.7332
2024-05-10 10:20:30,621:INFO:RandomForestRegressor(max_depth=8, min_impurity_decrease=0.0005,
                      min_samples_leaf=5, min_samples_split=7, n_estimators=300,
                      n_jobs=-1, random_state=3596) result for R2 is 0.6901
2024-05-10 10:20:30,621:INFO:RandomForestRegressor(n_jobs=-1, random_state=3596) is best model
2024-05-10 10:20:30,621:INFO:choose_better completed
2024-05-10 10:20:30,621:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-10 10:20:30,631:INFO:_master_model_container: 6
2024-05-10 10:20:30,631:INFO:_display_container: 5
2024-05-10 10:20:30,631:INFO:RandomForestRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:30,631:INFO:tune_model() successfully completed......................................
2024-05-10 10:20:30,702:INFO:Initializing finalize_model()
2024-05-10 10:20:30,702:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3596), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-10 10:20:30,702:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=3596)
2024-05-10 10:20:30,712:INFO:Initializing create_model()
2024-05-10 10:20:30,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=3596), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-10 10:20:30,712:INFO:Checking exceptions
2024-05-10 10:20:30,712:INFO:Importing libraries
2024-05-10 10:20:30,712:INFO:Copying training dataset
2024-05-10 10:20:30,712:INFO:Defining folds
2024-05-10 10:20:30,712:INFO:Declaring metric variables
2024-05-10 10:20:30,712:INFO:Importing untrained model
2024-05-10 10:20:30,712:INFO:Declaring custom model
2024-05-10 10:20:30,712:INFO:Random Forest Regressor Imported successfully
2024-05-10 10:20:30,712:INFO:Cross validation set to False
2024-05-10 10:20:30,712:INFO:Fitting Model
2024-05-10 10:20:30,839:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))])
2024-05-10 10:20:30,839:INFO:create_model() successfully completed......................................
2024-05-10 10:20:30,915:INFO:_master_model_container: 6
2024-05-10 10:20:30,915:INFO:_display_container: 5
2024-05-10 10:20:30,915:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))])
2024-05-10 10:20:30,915:INFO:finalize_model() successfully completed......................................
2024-05-10 10:31:09,393:INFO:Initializing predict_model()
2024-05-10 10:31:09,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019756C14AE0>)
2024-05-10 10:31:09,393:INFO:Checking exceptions
2024-05-10 10:31:09,393:INFO:Preloading libraries
2024-05-10 10:31:09,393:INFO:Set up data.
2024-05-10 10:31:09,398:INFO:Set up index.
2024-05-10 10:31:09,543:INFO:Initializing predict_model()
2024-05-10 10:31:09,543:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019732449120>)
2024-05-10 10:31:09,543:INFO:Checking exceptions
2024-05-10 10:31:09,543:INFO:Preloading libraries
2024-05-10 10:31:09,543:INFO:Set up data.
2024-05-10 10:31:09,543:INFO:Set up index.
2024-05-10 10:49:47,834:INFO:Initializing predict_model()
2024-05-10 10:49:47,844:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001973F1F79C0>)
2024-05-10 10:49:47,844:INFO:Checking exceptions
2024-05-10 10:49:47,844:INFO:Preloading libraries
2024-05-10 10:49:47,874:INFO:Set up data.
2024-05-10 10:49:47,924:INFO:Set up index.
2024-05-10 10:49:48,425:INFO:Initializing predict_model()
2024-05-10 10:49:48,425:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001974FAA5C60>)
2024-05-10 10:49:48,425:INFO:Checking exceptions
2024-05-10 10:49:48,425:INFO:Preloading libraries
2024-05-10 10:49:48,425:INFO:Set up data.
2024-05-10 10:49:48,425:INFO:Set up index.
2024-05-10 10:52:38,224:INFO:Initializing predict_model()
2024-05-10 10:52:38,224:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001974FAA5BC0>)
2024-05-10 10:52:38,224:INFO:Checking exceptions
2024-05-10 10:52:38,224:INFO:Preloading libraries
2024-05-10 10:52:38,224:INFO:Set up data.
2024-05-10 10:52:38,224:INFO:Set up index.
2024-05-10 10:52:38,344:INFO:Initializing predict_model()
2024-05-10 10:52:38,344:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001973F1F79C0>)
2024-05-10 10:52:38,344:INFO:Checking exceptions
2024-05-10 10:52:38,344:INFO:Preloading libraries
2024-05-10 10:52:38,344:INFO:Set up data.
2024-05-10 10:52:38,344:INFO:Set up index.
2024-05-10 10:59:27,146:INFO:Initializing predict_model()
2024-05-10 10:59:27,146:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019756C14360>)
2024-05-10 10:59:27,146:INFO:Checking exceptions
2024-05-10 10:59:27,146:INFO:Preloading libraries
2024-05-10 10:59:27,146:INFO:Set up data.
2024-05-10 10:59:27,146:INFO:Set up index.
2024-05-10 10:59:27,276:INFO:Initializing predict_model()
2024-05-10 10:59:27,276:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001974FAA5BC0>)
2024-05-10 10:59:27,276:INFO:Checking exceptions
2024-05-10 10:59:27,276:INFO:Preloading libraries
2024-05-10 10:59:27,276:INFO:Set up data.
2024-05-10 10:59:27,276:INFO:Set up index.
2024-05-10 11:46:11,487:INFO:Initializing predict_model()
2024-05-10 11:46:11,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001974FAA5BC0>)
2024-05-10 11:46:11,487:INFO:Checking exceptions
2024-05-10 11:46:11,487:INFO:Preloading libraries
2024-05-10 11:46:11,497:INFO:Set up data.
2024-05-10 11:46:11,527:INFO:Set up index.
2024-05-10 11:46:12,089:INFO:Initializing predict_model()
2024-05-10 11:46:12,089:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001973D468F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Suprafata utila', 'Tip incalzire',
                                             'Suprafata teren (m2)',
                                             'Anul constructiei',
                                             'Numarul de camere',
                                             'Aer conditionat'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=3596))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001973F1F7740>)
2024-05-10 11:46:12,089:INFO:Checking exceptions
2024-05-10 11:46:12,089:INFO:Preloading libraries
2024-05-10 11:46:12,089:INFO:Set up data.
2024-05-10 11:46:12,099:INFO:Set up index.
